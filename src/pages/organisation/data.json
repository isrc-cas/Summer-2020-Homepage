{
  "orgList": [
    {
      "anchor": "aosc",
      "img": "aosc.jpg",
      "title": "安同开源社区（AOSC）",
      "project_url": "https://wiki.aosc.io/zh/ospp-2020-projects",
      "url": "https://aosc.io",
      "description": "Linux 发行版 AOSC OS 的开源社区。",
      "full_des": "安同开源社区（Anthon Open Source Community, 简称 AOSC）是围绕社区项目 AOSC OS 形成的开源社区。AOSC OS 是一款遵循简约、本地化、包容、可持续及精制原则独立开发的通用 Linux 发行版，致力于改善开源软件的使用体验。",
      "tech_tag": [
        "Linux",
        "dpkg",
        "L10n",
        "Container",
        "CI/CD",
        "Automation",
        "C",
        "Python",
        "Bash",
        "Vala",
        "GTK"
      ],
      "domain_tag": [
        "Linux 发行版",
        "中文本地化"
      ],
      "mail_list": "discussions@lists.aosc.io",
      "email": "discussions@lists.aosc.io",
      "project_list": [
        {
          "name": "发行版构建自动化：打包调度器",
          "difficulty": "高",
          "mentor": "Dingyuan Wang",
          "contact": "gumblex@aosc.io",
          "student_count": 0,
          "description": "社区主要项目 AOSC OS 的一部分构建过程仍然依赖手工操作。即使大部分繁杂的工作已经能为数个社区项目很好地完成，AOSC OS 仍然面临着社区人手严重不足而带来的更新速度不足及潜在质量缺陷问题。于是我们希望建立一套切合社区实际情况的，能将发行版构建 95% 的操作自动化的基础设施来解决上述问题，以求 AOSC OS 的可持续发展。目前分布式打包方案中包括构建机、调度器、软件包仓库管理和触发器四个部分，其中构建机和调度器是最重要的部分。本项目为编写一套功能较为完整的软件包构建调度器，以实现像 BOINC 分布式科学计算那样，自动分配打包任务、回收二进制软件包和打包时的日志和统计信息。调度器的调度模型、依赖解析已经实现，需要设计并实现的是接口和管理功能。",
          "update_time": "2020-05-27",
          "label": "2007255"
        },
        {
          "name": "发行版构建自动化：自动化测试框架",
          "difficulty": "中",
          "mentor": "Dingyuan Wang",
          "contact": "gumblex@aosc.io",
          "student_count": 0,
          "description": "目前 AOSC 的软件包存在一定的质量问题，且已经有了初步的排查方案。我们希望在编译时或编译后主动地将质量问题检测出来，停止编译和发布。本项目需要在当前的打包流程中增加测试环节来确保软件包的质量。",
          "update_time": "2020-05-17",
          "label": "2007038"
        },
        {
          "name": "安装程序 DeployKit 的实现",
          "difficulty": "中",
          "mentor": "黎民雍（以俊德）",
          "contact": "lmy441900@aosc.io",
          "student_count": 0,
          "description": "社区项目 DeployKit 是未来 AOSC OS 的安装和恢复程序。该程序有两种模式：1. 作为安装向导指引用户正确地安装 AOSC OS； 2. 作为恢复向导指引用户在轻微的系统配置错误中恢复系统； 目前，DeployKit 使用 GTK 3 和 Vala 编程语言基本实现了安装向导的图形用户界面，但尚未实现安装向导的实际操作部分（即 DeployKit 还只是个“空壳”）。本项目的目标是按照社区提供的 AOSC OS 安装指引，将这部分原本需要手动操作的安装流程实现到 DeployKit 上。",
          "update_time": "2020-05-13",
          "label": "2007039"
        },
        {
          "name": "自由及开源软件简中本地化工作",
          "difficulty": "低",
          "mentor": "白铭骢",
          "contact": "jeffbai@aosc.io",
          "co-mentor": "刘子兴 <liushuyu@aosc.io>",
          "student_count": 0,
          "description": "当前我国国内有相当数量的 Linux 及各大开源或自由软件 (F/OSS) 使用者，但在使用过程中，用户们不难发现，各种软件的简中翻译及本地化质量参差不齐，错漏繁多。尤其主流桌面环境如 GNOME 及 KDE 简中翻译率并不理想；而又有一些如 NetSurf 的知名开源项目则完全没有翻译。该项目的主要目的是改善当前本地化质量及覆盖率。",
          "update_time": "2020-05-13",
          "label": "2007040"
        },
        {
          "name": "为 libinput 框架实现“划圈滚动 (Circular Srolling)”",
          "difficulty": "中",
          "mentor": "白铭骢",
          "contact": "jeffbai@aosc.io",
          "co-mentor": "刘子兴 <liushuyu@aosc.io>",
          "student_count": 0,
          "description": "在 Wayland 及如 GNOME 等现代桌面的推动作用下，libinput 即将取代当前诸多碎片化的 X11 输入驱动（如 evdev 及 synaptics，甚至是更老的 mouse 及 keyboard），为用户及开发者带来一定便利。但在 libinput 的实现过程中，上游开发者由于人力有限，选择抛弃了一些他们主观认为不常见的硬件特性的支持。而被抛弃的特性之一是“划圈滚动”，即在触摸板上用手指划圈滚动（类似 iPod 的操作），这一特性在滚动长页面时可有效提高操作精度并降低疲劳。",
          "update_time": "2020-05-13",
          "label": "2007041"
        },
        {
          "name": "半自动软件包退休、封存与整理系统",
          "difficulty": "低",
          "mentor": "张顺然 Staph. aureus",
          "contact": "staph@aosc.io",
          "student_count": 0,
          "description": "软件包更新在现代社会已经不再是什么稀奇事。每天，无数软件包获得更新，有些是修复漏洞，有些是增加功能，还有些是性能优化等等。然而，并不是每一个软件包都有充分通过回归测试（Regression test），而有些更新则是主动放弃对于旧硬体的支援。由于系统的软件包仓库亦为业余爱好者维护，打包者的技术、使用的平台与配置等等亦可能导致部分软件包更新后损坏。作为一个由历史专家带领的专业考古社区，我们提供了大量的软件包供各种不同时代与架构的硬体使用。以往，为了保证大家可以方便的切换各个版本的软件包，大量的老包被留在了系统的软件源中。再加上 AOSC 支援的架构数量在某段时间的爆发，于 2017 年时，我们的软件包仓库达到了惊人的数十 GiB 。庞大的体积对于我们自身以及各种收录了我们的开源镜像站均造成了压力。我们因此启动了Anthon Optical Storage Center (AOSC Archive) 项目，将过去的软件包从软件源中移除并收录进入 Blu-ray Disc 进行冷储存。然而使用冷储存造成的不便亦是显而易见的。如果出于各种原因，我们需要取回一个软件包进行测试，那么将会需要比较费事的人工寻找目录并取回对应光盘。另外，冷储存的成本亦是比较高的。在近期的一次检查时，我们发现有约 1%-5% 的包可能由于各种原因，在收录进入 BD 时出现了重复收录的情况。这些重复收录的包既提高了维护成本，又不具有价值。同样，整理需要取回的软件包目前也是一个非常耗费人力的工作。每次退休包时，需要寻找每个架构中有收到更新的包，并移除老包。需要把这些包适当分类并分卷放好，以便于未来取回时不需要跨越多张光盘。这一个项目就是为了解决该问题而产生的。我们希望这个系统：可以较为方便的将软件包退休，并且避免不小心移除不应当被移除的软件包; 可以提供检查重复的功能，以避免将一个软件包重复退休多次，白白占用资源; 可以提供一个软件包搜寻功能，可以方便的告知用户，需要的软件包有哪些版本，分别位于哪些光盘中；可以在未来用在许多发行版上，让每个发行版都可以留下过去的软件包，在未来给大家的老机器使用。另外，我们还希望这个系统可以快速提供一个「最小软件仓库」，仅包含最新版本的软件包，占用最少的空间。",
          "update_time": "2020-05-18",
          "label": "2007042"
        }
      ]
    },
    {
      "anchor": "apache-apisix",
      "img": "ApacheAPISIX.jpg",
      "title": "Apache APISIX (incubating)",
      "project_url": "https://cwiki.apache.org/confluence/display/APISIX/Open+Source+Promotion+Plan+-+Summer+2020+Tasks",
      "url": "http://apisix.apache.org/zh/",
      "description": "云原生，高性能，可扩展微服务API。",
      "full_des": "Apache APISIX (incubating) 是云原生、高性能、可扩展的微服务 API 网关，它基于 Nginx 和 etcd 来实现，具备动态路由、插件热加载和 gRPC 代理和协议转换功能，更适合微服务体系下的 API 管理。",
      "tech_tag": [
        "网关",
        "Nginx",
        "C",
        "Lua",
        "API",
        "Golang",
        "k8s"
      ],
      "domain_tag": [
        "中间件",
        "微服务"
      ],
      "mail_list": "dev@apisix.apache.org",
      "email": "wenming@apache.org",
      "project_list": [
        {
          "name": "持续集成（CI）系统从 travis 迁移到 GitHub actions",
          "difficulty": "中",
          "mentor": "温铭",
          "contact": "wenming@apache.org",
          "student_count": 1,
          "description": "将 Apache APISIX 相关的开源项目的 CI 进行迁移，包括 apisix， apisix-docker 和 apisix-website。",
          "update_time": "2020-05-13",
          "label": "2001001"
        },
        {
          "name": "支持在线调试 API",
          "difficulty": "中",
          "mentor": "王院生",
          "contact": "membphis@apache.org",
          "student_count": 3,
          "description": "允许用户在线完成 API 的 DEBUG。它非常适合辅助用户学习了解 Apache APISIX 的配置规则以及使用方法。",
          "update_time": "2020-05-13",
          "label": "2001002"
        },
        {
          "name": "在线捕获HTTP流量",
          "difficulty": "高",
          "mentor": "罗泽轩",
          "contact": "spacewander@apache.org",
          "student_count": 1,
          "description": "允许用户通过配置，捕获某一个route或service中符合特定request header/response header/upstream response time/request time的请求和响应的内容。类似于 envoy 的 traffic tapping 功能：https://www.envoyproxy.io/docs/envoy/latest/operations/traffic_tapping 我们只需实现其中的一个子集，支持 HTTP 即可。",
          "update_time": "2020-05-13",
          "label": "2001003"
        },
        {
          "name": "支持 etcd v3 协议",
          "difficulty": "中",
          "mentor": "陈军旭",
          "contact": "chenjunxu@apache.org",
          "student_count": 2,
          "description": "使用 lua-resty-etcd 库中的 v3 版本，使 Apache APISIX 支持 etcd v3 协议。",
          "update_time": "2020-05-13",
          "label": "2001004"
        },
        {
          "name": "Dashboard 结合 GitHub Actions 实现 代码格式化、构建测试",
          "difficulty": "中",
          "mentor": "琚致远",
          "contact": "juzhiyuan@apache.org",
          "student_count": 0,
          "description": "使用 GitHub Actions 对 PR、push commit 做 Lint、Build Test",
          "update_time": "2020-05-19",
          "label": "2001140"
        },
        {
          "name": "Dashboard 增加 commit 内容检查",
          "difficulty": "中",
          "mentor": "琚致远",
          "contact": "juzhiyuan@apache.org",
          "student_count": 0,
          "description": "增加 commit message checker，以规范贡献者 commit 格式。",
          "update_time": "2020-05-19",
          "label": "2001141"
        },
        {
          "name": "网站本地化",
          "difficulty": "低",
          "mentor": "琚致远",
          "contact": "juzhiyuan@apache.org",
          "hot_index": 0,
          "description": "翻译以下页面为指定语言： 下载页 为 中文； 2FA 为 中文； 安全指南 为 中文； 贡献者指南 为 中文； 发布指南 为 英文；",
          "update_time": "2020-05-27",
          "label": "2001250"
        }
      ]
    },
    {
      "anchor": "apache-ds",
      "img": "dolphin.jpg",
      "title": "Apache DolphinScheduler (incubating)",
      "project_url": "https://cwiki.apache.org/confluence/display/DOLPHINSCHEDULER/Open+Source+Promotion+Plan+-+Summer+2020+Tasks",
      "url": "https://dolphinscheduler.apache.org/",
      "description": "可视化DAG工作流任务调度系统。",
      "full_des": "Apache DolphinScheduler (incubating) 是一个分布式去中心化，易扩展的可视化DAG工作流任务调度系统。致力于解决数据处理流程中错综复杂的依赖关系，使调度系统在数据处理流程中开箱即用。",
      "tech_tag": [
        "分布式任务调度",
        "大数据任务调度",
        "工作流任务调度"
      ],
      "domain_tag": [
        "大数据",
        "大数据任务调度"
      ],
      "mail_list": "dev@dolphinscheduler.apache.org",
      "email": "dev@dolphinscheduler.apache.org",
      "project_list": [
        {
          "name": "延时等待（后端）",
          "difficulty": "低",
          "mentor": "Jave-Chen",
          "contact": "kejia.chen@foxmail.com",
          "hot_index": 0,
          "description": "提供后端接口。在任务节点中新增“延时等待”的属性，支持任务在开始后一段时间内等待前置任务完成。针对调度（任务）执行时，前置依赖没有就绪的情况下，当前任务等待一段时间，在等待时间内，如前置任务就绪，则开始执行当前任务。",
          "update_time": "2020-05-27",
          "label": "2002005"
        },
        {
          "name": "延时等待（前端）",
          "difficulty": "低",
          "mentor": "Jave-Chen",
          "contact": "kejia.chen@foxmail.com",
          "student_count": 0,
          "description": "开发前端页面，调用后端接口。在任务节点中新增“延时等待”的属性，支持任务在开始后一段时间内等待前置任务完成。",
          "update_time": "2020-05-16",
          "label": "2002006"
        },
        {
          "name": "DS 任务节点说明文档编写",
          "description": "基于现有文档和 DS 功能，补充文档，对 DS 现有任务节点进行详细说明。",
          "difficulty": "低",
          "mentor": "Jave-Chen",
          "contact": "kejia.chen@foxmail.com",
          "student_count": 0,
          "update_time": "2020-05-13",
          "label": "2002007"
        },
        {
          "name": "用户自助注册（后端）",
          "description": "提供后端接口供用户自助注册。通过用户自助的注册的方式，用户可以创建自己的账号。但是需要管理员审核通过后，账号才能登陆系统。注册信息包括：用户名，密码，邮箱",
          "difficulty": "中",
          "mentor": "Lidong Dai",
          "contact": "lidongdai@apache.org",
          "hot_index": 0,
          "update_time": "2020-05-27",
          "label": "2002251"
        },
        {
          "name": "工作流标签（后端）",
          "description": "提供后端接口供用户用标签对工作流分类。工作流标签主要是解决当工作流数量太多时，工作流难以查找的问题。通过标签，用户可以快速查找/筛选对应的工作流。",
          "difficulty": "中",
          "mentor": "Gabry.wu",
          "contact": "wu_shao_jie@qq.com",
          "hot_index": 0,
          "update_time": "2020-05-27",
          "label": "2002252"
        },
        {
          "name": "弱依赖类型任务（后端）",
          "description": "弱依赖类型任务为：1）弱依赖任务的执行结果不影响所属工作流的执行结果。即：当弱依赖的任务执行失败时，整个工作流的后续依赖也可以正常执行。2）弱依赖任务失败后，同样可以重跑。",
          "difficulty": "中",
          "mentor": "Gabry.wu",
          "contact": "wu_shao_jie@qq.com",
          "hot_index": 0,
          "update_time": "2020-05-27",
          "label": "2002253"
        },
        {
          "name": "任务空跑（后端）",
          "description": "提供后端接口。在对工作流测试时，支持部分任务不执行具体任务内容，直接更新任务状态为成功。",
          "difficulty": "中",
          "mentor": "Jave-Chen",
          "contact": "kejia.chen@foxmail.com",
          "student_count": 0,
          "update_time": "2020-05-16",
          "label": "2002008"
        },
        {
          "name": "任务空跑（前端）",
          "description": "开发前端页面，调用后端接口。在对工作流测试时，支持部分任务不执行具体任务内容，直接更新任务状态为成功。",
          "difficulty": "低",
          "mentor": "Jave-Chen",
          "contact": "kejia.chen@foxmail.com",
          "student_count": 0,
          "update_time": "2020-05-16",
          "label": "2002009"
        },
        {
          "name": "强制成功（后端）",
          "description": "提供后端接口。对于失败的任务，可手工“强制成功”，后续依赖即可自动执行。",
          "difficulty": "中",
          "mentor": "Jave-Chen",
          "contact": "kejia.chen@foxmail.com",
          "student_count": 0,
          "update_time": "2020-05-16",
          "label": "2002010"
        },
        {
          "name": "强制成功（前端）",
          "description": "开发前端页面，调用后端接口。对于失败的任务，可手工“强制成功”，后续依赖即可自动执行。",
          "difficulty": "低",
          "mentor": "Jave-Chen",
          "contact": "kejia.chen@foxmail.com",
          "student_count": 0,
          "update_time": "2020-05-16",
          "label": "2002011"
        },
        {
          "name": "新任务节点开发文档整理",
          "description": "基于代码和 PR ，整理新任务节点开发文档。",
          "difficulty": "中",
          "mentor": "Jave-Chen",
          "contact": "kejia.chen@foxmail.com",
          "student_count": 0,
          "update_time": "2020-05-13",
          "label": "2002012"
        },
        {
          "name": "查询所有上下游依赖（后端）",
          "description": "提供后端接口。查询任务的所有上下游依赖。",
          "difficulty": "高",
          "mentor": "Jave-Chen",
          "contact": "kejia.chen@foxmail.com",
          "student_count": 0,
          "update_time": "2020-05-16",
          "label": "2002013"
        },
        {
          "name": "查询所有上下游依赖（前端）",
          "description": "开发前端页面，调用后端接口。查询任务的所有上下游依赖。",
          "difficulty": "低",
          "mentor": "Jave-Chen",
          "contact": "kejia.chen@foxmail.com",
          "student_count": 0,
          "update_time": "2020-05-16",
          "label": "2002014"
        },
        {
          "name": "任务结果/变量传递（后端）",
          "description": "提供后端接口。支持任务节点间传递变量/任务执行结果。",
          "difficulty": "高",
          "mentor": "Jave-Chen",
          "contact": "kejia.chen@foxmail.com",
          "student_count": 0,
          "update_time": "2020-05-16",
          "label": "2002015"
        },
        {
          "name": "任务结果/变量传递（前端）",
          "description": "开发前端页面，调用后端接口。支持任务节点间传递变量/任务执行结果。",
          "difficulty": "低",
          "mentor": "Jave-Chen",
          "contact": "kejia.chen@foxmail.com",
          "student_count": 0,
          "update_time": "2020-05-16",
          "label": "2002016"
        },
        {
          "name": "可视化部署",
          "description": "支持可视化部署 DS。",
          "difficulty": "高",
          "mentor": "Jave-Chen",
          "contact": "kejia.chen@foxmail.com",
          "student_count": 0,
          "update_time": "2020-05-13",
          "label": "2002017"
        },
        {
          "name": "工作流、任务执行时间评估",
          "description": "根据任务的历史执行记录，预测当前实例的执行时长，并根据预估值、实际值调整算法参数；根据工作流的历史执行记录，预测当前工作流的执行时长，并根据预估值、实际值调整算法参数；根据工作流任务的预估执行时间，找出当前工作流的关键任务，即最影响整体进度的任务",
          "difficulty": "高",
          "mentor": "Gabry.wu",
          "contact": "wu_shao_jie@qq.com",
          "student_count": 0,
          "update_time": "2020-05-16",
          "label": "2002018"
        }
      ]
    },
    {
      "anchor": "apache-pulsar",
      "img": "pulsar.jpg",
      "title": "Apache Pulsar",
      "project_url": "https://github.com/apache/pulsar/wiki/Open-Source-Promotion-Plan---Summer-2020-Apache-Pulsar-Tasks",
      "url": "http://pulsar.apache.org/",
      "description": "雅虎开源，下一代分布式的消息系统。",
      "full_des": "Apache Pulsar 是云原生的下一代发布订阅消息系统和流数据平台。Pulsar 用于解决现有开源消息系统的不足，助力 Yahoo 的主要应用，如 Yahoo Mail、Yahoo Finance、Yahoo Sports、Flickr、Gemini 广告平台和 Yahoo 的分布式键值存储系统 Sherpa。Pulsar 于 2016 年底开源，目前是 Apache 软件基金会的顶级项目。",
      "tech_tag": [
        "分布式系统",
        "消息系统",
        "信息流平台"
      ],
      "domain_tag": [],
      "mail_list": "dev@pulsar.apache.org",
      "email": "dev@pulsar.apache.org",
      "project_list": [
        {
          "name": "Pulsar .NET/C# client feature catch up",
          "description": "Description: Recently community contributed .NET/C# client library for Apache Pulsar. But lack of some of the features in Pulsar main repo. This task is to catch up the missing features in .NET/C# client.",
          "difficulty": "中",
          "mentor": "Jia Zhai (翟佳)",
          "contact": "izhaijia@apache.org",
          "student_count": 0,
          "update_time": "2020-05-18",
          "label": "2003019"
        },
        {
          "name": "Schema independent from the topic",
          "description": "Schema is widely used in data storage systems and Apache Pulsar uses Apache Avro to manage schemas such as schema definition, evolution, and data encoding. Currently, schemas are stored for each topic. In the scenario where the same schema is used for different topics, we store redundant schemas. This task is aimed to support the same schema that can be reused between different topics, make schema independent from the topic. And while being compatible with the existing architecture.",
          "difficulty": "中",
          "mentor": "Penghui Li(李鹏辉)",
          "contact": "penghui@apache.org",
          "student_count": 0,
          "update_time": "2020-05-18",
          "label": "2003020"
        },
        {
          "name": "Read compacted topic in Pulsar SQL",
          "description": "Compacted topic compact the history version message of the same message key. This is more like a row update in the database. Pulsar SQL can query data and analyze data from Pulsar topics. Currently, Pulsar SQL can't read data from the compacted topic, this task is to support reading data from the compacted topics in Pulsar SQL.",
          "difficulty": "中",
          "mentor": "Ran Gao(高冉)",
          "contact": "gaoran_10@126.com",
          "student_count": 0,
          "update_time": "2020-05-18",
          "label": "2003021"
        },
        {
          "name": "Pulsar Go client feature catch up",
          "description": "Recently community contributed go client library for Apache Pulsar. But lack of some of the features in Pulsar main repo. This task is to catch up the missing features in go client.",
          "difficulty": "中",
          "mentor": "Xiaolong Ran (冉小龙)",
          "contact": "rxl@apache.org",
          "student_count": 0,
          "update_time": "2020-05-18",
          "label": "2003022"
        }
      ]
    },
    {
      "anchor": "apache-servicecomb",
      "img": "service-comb.jpg",
      "title": "Apache ServiceComb",
      "project_url": "http://servicecomb.apache.org/cn/summer2020",
      "url": "https://servicecomb.apache.org",
      "description": "一站式开源微服务解决方案。",
      "full_des": "Apache ServiceComb 是Apache基金会首个毕业的开源微服务框架项目。是一个开箱即用、高性能、兼容流行生态、支持多语言的一站式开源微服务解决方案。",
      "tech_tag": [
        "微服务",
        "服务网格",
        "Saga",
        "云原生",
        "go",
        "java"
      ],
      "domain_tag": [
        "微服务"
      ],
      "mail_list": "https://servicecomb.apache.org/cn/developers/subscribe-mail-list",
      "email": "dev@servicecomb.apache.org",
      "project_list": [
        {
          "name": "微服务一键部署工具",
          "description": "一个微服务系统会包含会多个微服务，微服务框架本身的也会包含多个组件，如注册中心，网关，分布式事务组件等，如何方便快速的将整个微服务在不同的环境中迁移是一个挑战。希望能使用Terraform开发一个工具，帮助ServiceComb微服务 应用一键迁移上云。（AWS, 华为云等）。",
          "difficulty": "中",
          "mentor": "田晓亮",
          "contact": "xiaoliang.tian@gmail.com",
          "student_count": 0,
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "Java-chassis 支持 JDK 14",
          "description": "Java-chassis是ServiceComb微服务框架的Java SDK, 希望调整它的部分源代码，实现当开发者使用JDK 14 + java-chassis开发微服务时能正常开发，同时java-chassis在JDK14下能通过所有的测试用例。",
          "difficulty": "中",
          "mentor": "刘宝",
          "contact": "liubao@apache.org",
          "student_count": 0,
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "添加新的Object Storage Service云服务SDK组件，方便微服务开发者使用OBS",
          "description": "企业进行微服务转型的一大原因是为了更方便的上云，通过为开发者提供健壮的OBS访问SDK，让开发者可以简单的使用注解将OBS储存的内容 注入java对象实例中。",
          "difficulty": "低",
          "mentor": "田晓亮",
          "contact": "xiaoliang.tian@gmail.com",
          "student_count": 0,
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "丰富ServiceComb Pack在分布式事务场景下的验收测试",
          "description": "ServiceComb Pack作为一个分布式事务引擎，需要有完善的验收测试来保证其服务功能的完备性。 任务描述参见SCB-306。此任务包含验收测试的场景分析整理，以及缺失场景的代码实现。通过此任务你可以学习到如何动态注入故障，验收测试框架的使用，以及自动化测试的常用工具。",
          "difficulty": "中",
          "mentor": "姜宁",
          "contact": "ningjiang@apache.org",
          "student_count": 0,
          "update_time": "2020-05-29",
          "label": ""
        }
      ]
    },
    {
      "anchor": "apache-sharding",
      "img": "sharding.jpg",
      "title": "Apache ShardingSphere",
      "project_url": "https://cwiki.apache.org/confluence/display/SHARDINGSPHERE/Open+Source+Promotion+Plan+-+Summer+2020+Tasks",
      "url": "https://shardingsphere.apache.org/",
      "description": "分布式数据库中间件解决方案。",
      "full_des": "Apache ShardingSphere 是一套开源的分布式数据库中间件解决方案组成的生态圈，它由Sharding-JDBC、Sharding-Proxy和Sharding-Sidecar（规划中）这3款相互独立，却又能够混合部署配合使用的产品组成。它们均提供标准化的数据分片、分布式事务和数据库治理功能，可适用于如Java同构、异构语言、云原生等各种多样化的应用场景。ShardingSphere定位为关系型数据库中间件，旨在充分合理地在分布式的场景下利用关系型数据库的计算和存储能力，而并非实现一个全新的关系型数据库。它通过关注不变，进而抓住事物本质。关系型数据库当今依然占有巨大市场，是各个公司核心业务的基石，未来也难于撼动，我们目前阶段更加关注在原有基础上的增量，而非颠覆。",
      "tech_tag": [
        "分布式",
        "数据库",
        "中间件"
      ],
      "domain_tag": [
        "Java后端",
        "关系型数据库"
      ],
      "mail_list": "dev@shardingsphere.org.apache",
      "email": "dev@shardingsphere.org.apache",
      "project_list": [
        {
          "name": "官网优化",
          "description": "根据项目团队要求，重新设计并实现新的官网。",
          "difficulty": "中",
          "mentor": "张亮",
          "contact": "zhangliang@apache.org",
          "student_count": 0,
          "update_time": "2020-05-13",
          "label": "2004023"
        },
        {
          "name": "完善SQL语法解析模块",
          "description": "参考PostgreSQL数据库的SQL语法，完善Sharding Parser模块有关PostgreSQL的语法定义",
          "difficulty": "高",
          "mentor": "潘娟",
          "contact": "panjuan@apache.org",
          "student_count": 0,
          "update_time": "2020-05-19",
          "label": "2004142"
        },
        {
          "name": "实现MySQL KILL语句的功能",
          "description": "通过实现MySQL KILL语句的功能，中断当前客户端请求，释放 ShardingSphere-Proxy 后端资源",
          "difficulty": "中",
          "mentor": "张永伦",
          "contact": "zhangyonglun@apache.org",
          "student_count": 0,
          "update_time": "2020-05-19",
          "label": "2004143"
        },
        {
          "name": "实现弹性伸缩输出支持 ShardingSphere-JDBC",
          "description": "弹性伸缩输出支持 ShardingSphere-JDBC后，可以独立完成数据迁移，不需要依赖 ShardingSphere-Proxy",
          "difficulty": "低",
          "mentor": "欧阳文",
          "contact": "ouyangwen@apache.org",
          "student_count": 0,
          "update_time": "2020-05-19",
          "label": "2004144"
        },
        {
          "name": "实现权限控制模型",
          "description": "完善目前Proxy的权限设计，支撑更细粒度的权限控制，支持DCL操作权限模型并且拦截SQL操作进行权限验证，集成配置中心对多Proxy集群生效",
          "difficulty": "中",
          "mentor": "秦金卫",
          "contact": "kimmking@apache.org",
          "student_count": 0,
          "update_time": "2020-05-19",
          "label": "2004145"
        }
      ]
    },
    {
      "anchor": "apache-sw",
      "img": "ApacheSkyWalking.jpg",
      "title": "Apache SkyWalking",
      "project_url": "https://cwiki.apache.org/confluence/display/SKYWALKING/Open+Source+Promotion+Plan+-+Summer+2020+Tasks",
      "url": "http://skywalking.apache.org",
      "description": "分布式系统的应用程序性能监视工具。",
      "full_des": "Apache软件基金会顶级项目。分布式系统的应用程序性能监视工具，专为微服务、云原生架构和基于容器（Docker、K8s、Mesos）架构而设计。",
      "tech_tag": [
        "Apache",
        "APM",
        "java",
        "go",
        "php",
        "nodejs",
        "dotnet",
        "service mesh",
        "prometheus",
        "distributed tracing"
      ],
      "domain_tag": [
        "应用性能监控",
        "分布式追踪",
        "分布式系统性能"
      ],
      "mail_list": "dev@skywalking.apache.org",
      "email": "dev@skywalking.apache.org",
      "project_list": [
        {
          "name": "官网优化",
          "description": "根据项目团队要求，重新设计并实现新的官网。",
          "difficulty": "中",
          "mentor": "吴晟",
          "contact": "wu.sheng@foxmail.com",
          "student_count": 0,
          "update_time": "2020-05-13",
          "label": "2005024"
        },
        {
          "name": "追加业务系统的logback日志到span中",
          "description": "允许通过可选插件，将业务系统中，通过logback输出的日志，直接记录到span的log信息中https://github.com/apache/skywalking/issues/4545",
          "difficulty": "中",
          "mentor": "吴晟",
          "contact": "wu.sheng@foxmail.com",
          "student_count": 0,
          "update_time": "2020-05-13",
          "label": "2005025"
        },
        {
          "name": "支持将当前上下文的segment id 和span id和注入到日志组件中",
          "description": "模仿目前trace id 注入的模式，响应的支持segment id和span id的注入 https://github.com/apache/skywalking/issues/388",
          "difficulty": "中",
          "mentor": "吴晟",
          "contact": "wu.sheng@foxmail.com",
          "hot_index": 0,
          "update_time": "2020-05-27",
          "label": "2005254"
        },
        {
          "name": "端到端测试框架本地调试增强",
          "description": "测试框架在本地 IDE 直接连接进入容器进行调试",
          "difficulty": "中",
          "mentor": "柯振旭",
          "contact": "kezhenxu94@163.com",
          "student_count": 0,
          "update_time": "2020-05-13",
          "label": "2005026"
        },
        {
          "name": "命令行 Dashboard",
          "description": "为 SkyWalking CLI 提供一个统一的 dashboard 视图, 可以查看全局数据",
          "difficulty": "中",
          "mentor": "柯振旭",
          "contact": "kezhenxu94@163.com",
          "student_count": 0,
          "update_time": "2020-05-13",
          "label": "2005027"
        },
        {
          "name": "Python Agent 支持 Flask 或 Django 埋点",
          "description": "为 SkyWalking Python agent 适配 Flask 或 Django 框架(二选一)的埋点",
          "difficulty": "低",
          "mentor": "柯振旭",
          "contact": "kezhenxu94@163.com",
          "student_count": 0,
          "update_time": "2020-05-13",
          "label": "2005028"
        },
        {
          "name": "go-micro 插件",
          "description": "为 go2sky 实现 go-micro 插件",
          "difficulty": "低",
          "mentor": "张伟",
          "contact": " zhangwei24@apache.org",
          "student_count": 0,
          "update_time": "2020-05-13",
          "label": "2005029"
        },
        {
          "name": "WebFlux WebClient插件",
          "description": "为SkyWalking Java实现WebFlux WebClient插件",
          "difficulty": "低",
          "mentor": "赵禹光",
          "contact": " zhaoyuguang@apache.org",
          "student_count": 0,
          "update_time": "2020-05-13",
          "label": "2005030"
        },
        {
          "name": "skywalking-lua-nginx 插件的优化",
          "description": "skywalking-lua-nginx 一般用于网关层面，对于性能会有比较高的要求",
          "difficulty": "中",
          "mentor": "温铭",
          "contact": "wenming@apache.org",
          "student_count": 0,
          "update_time": "2020-05-13",
          "label": "2005031"
        },
        {
          "name": "样例集群",
          "description": "使用SkyWalking支持的所有探针构建一个有实际意义的样例集群",
          "difficulty": "中",
          "mentor": "高洪涛",
          "contact": "hanahmily@apache.org",
          "student_count": 0,
          "update_time": "2020-05-13",
          "label": "2005032"
        },
        {
          "name": "DBCP 插件",
          "description": "为SkyWalking Java实现Apache Commons DBCP插件",
          "difficulty": "低",
          "mentor": "庄浩潮",
          "contact": "daming@apache.org",
          "student_count": 0,
          "update_time": "2020-05-13",
          "label": "2005033"
        },
        {
          "name": "采集数据库连接池（Alibaba druid）相关性能指标",
          "description": "为SkyWalking Java实现抓取Alibaba Druid连接池的参数配置以及相关性能指标",
          "difficulty": "高",
          "mentor": "张鑫",
          "contact": "zhangxin@apache.org",
          "student_count": 0,
          "update_time": "2020-05-13",
          "label": "2005034"
        },
        {
          "name": "数据库连接池HikariCP 插件",
          "description": "支持收集数据库连接池（HikariCP）获取连接的时间",
          "difficulty": "中",
          "mentor": "张鑫",
          "contact": "zhangxin@apache.org",
          "student_count": 0,
          "update_time": "2020-05-13",
          "label": "2005035"
        },
        {
          "name": "RabbitMQ 插件",
          "description": "为PHP-sdk 实现RabbitMQ 插件",
          "difficulty": "低",
          "mentor": "何延龙",
          "contact": "heyanlong@apache.org",
          "student_count": 0,
          "update_time": "2020-05-13",
          "label": "2005036"
        }
      ]
    },
    {
      "anchor": "casbin",
      "img": "casbin.jpg",
      "title": "Casbin",
      "project_url": "https://github.com/casbin/Summer2020",
      "url": "https://casbin.org/",
      "description": "开源访问控制框架，支持多种模型。",
      "full_des": "Casbin是一个强大的、高效的开源访问控制框架，其权限管理机制支持ACL、RBAC、ABAC、RESTful等多种访问控制模型。Casbin支持以下8种编程语言：Golang, Java, Node.js, PHP, Python, .NET, Delphi, Rust，未来会陆续支持Javascript和C/C++等语言。",
      "tech_tag": [
        "go",
        "java",
        "nodejs",
        "php",
        "python",
        ".net",
        "delphi",
        "rust",
        "javascript",
        "react"
      ],
      "domain_tag": [
        "网络安全",
        "云安全",
        "授权",
        "访问控制",
        "权限管理"
      ],
      "mail_list": "https://gitter.im/casbin/Lobby",
      "email": "admin@casbin.org",
      "project_list": [
        {
          "name": "Casbin核心引擎（Golang）",
          "difficulty": "高",
          "mentor": "罗杨 (hsluoyz)",
          "contact": "hsluoyz@gmail.com",
          "student_count": 0,
          "description": "Casbin采用独特的PERM模型语法（model）来实现强大、灵活的访问控制。Casbin Golang版本作为Casbin的第一个语言实现，拥有最多的用户以及最先进的feature。我们希望在Casbin Golang上：1）增强Casbin语法的表达能力，满足用户多样化的策略制定需求；2）优化Casbin在大规模规则集上（百万以上）的策略评估性能。这两个目标是Casbin的核心竞争力，对于其他Casbin语言的实现也会起到非常重要的借鉴意义。",
          "update_time": "2020-05-17",
          "label": "2008043"
        },
        {
          "name": "Casbin分布式插件（Golang)",
          "difficulty": "高",
          "mentor": "刘子轩 (Nodece)",
          "contact": "nodeces@gmail.com",
          "student_count": 0,
          "description": "Casbin在初始化时将规则集装载到内存中，在规则集发生变更时将该次变更持久化到文件或者数据库等媒介。我们希望在此基础上： 1）基于Raft协议实现单机、分布式环境中不同Casbin实例的规则集同步；２）探索如何将规则集分组，映射到不同节点，使特定规则集的增，删以及某个请求的权限计算都在正确的节点进行，以此减轻单机的内存压力。在未来此插件可以替代 watcher。",
          "update_time": "2020-05-28",
          "label": ""
        },
        {
          "name": "Casbin分布式高可用（Rust）",
          "difficulty": "高",
          "mentor": "江成 (GopherJ)",
          "contact": "cacathecafe@gmail.com",
          "student_count": 0,
          "description": "Casbin在初始化时将规则集装载到内存中，在规则集发生变更时将该次变更持久化到文件或者数据库等媒介。我们希望在此基础上： 1）基于Raft协议实现单机、分布式环境中不同Casbin实例的规则集同步；２）探索如何将规则集分组，映射到不同节点，使特定规则集的增，删以及某个请求的权限计算都在正确的节点进行，以此减轻单机的内存压力。",
          "update_time": "2020-05-17",
          "label": "2008044"
        },
        {
          "name": "Casbin服务化（C++）",
          "difficulty": "中",
          "mentor": "谢非 (Joey)",
          "contact": "joey.xf@gmail.com",
          "hot_index": 0,
          "description": "基于C++版本的casbin探索casbin服务化的可能性，目标是在微服务架构中提供开箱即用的中心化的授权服务",
          "update_time": "2020-05-27",
          "label": "2008256"
        },
        {
          "name": "jCasbin 生态完善（Java）",
          "difficulty": "中",
          "mentor": "罗杨 (hsluoyz)",
          "contact": "hsluoyz@gmail.com",
          "student_count": 0,
          "description": "jCasbin 在 Java 平台上取得了不错的进展，但是我们仍然需要努力工作，以帮助 Casbin 成为世界上最受欢迎的身份授权库。目前Java语言上最流行的授权库是Apache Shiro和Spring Security，最流行的Web框架是Spring。我们需要实现Casbin针对Spring等框架的插件，使Spring用户可以无缝接入Casbin。同时要兼容Apache Shiro和Spring Security的接口，让目前正在使用Apache Shiro和Spring Security的项目可以无缝迁移到Casbin。同时jCasbin也需要及时跟踪Golang Casbin主库的最新feature并移植到Java版本中来。",
          "update_time": "2020-05-28",
          "label": ""
        },
        {
          "name": "PyCasbin完善和优化",
          "difficulty": "中",
          "mentor": "techoner",
          "contact": "techqiang@gmail.com",
          "student_count": 0,
          "description": "PyCasbin 是Casbin的Python版实现，功能和 Casbin（Golang）基本一致。目前，PyCasbin实现了Casbin的主要功能，但还有少许功能尚未实现，另外代码质量还有调优的可能，PyCasbin对周边框架的支持不够完善，所以我们希望对PyCasibn进行完善和优化，同时需要对PyCasin的生态予以完善。",
          "update_time": "2020-05-28",
          "label": ""
        },
        {
          "name": "PHP-Casbin生态完善",
          "difficulty": "中",
          "mentor": "techoner",
          "contact": "techqiang@gmail.com",
          "student_count": 0,
          "description": "PHP-Casbin 是Casbin的PHP版实现，功能和 Casbin（Golang）基本一致。目前，PHP-Casbin已经支持对Laravel ThinkPHP Yii Codeigniter CakePHP 等主流框架的适配。目前还需要开发对Symfony的扩展，C级别的框架进行支持，例如：Phalcon Framework，基于Swoole的框架支持，例如： Hyperf easyswoole等。除此之外，我们也希望Casbin有个PHP的C/C++扩展，以提升性能。",
          "update_time": "2020-05-28",
          "label": ""
        },
        {
          "name": "Node-Casbin 生态完善",
          "difficulty": "低",
          "mentor": "刘子轩 (Nodece)",
          "contact": "nodeces@gmail.com",
          "student_count": 0,
          "description": "Node-Casbin 在 Node.js 平台上取得了不错的进展，但是我们仍然需要努力工作，以帮助 Casbin 成为世界上最受欢迎的身份授权库。目前 Node-Casbin 已经对koa、egg、express、hapi 等主流框架提供了权限认证中间件，还需要对nest、meteor 提供支持。adapter 是 Casbin 持久化策略的插件，目前我们已经支持TypeORM、Sequelize，这些都是 ORM, 因此我们还需要考虑提供纯数据库驱动的 adapter。",
          "update_time": "2020-05-28",
          "label": ""
        },
        {
          "name": "Casbin.NET生态完善",
          "difficulty": "高",
          "mentor": "周而易始(huazhikui)",
          "contact": "huazhikui@126.com",
          "student_count": 0,
          "description": "Casbin.NET是Casbin的Dotnet版实现，目前仅完成核心功能，需要对项目进行进一步的优化和完善。目前计划提供一个完成核心能力开箱即用的服务化(RESTful)的解决方案(Casbin.SamNet)，并且适配Steeltoe。",
          "update_time": "2020-05-28",
          "label": ""
        },
        {
          "name": "Casbin 仪表盘Web界面（前端React + Javascript，后端Golang）",
          "difficulty": "高",
          "mentor": "张合龙 (BetaCat0)",
          "contact": "outman99@hotmail.com",
          "student_count": 0,
          "description": "Casbin-Dashboard（https://dashboard.casbin.org/）是我们近期启动的一个项目，由于Casbin通常在后台运行，没有界面，只有API，配置起来不够友好。因此我们打算开发一个Casbin的图形化界面，即Casbin Dashboard。我们希望Casbin Dashboard能够帮助Casbin的用户，尤其是对代码不熟悉的运维人员，能够通过图形化界面的操作，管理Casbin的模型、策略、正确性、集群运行状态等等。未来一切与Casbin有关的，可图形化的操作，都会集成到Casbin Dashboard中。",
          "update_time": "2020-05-28",
          "label": ""
        }
      ]
    },
    {
      "anchor": "ceph",
      "img": "ceph.jpg",
      "title": "Ceph 中国",
      "project_url": "http://ceph.org.cn/2020/05/09/open-source-promotion-plan-summer-2020/",
      "url": "http://www.ceph.org.cn",
      "description": "国内最专业的 Ceph 技术交流平台。",
      "full_des": "Ceph 中国社区成立于 2014 年 7 月，国内最专业的 Ceph 技术交流平台，包括线上的 QQ 群/微信群、翻译小组、订阅号和线下沙龙。2015 年提出 Ceph 中国行布道之旅，全面深入的在中国多座城市进行 Ceph 布道受众人数累计2W+。",
      "tech_tag": [
        "存储"
      ],
      "domain_tag": [],
      "mail_list": "dev@ceph.io",
      "email": "ceph-users@ceph.io",
      "project_list": [
        {
          "name": "Ceph官方文档本地化",
          "difficulty": "中",
          "mentor": "耿航",
          "contact": "devin@ceph.org.cn",
          "student_count": 0,
          "description": "目前Ceph中国社区已经有文档本地化小组及文档本地化官网（docs.ceph.org.cn）随着Ceph的更新迭代与官方文档尚有部分脱节，故需要进一步校对和翻译。",
          "update_time": "2020-05-13",
          "label": "2009045"
        },
        {
          "name": "轻量级对象存储网关",
          "difficulty": "中",
          "mentor": "郭峰",
          "contact": "diluga@ceph.org.cn",
          "student_count": 0,
          "description": "Ceph是一套开源的分布式存储软件，原生已经提供了对象存储网关服务(Rados gateway)，但是该对象存储和底层Ceph的耦合度高，不易改造和扩展新的概念。本次项目的目标是基于Ceph已经提供的Librados API，实现轻量级的对象存储网关服务，满足基本的大、小文件的上传下载的同时还能实现图片缩略图、裁剪、翻转等简单的多媒体操作。",
          "update_time": "2020-05-13",
          "label": "2009046"
        },
        {
          "name": "Ceph社区文件存储系统",
          "difficulty": "中",
          "mentor": "曹言虎",
          "contact": "tiger@ceph.org.cn",
          "hot_index": 0,
          "description": "Ceph是目前业界最火的开源项目之一，对外可以提供统一的块、文件、对象存储接口，由于存储的专业性和门槛，本项目主要致力于帮助学生能够快速参与社区，主要是修复一些社区的Bug（难易/紧急程度依次递增）。",
          "update_time": "2020-05-27",
          "label": "2009257"
        }
      ]
    },
    {
      "anchor": "chubao",
      "img": "chubao.jpg",
      "title": "ChubaoFS (CNCF sandbox)",
      "project_url": "https://github.com/chubaofs/open-source-promotion-plan-summer-2020-tasks",
      "url": "https://www.chubao.io",
      "description": "开源云原生存储平台。",
      "full_des": "ChubaoFS 是一个开源，开放的云原生存储平台，提供分布式文件系统与对象存储服务，为云原生应用提供计算与存储分离的持久化存储方案，通过开放的社区形式与全球开发者共建一个开源，开放，多元与包容的生态体系，打造一个拥抱云原生的存储平台。同时 ChubaoFS 社区也是一个技术活跃，鼓励创新，不断开拓技术新方案与最佳实践的平台。",
      "tech_tag": [
        "计算",
        "存储",
        "分布式",
        "云原生",
        "POSIX",
        "S3",
        "Raft",
        "Go",
        "Rust",
        "计算与存储分离"
      ],
      "domain_tag": [
        "存储",
        "分布式",
        "文件系统",
        "对象存储",
        "云原生",
        "计算与存储分离"     
      ],
      "mail_list": "chubaofs-maintainers@groups.io",
      "email": "chubaofs-maintainers@groups.io",
      "project_list": [
        {
          "name": "基于DataFusion和ChubaoFS的存储计算分离",
          "description": "在ChubaoFS创建一个基于DataFusion的compute node, 并提供基于ChubaoFS存储节点的SQL服务,使用户可通过SQL在ChubaoFS中存储的非结构化文件中检索信息。",
          "difficulty": "高",
          "mentor": "Dr. Wei Ding",
          "contact": "wei.ding@jd.com",
          "hot_index": 0,
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "基于DataFusion和ChubaoDB的存储计算分离",
          "description": "在ChubaoFS创建一个基于DataFusion的compute node并提供基于ChubaoDB的SQL服务。",
          "difficulty": "高",
          "mentor": "Dr. Wei Ding",
          "contact": "wei.ding@jd.com",
          "hot_index": 0,
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "分布式文件系统ChubaoFS测试框架",
          "description": "ChubaoFS是云原生的分布式文件系统及对象存储，提供高可用可扩展的分布式存储服务。如何对分布式系统进行有效的自动化测试至关重要，是项目稳定性重要保证，可缩短发布周期和及时发现低概率问题。",
          "difficulty": "中",
          "mentor": "Zhengyi Zhu",
          "contact": "zhengyi.zhu.hust@gmail.com",
          "hot_index": 0,
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "基于Raft和Rocksdb实现一个简单的分布式Key-Value数据库",
          "description": "利用已有的Raft和Rocksdb，组合实现最终一致的分布式Key-Value数据库软件。效果类似etcd或者是zookeeper。",
          "difficulty": "中",
          "mentor": "Jian Sun",
          "contact": "ansj-sun@163.com",
          "hot_index": 0,
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "ChubaoFS项目文档重构",
          "description": "对当前项目的中英文文档的结构进行重新组织，优化文档结构并补充缺少的的内容。包括项目的设计文档、管理员手册、用户文档、FAQ等主题。",
          "difficulty": "中",
          "mentor": "Mofei Zhang",
          "contact": "mofei2816@gmail.com",
          "hot_index": 0,
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "分布式文件系统ChubaoFS命令行管理工具",
          "description": "ChubaoFS是云原生的分布式文件系统及对象存储，基于http协议提供了丰富的资源管理接口。将这些接口整合和封装到基于Linux操作系统的命令行客户端，对于ChubaoFS分布式文件系统易用性提升、推广和普及具有十分重要的意义。",
          "difficulty": "中",
          "mentor": "Xihao Xu",
          "contact": "xxscott@163.com",
          "hot_index": 0,
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "ChubaoFS的高级检索引擎ChubaoDB集群调度",
          "description": "ChubaoDB是ChubaoFS的高级数据检索引擎，是基于ChubaoFS的检索服务。对ChubaoDB的集群调度进行设计和开发，平衡集群资源的负载。",
          "difficulty": "高",
          "mentor": "Jian Sun",
          "contact": "ansj-sun@163.com",
          "hot_index": 0,
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "基于Rook在Kubernetes集群中部署ChubaoFS Console",
          "description": "服务容器化已成为部署服务的主流方式，Kubernetes作为管理容器化的工作负载和服务最流行的平台，拥有庞大且快速成长的生态系统。一个Kubernetes集群中能够部署多少应用，除了受限于CPU和内存外，还会受限与磁盘空间，尤其是需要大量数据存储需求的应用。本项目希望基于Rook实现在Kubernetes集群中更加简单高效的部署和运维ChubaoFS Console。",
          "difficulty": "高",
          "mentor": "Chengyu Liu",
          "contact": "liuchengyu@jd.com",
          "hot_index": 0,
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "基于Rook在Kubernetes集群中部署ChubaoFS CSI",
          "description": "服务容器化已成为部署服务的主流方式，Kubernetes作为管理容器化的工作负载和服务最流行的平台，拥有庞大且快速成长的生态系统。一个Kubernetes集群中能够部署多少应用，除了受限于CPU和内存外，还会受限与磁盘空间，尤其是需要大量数据存储需求的应用。本项目希望基于Rook实现在Kubernetes集群中更加简单高效的部署和运维ChubaoFS-CSI。",
          "difficulty": "高",
          "mentor": "Xihao Xu",
          "contact": "xxscott@163.com",
          "hot_index": 0,
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "基于Rook在Kubernetes集群中部署ChubaoFS",
          "description": "服务容器化已成为部署服务的主流方式，Kubernetes作为管理容器化的工作负载和服务最流行的平台，拥有庞大且快速成长的生态系统。一个Kubernetes集群中能够部署多少应用，除了受限于CPU和内存外，还会受限与磁盘空间，尤其是需要大量数据存储需求的应用。本项目希望基于Rook实现在Kubernetes集群中更加简单高效的部署和运维ChubaoFS。",
          "difficulty": "高",
          "mentor": "Chengyu Liu",
          "contact": "liuchengyu@jd.com",
          "hot_index": 0,
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "基于Rook在Kubernetes集群中部署ChubaoFS Monitor",
          "description": "服务容器化已成为部署服务的主流方式，Kubernetes作为管理容器化的工作负载和服务最流行的平台，拥有庞大且快速成长的生态系统。一个Kubernetes集群中能够部署多少应用，除了受限于CPU和内存外，还会受限与磁盘空间，尤其是需要大量数据存储需求的应用。本项目希望基于Rook实现在Kubernetes集群中更加简单高效的部署和运维ChubaoFS Monitor。",
          "difficulty": "高",
          "mentor": "Chengyu Liu",
          "contact": "liuchengyu@jd.com",
          "hot_index": 0,
          "update_time": "2020-05-29",
          "label": ""
        }
      ]
    },
    {
      "anchor": "chatopera",
      "img": "chatopera.jpg",
      "title": "春松客服",
      "project_url": "https://github.com/chatopera/cosin/wiki/Open-Source-Promotion-Plan---Summer-2020",
      "url": "https://github.com/chatopera/cosin",
      "description": "快速而低成本的智能客服系统。",
      "full_des": "春松客服是 Chatopera 自主研发以及基于且增强其它开源软件的方式实现的，春松客服会不断增强客服系统的智能化，这包括利用自然语言处理、机器学习和语音识别等技术让客服工作更有效率、客服满意度更高、成本更低。",
      "tech_tag": [
        "企业聊天机器人",
        "智能客服",
        "心理咨询",
        "智能问答",
        "自然语言处理",
        "人工智能",
        "开源客服系统"
      ],
      "domain_tag": [
        "人工智能",
        "聊天机器人"
      ],
      "mail_list": "QQ群 185659917",
      "email": "service@chatopera.com",
      "project_list": [
        {
          "name": "基于春松客服的智能客服开发",
          "difficulty": "低",
          "mentor": "王海良、向宇、张凯",
          "contact": "info@chatopera.com",
          "student_count": 0,
          "description": "春松客服是 Chatopera 自主研发以及基于且增强其它开源软件的方式实现的，春松客服会不断增强客服系统的智能化，这包括利用自然语言处理、机器学习和语音识别等技术让客服工作更有效率、客服满意度更高、成本更低；基于春松客服开发一套机器人客服智能客服，春松客服本身不具有智能客服的特点，但是其灵活独特的插件机制，可以让使用者便捷的开发具有AI特质的智能客服。既可以对接自己开发的机器人或者第三方的机器人接口，如Chatopera；机器人客服可以7 * 24小时的高效率的回复访客的问题。",
          "update_time": "2020-05-15",
          "label": "2010047"
        },
        {
          "name": "春松客服的接口开发",
          "difficulty": "中",
          "mentor": "王海良、向宇、张凯",
          "contact": "info@chatopera.com",
          "student_count": 0,
          "description": "春松客服是 Chatopera 自主研发以及基于且增强其它开源软件的方式实现的，春松客服会不断增强客服系统的智能化，这包括利用自然语言处理、机器学习和语音识别等技术让客服工作更有效率、客服满意度更高、成本更低；春松客服基础功能目前是没有更多的接口及SDK，所以希望各位同学可以参考春松客服现有功能实现其SDK，包括IOS、Android、JS端以及RESTfulAPI。",
          "update_time": "2020-05-15",
          "label": "2010048"
        },
        {
          "name": "春松客服的渠道插件开发",
          "difficulty": "高",
          "mentor": "王海良、向宇、张凯",
          "contact": "info@chatopera.com",
          "student_count": 0,
          "description": "春松客服是 Chatopera 自主研发以及基于且增强其它开源软件的方式实现的，春松客服会不断增强客服系统的智能化，这包括利用自然语言处理、机器学习和语音识别等技术让客服工作更有效率、客服满意度更高、成本更低；春松客服是一个先进的客服系统。其目标是成为客服系统行业中的一个“操作系统”，企业、开发者都可以基于此操作系统开发各种客服业务的“应用”；春松客服系统被大量的下载和使用，目前除了官方发布的基础功能外，非常期待社区开发者企业可以push更多的插件应用，让其更加的丰富，功能更加的强大，普惠更多的人；要在春松客服操作系统中开发插件应用，需要遵循其插件化开发方法，具体参考插件的安装和源码参考；本次活动官方推荐但不限于开发如下的插件：聊天渠道的插件如：微信公众号/企业微信/钉钉/微博/飞书/facebook/skype/Email/电话等等；报表管理",
          "update_time": "2020-05-15",
          "label": "2010049"
        }
      ]
    },
    {
      "anchor": "claps",
      "img": "claps.jpg",
      "title": "Claps",
      "project_url": "https://github.com/claps-dev/Summer2020",
      "url": "https://github.com/lyricat/claps.dev",
      "description": "使用加密货币资助创作者和开源项目。",
      "full_des": "为开源项目做出贡献的人们需要您支持他们的工作。 两者都进行初始工作，并且要保持它既费时又费钱。 Claps.dev的捐赠系统旨在提供一种为创作者和团队筹集基本收入的好方法，使他们能够继续做对所有人都有好处的出色工作。",
      "tech_tag": [
        "NodeJS",
        "Cryptocurrency",
        "Blockchain"
      ],
      "domain_tag": [
        "数字货币",
        "区块链"
      ],
      "mail_list": "community@meri.co",
      "email": "contact@meri.co",
      "project_list": [
        {
          "name": "接入 Persper 评价算法",
          "difficulty": "中",
          "mentor": "Lyric",
          "contact": "w@fox.one",
          "student_count": 0,
          "description": "将新增项目的 git url 提交到 Persper，并且编写一个 job，定期从 Persper 获取最新的贡献值数据，将数据写入 Claps 数据库。",
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "根据不同评价算法给开发者分配捐赠",
          "difficulty": "中",
          "mentor": "Lyric",
          "contact": "w@fox.one",
          "student_count": 0,
          "description": "目前，所有的分配方式都是平均分的。但是我们预留了另外三种分配方式，分别为：按照 Persper 贡献值分；按照代码行数分；按照 Commit 数量分。需要设计三种不同的 distribute 方法，当用户捐赠时，可以选择任意一种，然后使用该方法进行分配。",
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "可配置接受捐赠的货币种类",
          "difficulty": "低",
          "mentor": "Lyric",
          "contact": "w@fox.one",
          "student_count": 0,
          "description": "每个项目现在可接受捐赠的货币种类是固定的。需要为每个项目添加单独的配置，让每个项目支持不同的可捐赠货币种类。",
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "页面 UI 改造",
          "difficulty": "低",
          "mentor": "Lyric",
          "contact": "w@fox.one",
          "student_count": 0,
          "description": "现在项目 UI 比较简陋，需将其改造，PC 和移动端都有较好的浏览体验",
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "管理员后台",
          "difficulty": "高",
          "mentor": "Lyric",
          "contact": "w@fox.one",
          "student_count": 0,
          "description": "现在 Claps 没有管理员后台，需要设计和实现管理员后台，支持如下功能：管理项目，初始化项目钱包，管理项目 repo，管理项目成员，管理用户，查看捐赠流水",
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "自助开源项目提交",
          "difficulty": "高",
          "mentor": "Lyric",
          "contact": "w@fox.one",
          "student_count": 0,
          "description": "任何开发者都可以向 claps 提交项目。提交项目需包含至少一条 git repo url。程序需要检查该 url，并且确保该 url 与提交账号之间时所属关系。程序将提交记录通知管理员，管理员可以审批项目上线。",
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "项目 widget",
          "difficulty": "中",
          "mentor": "Lyric",
          "contact": "w@fox.one",
          "student_count": 0,
          "description": "每一个项目都可以提供一小段代码，生成 widget。任何一个人都可以将这段代码挂在自己的博客、Github Readme、网页。点击这个 widget 可以打开项目主页。widget 上显示项目已经收到了多少捐赠。",
          "update_time": "2020-05-29",
          "label": ""
        }
      ]
    },
    {
      "anchor": "elastos",
      "img": "elastos.jpg",
      "title": "Elastos 亦来云",
      "project_url": "https://developer.elastos.org/discover/hackathons/202005_beijing/",
      "url": "https://www.elastos.org/",
      "description": "更安全的下一代价值互联网操作系统。",
      "full_des": "Elastos是以区块链为可信基础的，更安全的下一代价值互联网操作系统。它基于创始人陈榕在微软及国内创业期间对操作系统30余年的研究，利用区块链及去中心化技术，通过P2P通信、沙箱机制、DID身份确认等，实现符合价值互联网、物联网时代的全新网络操作系统。",
      "tech_tag": [
        "区块链",
        "blockchain",
        "去中心化",
        "decentralization"
      ],
      "domain_tag": [
        "区块链",
        "网络操作系统",
        "去中心化",
        "P2P"
      ],
      "mail_list": "Dev-support@elastos.org",
      "email": "contact@elastos.org",
      "project_list": [
        {
          "name": "基于Elastos DID 侧链的区块链存证和证书",
          "difficulty": "中",
          "mentor": "Bruce Zhang",
          "contact": "zyx@elaphant.app",
          "student_count": 0,
          "description": "区块链的基本功能是信息存证。但这一基本功能，并未能向大众或对区块链有兴趣的用户普及。很多存证应用，也是为了为应用导流，从而导致产品复杂。我们希望能为普通用户，做一款方便体验的区块链存证服务，不强调KYC、不强调助记词、甚至不强调dAPP……就是让用户用最简单的方式，实现数据上链，作为对区块链的第一次体验。社区已经利用相关接口做出了一版产品，可供参考： https://zhengshu.elastos.org/ 我们希望能对此进行改进，并封装为小程序，以方便用户调用。其他改进也可自行添加。",
          "update_time": "2020-05-27",
          "label": "2011258"
        },
        {
          "name": "CLIENT 功能扩展",
          "difficulty": "中",
          "mentor": "Zehua jiang",
          "contact": "jiangzehua@gelaxy.io",
          "hot_index": 0,
          "description": "Client是主链上面向开发者的钱包,支持地址创建及简单交易生成。但是很多交易现有的Client并不支持创建,如仲裁人选举、CR（Cyber Rpublic）委员选举及CR提案相关交易等。本题旨在完善主链Client功能,支持更多的交易生成。",
          "update_time": "2020-05-27",
          "label": "2011051"
        },
        {
          "name": "CYBERREPUBLIC 提案监测工具",
          "difficulty": "高",
          "mentor": "Zehua jiang",
          "contact": "jiangzehua@gelaxy.io",
          "hot_index": 0,
          "description": "在支持CR委员选举及CR提案注册的主链版本发布后,链上将会出现很多的提案,有的刚注册上链,有的过了评议期,有的进入了公投期,有的正在执行,有的已经执行结束。本题旨在开发提案处理监测工具,实时监测当前存在的提案详情信息,促进提案的有效处理。",
          "update_time": "2020-05-27",
          "label": "2011052"
        },
        {
          "name": "ETH 侧链开发",
          "difficulty": "中",
          "mentor": "Xiaobin Zhang, black",
          "contact": "zhangxiaobin@gelaxy.io",
          "hot_index": 0,
          "description": "亦来云的ETH侧链是基于以太坊源码进行开发的。所以ETH侧链完美兼容了以太坊的所有功能和开发方式。可以采用开发以太坊应用的方式来开发亦来云的以太坊侧链应用,比如以太坊的Web3.js库。 我们现在就利用Web3.js 库开发基于亦来云侧链的一些应用。",
          "update_time": "2020-05-27",
          "label": "2011053"
        },
        {
          "name": "主链节点参数简化",
          "difficulty": "中",
          "mentor": "Zehua jiang",
          "contact": "jiangzehua@gelaxy.io",
          "hot_index": 0,
          "description": "目前主链配置文件中很多参数是为了测试添加,参数庞杂。bitcoin中开放出来的参数都是对共识没有影响,只是改变节点本身支持的功能项,本题旨在参考其bitcoin,调整目前的参数配置,提供一个面向普通用户的简介版本。",
          "update_time": "2020-05-27",
          "label": "2011055"
        },
        {
          "name": "桌面端钱包",
          "difficulty": "中",
          "mentor": "Zehua jiang",
          "contact": "jiangzehua@gelaxy.io",
          "hot_index": 0,
          "description": "相比轻量级SPV钱包而言，全节点钱包能获完整的区块信息，支持更多复杂的业务功能扩展。目前有的钱包大多数都是移动端钱包及网页钱包，缺少安卓及苹果版桌面端钱包，桌面端钱包可以给PC端用户带来更多的便利。本题旨在开发一款全节点桌面端钱包。",
          "update_time": "2020-05-27",
          "label": "2011259"
        },
        {
          "name": "简易版 SPV 钱包",
          "difficulty": "中",
          "mentor": "Yingxiong Pan",
          "contact": "heroopan@gmail.com",
          "hot_index": 0,
          "description": "并非所有的节点都有能⼒储存完整的区块链。SPV的方式可以使它们在不必存储完整区块链的情况下进行工作。这种类型的客端被称为SPV客户端或轻量级客户端。SPV节点只需下载区块头,而不用下载包含在每个区块中的交易信息。由此产生的不含交易信息的区块链,大小比完整区块链小得多。因此,适合智能电话、平板电脑、嵌⼊式系统等这样的设备。本题旨在开发一款桌面版/移动端的Elastos轻量级客户端。",
          "update_time": "2020-05-27",
          "label": "2011054"
        },
        {
          "name": "Carrier Go/Python/NodeJs SDK以及APIs",
          "difficulty": "中",
          "mentor": "Tang Zhilong",
          "contact": "tangzhilong@trinity-tech.io",
          "hot_index": 0,
          "description": "Elastos Carrier是去中心的端对端加密的消息/数据通信平台。目前主要支持3个不同的语言版本的SDK：C/Native (Linux/MacOS/Windows); Android/Java; iOS/Swift。 其中，Carrier Native SDK是最基础和核心的实现，由基础语言C实现，同时通过CMake 方式构建整个项目系统。而Android Java SDK是通过JNI集成低层的Native 实现，通过封装C接口并以Java接口呈现给Android Java开发者。同样地，iOS Swift SDK也是通过Swift封装底层SDK C接口和静态库，以Swift 接口形式的Carrier 接口供iOS开发者使用。 目前社区开发者除了Java/Swift Carrier APIs接口需求外，也有对Carrier SDK有其他高层语言接口的需求，比如Go，Python以及NodeJs等。希望社区参与者能够根据底层Native/C接口形式，同时能够抽象和实现基于Go/Python/NodeJs的 Carrier SDK封装接口和对应SDK。",
          "update_time": "2020-05-27",
          "label": "2011260"
        },
        {
          "name": "Carrier离线消息中继服务",
          "difficulty": "高",
          "mentor": "Tang Zhilong",
          "contact": "tangzhilong@trinity-tech.io",
          "hot_index": 0,
          "description": "在去中心化Carrier消息通信网络中，如果节点Bob向Friend节点Alice发送消息时，分为以下两种场景：如果好友Alice节点处于在线连接状态，则Bob节点直接通过Carrier网络将消息传送到Alice节点；如果好友Alice节点处于离线状态，则Bob节点将消息暂存在去中心化Hive IPFS/Cluster存储网络。一旦好友Alice节点上线后，则直接向Hive IPFS/Cluster存储网络获取所有发送自己的所有离线消息。目前离线消息存储网络Hive IPFS/Cluster 与Carrier通信网络时两个分离的网络。该主题任务希望借助于本身Carrier 网络节点（或者Carrier bootstrap节点）的基础上提供去中心化的离线消息发送/接收服务。",
          "update_time": "2020-05-27",
          "label": "2011261"
        },
        {
          "name": "DID SDK的API文档编写",
          "difficulty": "低",
          "mentor": "Tang Zhilong",
          "contact": "tangzhilong@trinity-tech.io",
          "hot_index": 0,
          "description": "Elastos DID 是Elastos生态中去中心化的ID身份系统，完全兼容W3C DID/可验证凭证标准，目前Elastos DID在客户端侧SDK已经支持以下特性：创建去中心化的DID身份；DID身份对应的DID文档发布/更新到DID侧链；本地DID文档以及私钥管理；可验证凭证/呈现等接口；同时Elastos DID 提供已Java/Swift/Native等SDK版本供开发者选择使用。虽然目前已经基本完成以上眼版本的SDK的开发，但是目前对应的APIs文档还不完善，有的版本（例如Java SDK）还未启动APIs文档编写。欢迎社区开发者能够在理解相关SDK接口的基础上，按照APIs注释规范，不断完善和丰富APIs接口文档，同时能够编写和完善相应的开发者指导文档。",
          "update_time": "2020-05-27",
          "label": "2011262"
        },
        {
          "name": "Elastos DID Go/Python/NodeJs SDK和APIs",
          "difficulty": "中",
          "mentor": "Tang Zhilong",
          "contact": "tangzhilong@trinity-tech.io",
          "hot_index": 0,
          "description": "Elastos DID 是Elastos生态中去中心化的ID身份系统，完全兼容W3C DID/可验证凭证标准，目前Elastos DID在客户端侧SDK已经支持以下特性： 创建去中心化的DID身份； DID身份对应的DID文档发布/更新到DID侧链； 本地DID文档以及私钥管理； 可验证凭证/呈现等接口； 目前主要支持3个不同的语言版本的SDK（但是APIs只是形式不同，接口语义基本一致） C/Native (Linux/MacOS); Java SDK; Swift SDK。 目前社区开发者除了Java/Swift/C版本 APIs接口需求外，也有对其他高层语言接口的需求，比如Go，Python以及NodeJs等。希望社区参与能在理解Elasots DID的基础上，根据底层DID/C接口形式，能够抽象和实现基于Go/Python/NodeJs的 DID封装接口和对应SDK。",
          "update_time": "2020-05-27",
          "label": "2011263"
        },
        {
          "name": "DID 浏览器插件，支持DID登录",
          "difficulty": "高",
          "mentor": "Tang Zhilong",
          "contact": "tangzhilong@trinity-tech.io",
          "hot_index": 0,
          "description": "Elastos DID 是Elastos生态中去中心化的ID身份系统，完全兼容W3C DID/可验证凭证标准，目前Elastos DID在客户端侧SDK已经支持以下特性： 创建去中心化的DID身份； DID身份对应的DID文档发布/更新到DID侧链； 本地DID文档以及私钥管理； 可验证凭证/呈现等接口. 同时Elastos DID 提供已Java/Swift/Native等SDK版本供开发者选择使用。此外，Elatos Trinity平台（即elatOS平台）也提供类似接口的typescript（javascript）的接口。 欢迎社区开发者实现基于任一浏览器（比如Safari/Chrome/Opera等）的Elastos DID服务插件，用户能够通过该DID 服务插件授权Elastos DID身份登录Elastos 应用。",
          "update_time": "2020-05-27",
          "label": "2011264"
        },
        {
          "name": "DID在溯源或其他领域的应用",
          "difficulty": "高",
          "mentor": "Tang Zhilong",
          "contact": "tangzhilong@trinity-tech.io",
          "hot_index": 0,
          "description": "Elastos DID 是Elastos生态中去中心化的ID身份系统，完全兼容W3C DID/可验证凭证标准，目前Elastos DID在客户端侧SDK已经支持以下特性： 创建去中心化的DID身份； DID身份对应的DID文档发布/更新到DID侧链； 本地DID文档以及私钥管理； 可验证凭证/呈现等接口； 同时Elastos DID 提供已Java/Swift/Native等SDK版本供开发者选择使用。此外，Elatos Trinity平台（即elatOS平台）也提供类似接口的typescript（javascript）的接口。欢迎社区开发者即可以参考其他区块链DID溯源领域的应用，或者也可以根据自己对Elastos DID的理解以及其他的应用场景需求实现基于Elastos DID的应用。",
          "update_time": "2020-05-27",
          "label": "2011265"
        },
        {
          "name": "基于Hyper Connect 的物联网方案",
          "difficulty": "高",
          "mentor": "Tang Zhilong",
          "contact": "tangzhilong@trinity-tech.io",
          "hot_index": 0,
          "description": "Hyper connect是基于Elastos Carrier去中心化通信平台之上的端对端的IoT（物联网）的解决方案，目前已经提供比较完整的APIs开发文档，同时已有主流语言版本支持。欢迎社区开发者基于Hyper Connect的IoT 框架之上，根据具体的场景需求设计相关的有创意的应用，比如门锁，家具电器控制等。",
          "update_time": "2020-05-27",
          "label": "2011266"
        },
        {
          "name": "基于Carrier SDK的WebRTC iOS扩展实现",
          "difficulty": "高",
          "mentor": "Tang Zhilong",
          "contact": "tangzhilong@trinity-tech.io",
          "hot_index": 0,
          "description": "利用Elastos Carrier 是去中心化的端到端加密的消息通信平台的特点，经与外部团队合作，初步已经实现了基于Carrier网络的WebRTC Android版本接口，实现了Carrier节点间端对端的WebRTC音视频通信功能。参考WebRTC Android接口，实现相应基于Carrier的WebRTC iOS版本。",
          "update_time": "2020-05-27",
          "label": "2011267"
        },
        {
          "name": "基于Trinity的dApp开发",
          "difficulty": "中",
          "mentor": "Tang Zhilong",
          "contact": "tangzhilong@trinity-tech.io",
          "hot_index": 0,
          "description": "Elatos Trinity（elatOS）是集成所有Elastos服务的访问入口，包括ELA主链，DID侧链，ETH侧链，Carrier去中心化通信服务，去中心化数据存储服务Hive等。同时Trinity Runtime是提供类似可信运行环境的程序浏览器平台。目前支持运行程序主要是H5+JS程序。欢迎社区开发者基于现有的Trinity提供的Plugin服务以及built-in应用的Intent服务，设计和编写具有创意的Trinity dApp应用。",
          "update_time": "2020-05-27",
          "label": "2011268"
        },
        {
          "name": "Hive SDK接到Dropbox等其他云盘",
          "difficulty": "中",
          "mentor": "Tang Zhilong",
          "contact": "tangzhilong@trinity-tech.io",
          "hot_index": 0,
          "description": "Elastos Hive SDK是为了方便前端开发者使用的一套文件/数据存储接口。当前Hive SDK已经支持后端文件/数据存储对接到 OneDrive商业云存储平台，同时也支持对标准去中心化的数据存储平台-标准IPFS存储平台。 为了尽可能方便应用平台的开发，目前Hive SDK已经支持以下语言版本： C/Native SDK （MacOS/Linux/Windows）; Java SDK; Swift SDK.  为了集成支持更多的后端云存储平台，欢迎社区开发者扩展Hive SDK对接到更多的主流云存储平台，比如Dropbox，Google Drive，华为等公共云存储平台。",
          "update_time": "2020-05-27",
          "label": "2011269"
        },
        {
          "name": "体现Carrier特点的应用",
          "difficulty": "中",
          "mentor": "Tang Zhilong",
          "contact": "tangzhilong@trinity-tech.io",
          "hot_index": 0,
          "description": "Elastos Carrier是去中心化的端到端加密的消息/数据通信平台，具有以下特性和特点： 去中心化通信，没有传统服务的单点服务器中心失败，导致整个网络崩溃； 整个Carrier网络是一个自治的网络，没有所谓的中心管理节点； 节点间必须先成为好友后才能相互发送消息和进行数据通信； 节点间端到端的数据加密通信； 节点间即使在不同的局域网也能够直接穿透进行消息/数据通信； 节点由原来的IP地址寻值变成节点ID的地址寻值； 具备消息/数据/Session/多路复用/端口转换等配套接口。 基于Carrier以上的特性，充分发挥Carrier网络的去中心化优势，参与者可以通过自己想象，同时结合具体业务特点和场景需求，设计和开发基于Carrier之上的应用，特别鼓励参与者结合以来云其他的基础设施服务（比如DID，ETH侧链，HiveSDK等）发现和设计出能发挥Carrier优势的新型应用和解决方案。",
          "update_time": "2020-05-27",
          "label": "2011270"
        }
      ]
    },
    {
      "anchor": "gitcourse",
      "img": "gitcourse.jpg",
      "title": "GitCourse",
      "project_url": "http://gitcourse-io.kfcoding.com/events/summer2020",
      "url": "http://gitcourse-io.kfcoding.com",
      "description": "开源交互式课程制作及实训平台。",
      "full_des": "GitCourse 是一款强大的在线实训工具，其基于 Markdown 进行内容渲染，基于 Git 进行内容创作，使用 Docker 作为实训环境，覆盖在线实训的各个场景。",
      "tech_tag": [
        "Git",
        "React",
        "Docker",
        "JavaScript",
        "NPM",
        "vscode"
      ],
      "domain_tag": [
        "vscode",
        "插件开发",
        "前端",
        "容器"
      ],
      "mail_list": "community@kfcoding.com",
      "email": "gitcourse@kfcoding.com",
      "project_list": [
        {
          "name": "基于 vscode 插件的 GitCourse 制作工具",
          "description": "GitCourse 是基于 React 的前端项目，使用了 Docker 作为实训环境基础设施，目的是以自由软件促进学校的基本计算机科学教育。GitCourse 需要通过 Git 代码仓库来存储与分发课程，通常需要制作者具备源代码级的协作经验，不利于课程的快速制作和修改。本项目目标是实现一个基于 vscode 插件的 GitCourse 制作工具，通过图形界面辅助课程制作者构建 GitCourse 课程。",
          "difficulty": "中",
          "mentor": "刘畅",
          "contact": "liuchangfreeman@live.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-27",
          "label": "2039271"
        }
      ]
    },
    {
      "anchor": "emacs",
      "img": "emacs.jpg",
      "title": "GNU Emacs（中文）",
      "project_url": "https://manateelazycat.github.io/eaf/emacs/2020/05/10/eaf-community.html",
      "url": "https://emacs-china.org/",
      "description": "入门开源，理解开源，享受开源。",
      "full_des": "有着近40年历史,由开源之父、自由软件之父Richard Stallman领衔创建的一个披着编辑器（Editor）皮的编辑环境（Editing Environment）和Lisp解释器（Lisp Interpreter）。它的历史与设计理念造就一个40年屹立不倒,至今也非常健康活跃的开源生态,是任何人入门开源,理解开源,享受开源的绝佳途径。",
      "tech_tag": [
        "GNU",
        "Emacs",
        "Editor",
        "Editing Environment",
        "Lisp"
      ],
      "domain_tag": [
        "编辑器",
        "编程环境"
      ],
      "mail_list": "emacs-devel@gnu.org",
      "email": "emacs-devel@gnu.org",
      "project_list": [
        {
          "name": "Core: MS Windows Support",
          "difficulty": "高",
          "mentor": "Matthew Zeng",
          "contact": "matthewzmd@gmail.com",
          "student_count": 0,
          "description": "use cross-platform IPC instead DBus, WebSocket's async model is not suitable for replacement.",
          "update_time": "2020-05-19",
          "label": "2012146"
        },
        {
          "name": "Core: MacOS Support",
          "difficulty": "高",
          "mentor": "Matthew Zeng",
          "contact": "matthewzmd@gmail.com",
          "student_count": 0,
          "description": "Make Qt’s QGraphicsSence technology support MacOS; Replace QWindow::setParent with MacOS native cross-process reparent API.",
          "update_time": "2020-05-19",
          "label": "2012147"
        },
        {
          "name": "Core: Use QTest&QTouchEventSequence simulate touch scroll event and control all browser base apps",
          "difficulty": "中",
          "mentor": "Matthew Zeng",
          "contact": "matthewzmd@gmail.com",
          "student_count": 0,
          "description": "",
          "update_time": "2020-05-19",
          "label": "2012148"
        },
        {
          "name": "Core: Compatibility with HiDPi. Resolve issues in #287 and #288",
          "difficulty": "中",
          "mentor": "Matthew Zeng",
          "contact": "matthewzmd@gmail.com",
          "student_count": 0,
          "description": "",
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "Core: Investigate the possibility to support chemacs. If possible, support it, if not, explain. #297",
          "difficulty": "低",
          "mentor": "Matthew Zeng",
          "contact": "matthewzmd@gmail.com",
          "student_count": 0,
          "description": "",
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "Core: English documentation for all functions",
          "difficulty": "低",
          "mentor": "Matthew Zeng",
          "contact": "matthewzmd@gmail.com",
          "student_count": 0,
          "description": "",
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "Browser: Create ad-blocker plugin",
          "difficulty": "中",
          "mentor": "Matthew Zeng",
          "contact": "matthewzmd@gmail.com",
          "student_count": 0,
          "description": "",
          "update_time": "2020-05-19",
          "label": "2012149"
        },
        {
          "name": "Browser: Autofill password by storing password in a database",
          "difficulty": "中",
          "mentor": "Matthew Zeng",
          "contact": "matthewzmd@gmail.com",
          "student_count": 0,
          "description": "",
          "update_time": "2020-05-19",
          "label": "2012150"
        },
        {
          "name": "Browser: Smart select text area using cursor",
          "difficulty": "中",
          "mentor": "Matthew Zeng",
          "contact": "matthewzmd@gmail.com",
          "student_count": 0,
          "description": "",
          "update_time": "2020-05-19",
          "label": "2012151"
        },
        {
          "name": "PDF: Invent a better dark mode color algorithm for PDF pages",
          "difficulty": "中",
          "mentor": "Matthew Zeng",
          "contact": "matthewzmd@gmail.com",
          "student_count": 0,
          "description": "",
          "update_time": "2020-05-19",
          "label": "2012152"
        },
        {
          "name": "PDF: Invent a better dark mode color algorithm for PDF pages **and** exclude images and graphs",
          "difficulty": "高",
          "mentor": "Matthew Zeng",
          "contact": "matthewzmd@gmail.com",
          "student_count": 0,
          "description": "",
          "update_time": "2020-05-19",
          "label": "2012153"
        },
        {
          "name": "Terminal: Refresh page after server is ready because sometimes terminal is blank when opened.",
          "difficulty": "中",
          "mentor": "Matthew Zeng",
          "contact": "matthewzmd@gmail.com",
          "student_count": 0,
          "description": "",
          "update_time": "2020-05-19",
          "label": "2012154"
        },
        {
          "name": "Terminal: Close terminal buffer with EXIT signal.",
          "difficulty": "低",
          "mentor": "Matthew Zeng",
          "contact": "matthewzmd@gmail.com",
          "student_count": 0,
          "description": "",
          "update_time": "2020-05-19",
          "label": "2012155"
        },
        {
          "name": "Terminal: Catch change directory signal in node-pty, rename terminal buffer and change Emacs default-directory variable real-time.",
          "difficulty": "低",
          "mentor": "Matthew Zeng",
          "contact": "matthewzmd@gmail.com",
          "student_count": 0,
          "description": "",
          "update_time": "2020-05-19",
          "label": "2012156"
        },
        {
          "name": "Terimnal: Fix error in connection establishment: net::ERR_CONNECTION_REFUSED",
          "difficulty": "中",
          "mentor": "Matthew Zeng",
          "contact": "matthewzmd@gmail.com",
          "student_count": 0,
          "description": "",
          "update_time": "2020-05-19",
          "label": "2012071"
        },
        {
          "name": "Mindmap: change node color, pick from color list.",
          "difficulty": "低",
          "mentor": "Matthew Zeng",
          "contact": "matthewzmd@gmail.com",
          "student_count": 0,
          "description": "",
          "update_time": "2020-05-19",
          "label": "2012065"
        },
        {
          "name": "Mindmap: Support multi-line insert dons nodes.",
          "difficulty": "低",
          "mentor": "Matthew Zeng",
          "contact": "matthewzmd@gmail.com",
          "student_count": 0,
          "description": "",
          "update_time": "2020-05-19",
          "label": "2012157"
        },
        {
          "name": "Mindmap: Export org with correct indent level.",
          "difficulty": "低",
          "mentor": "Matthew Zeng",
          "contact": "matthewzmd@gmail.com",
          "student_count": 0,
          "description": "",
          "update_time": "2020-05-19",
          "label": "2012158"
        },
        {
          "name": "RSS Reader: Rewrite RSS Reader using JavaScript, Qt version is too ugly.",
          "difficulty": "高",
          "mentor": "Matthew Zeng",
          "contact": "matthewzmd@gmail.com",
          "student_count": 0,
          "description": "",
          "update_time": "2020-05-19",
          "label": "2012159"
        },
        {
          "name": "Mermaid: support dark mode.",
          "difficulty": "中",
          "mentor": "Matthew Zeng",
          "contact": "matthewzmd@gmail.com",
          "student_count": 0,
          "description": "",
          "update_time": "2020-05-19",
          "label": "2012067"
        },
        {
          "name": "Music Player: Create Music Player Use MPD and JavaScript library.",
          "difficulty": "中",
          "mentor": "Matthew Zeng",
          "contact": "matthewzmd@gmail.com",
          "student_count": 0,
          "description": "",
          "update_time": "2020-05-19",
          "label": "2012160"
        },
        {
          "name": "Painter: Create this new app using wither Qt or JavaScript!",
          "difficulty": "中",
          "mentor": "Matthew Zeng",
          "contact": "matthewzmd@gmail.com",
          "student_count": 0,
          "description": "",
          "update_time": "2020-05-29",
          "label": ""
        }
      ]
    },
    {
      "anchor": "huawei-liteos",
      "img": "huaweiLite.jpg",
      "title": "Huawei LiteOS",
      "project_url": "https://bbs.huaweicloud.com/blogs/170628",
      "url": "http://liteos.org",
      "description": "轻量级物联网操作系统。",
      "full_des": "Huawei LiteOS 是华为针对物联网领域推出的轻量级物联网操作系统，具备轻量、智能、安全、组件丰富、简易开发等关键能力，基于物联网领域业务特征打造领域性技术栈，为开发者提供 “一站式” 完整软件平台，有效降低开发门槛、缩短开发周期，可广泛应用于可穿戴设备、智能家居、车联网、智慧城市等领域。自开源社区发布以来，持续围绕物联网市场从技术、生态、解决方案、商用支持等多维度使能合作伙伴，构建开源的物联网生态，帮助众多行业客户快速推出物联网终端和解决方案，加速物联网产业发展和行业数字化转型。",
      "tech_tag": [
        "轻量",
        "智能",
        "安全",
        "端云协同",
        "多核管理",
        "RTOS"
      ],
      "domain_tag": [
        "IoT",
        "可穿戴",
        "视频",
        "语音",
        "低功耗"
      ],
      "mail_list": "liteos@huawei.com",
      "email": "liteos@huawei.com",
      "project_list": [
        {
          "name": "用LiteOS基于BearPi-IoT开发板上移植MicroPython",
          "description": "Huawei LiteOS是华为的物联网操作系统，BearPi-IoT是小熊派的物联网开发板。当前物联网终端主要开发语言以C语言为主，C语言开发需要涉及到底层硬件驱动，具有一定门槛。MicroPython包含Python标准库中的一小部分，本项目目标是通过移植MicroPython解释器到LiteOS上，让软件开发者也能实现硬件开发。",
          "difficulty": "中",
          "mentor": "王城",
          "contact": "wangcheng@holdiot.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-27",
          "label": "2032296"
        },
        {
          "name": "用LiteOS基于BearPi-IoT开发板实现多程序选择切换运行",
          "description": "Huawei LiteOS是华为的物联网操作系统，BearPi-IoT是小熊派的物联网开发板。本项目是通过编写多个基于LiteOS的应用程序并合并在一起，打包在BearPi-IoT的板载Flash中，可通过按键选择并在屏幕展现，实现选择需要运行的程序。",
          "difficulty": "中",
          "mentor": "王城",
          "contact": "wangcheng@holdiot.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-27",
          "label": "2032297"
        },
        {
          "name": "用LiteOS基于BearPi-IoT开发板上移植GUI库",
          "description": "Huawei LiteOS是华为的物联网操作系统，BearPi-IoT是小熊派的物联网开发板。本项目是通过移植主流GUI库运行在LiteOS上，并通过BearPi-IoT的LCD屏展示。",
          "difficulty": "低",
          "mentor": "王城",
          "contact": "wangcheng@holdiot.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-27",
          "label": "2032298"
        },
        {
          "name": "基于LiteOS的硬件仿真平台开发",
          "description": "搭建一款基于risc-v硬件仿真平台，包含但不限于risc-v芯片，led，显示屏，按键等硬件，要求在搭建的仿真平台上运行LiteOS+gui,在显示屏上显示一些动画效果，并且通过仿真可以达到按键的效果，在按键时(鼠标点击模拟)完成一定的动作，比如led的暗灭。",
          "difficulty": "高",
          "mentor": "庄圣恩",
          "contact": "zhuangxxchn@163.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-27",
          "label": "2032299"
        },
        {
          "name": "基于LiteOS的AI拍照功能",
          "description": "选择一款合适的AI框架训练并部署到LiteOS，完成笑脸抓拍的功能，不限硬件平台",
          "difficulty": "高",
          "mentor": "庄圣恩",
          "contact": "zhuangxxchn@163.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-27",
          "label": "2032300"
        },
        {
          "name": "基于北斗定位的智慧物流定位系统",
          "description": "基于小熊派BearPi-IoT开发板+LiteOS平台，选择合适的北斗定位模块，在微信小程序上实时获取板子的位置信息",
          "difficulty": "中",
          "mentor": "庄圣恩",
          "contact": "zhuangxxchn@163.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-27",
          "label": "2032301"
        }
      ]
    },
    {
      "anchor": "hypertrons",
      "img": "hypertrons.jpg",
      "title": "Hypertrons",
      "project_url": "https://www.hypertrons.io/#/zh-cn/event/summer2020",
      "url": "https://hypertrons.io",
      "description": "面向开放组织的开源 RPA 平台。",
      "full_des": "Hypertrons 为一个面向开源组织开放 RPA 平台，在多种平台的连通下，通过可定制化脚本为开放组织提供组织架构管理、自动化流程管理等。目前已经支持 GitHub、GitLab、Gitee、Jenkins、Slack、email 等多种平台的交互。",
      "tech_tag": [
        "RPA",
        "Automation"
      ],
      "domain_tag": [
        "开源治理",
        "跨平台自动化"
      ],
      "mail_list": "community@hypertrons.io",
      "email": "dev@hypertrons.io",
      "project_list": [
        {
          "name": "配置描述的自动化生成",
          "difficulty": "中",
          "mentor": "赵生宇",
          "contact": "frank_zsy@hypertrons.io",
          "co-mentor": "",
          "student_count": 0,
          "description": "Hypertrons 项目用于连接各种开放平台，并提供完整的跨平台交互能力，这也意味着项目配置会异常复杂，那么如何保证配置结构与文档描述的一致性就是一个非常重要的问题。Hypertrons 项目采用 TypeScript 的 Attribute 特性对所有配置项进行了代码化描述，请参考源代码。采用这种方式，不仅可以让平台在运行中自动生成配置结构与默认值，而且结构化的代码化配置可以使离线脚本轻松通过源代码直接生成配置的描述信息，做到代码即文档。",
          "update_time": "2020-05-25",
          "label": "2035197"
        },
        {
          "name": " 文档协作平台交互接入",
          "difficulty": "高",
          "mentor": "吴绍岭",
          "contact": "wsl@hypertrons.io",
          "co-mentor": "",
          "student_count": 0,
          "description": "Hypertrons 作为一个跨平台 RPA，各类平台的交互能力都是必不可少的，例如目前已经支持的代码托管平台（GitHub、GitLab、Gitee）、持续集成平台（Jenkins）、即时通信平台（Slack）等。而文档协作也是开放组织协作中非常重要的一环，目前大量的开放组织都在通过文档协作产出内容，例如 Google Docs、石墨文档、语雀、飞书文档、QQ 文档等等，都是这个领域的代表，如何有效的抽象在线文档协作平台的接口体系，并接入主流的文档协作平台，成为自动化协作流程的一部分，是项目关键的一部分能力。",
          "update_time": "2020-05-25",
          "label": "2035198"
        },
        {
          "name": "迷你项目看板项目",
          "difficulty": "高",
          "mentor": "赵生宇",
          "contact": "frank_zsy@hypertrons.io",
          "co-mentor": "",
          "student_count": 0,
          "description": "Hypertrons 作为一个跨平台的 RPA 平台，在提供跨平台交互能力的同时，为了能更好的做出决策，也采集了各平台的开放数据作为决策基础。而这些数据同时也为社区的数字化运营分析提供了有效的支撑，我们不希望深度改变用户的使用习惯，故发起一个浏览器插件项目，通过在特定网址的网页中插入迷你看板的方式为开放组织提供有效的监控和运营手段，这个项目是 Hypertrons 一大创新，也是重要的一部分。",
          "update_time": "2020-05-25",
          "label": "2035199"
        }
      ]
    },
    {
      "anchor": "ihub",
      "img": "ihub.jpg",
      "title": "鹏城汇智社区（iHub）",
      "project_url": "https://code.ihub.org.cn/projects/1360",
      "url": "https://www.ihub.org.cn",
      "description": "优选和汇聚全球AI开源资源。",
      "full_des": "iHub 开源平台是面向以汉语为母语的开发者，优选和汇聚 AI 和 RISC-V 等开源项目与代码的托管平台。iHub 开源平台致力于为众多的开发者和科研人员提供一个具有专业的代码托管功能、稳定易用、访问速度快的开源平台。",
      "tech_tag": [
        "软件环境",
        "算法框架",
        "实训课程"
      ],
      "domain_tag": [
        "人工智能",
        "RISC-V"
      ],
      "mail_list": "wangs02@pcl.ac.cn",
      "email": "ihub@pcl.ac.cn",
      "project_list": [
        {
          "name": "二值目标检测网络的设计与训练",
          "difficulty": "低",
          "mentor": "陈刚",
          "contact": "cheng83@mail.sysu.edu.cn",
          "student_count": 0,
          "description": "目标检测作为图像理解中的重要一环，其任务是找出图像中所有感兴趣的目标（物体），确定它们的位置和大小，是深度学习中的重要应用之一。目前有许多优秀的二值神经网络模型，大多都使用的是全精度的网络。但由于PhoneBit框架主要针对二值神经网路进行加速，需要对网络进行二值化处理，并保持一定的精度，以便于部署到移动设备上。",
          "update_time": "2020-05-20",
          "label": "2033165"
        },
        {
          "name": "PhoneBit框架上的二值目标检测模型部署",
          "difficulty": "中",
          "mentor": "陈刚",
          "contact": "cheng83@mail.sysu.edu.cn",
          "student_count": 0,
          "description": "为了减少模型体积，降低计算难度，训练后的模型需要进行压缩和格式转换后，才可部署到PhoneBit框架中。在PhoneBit开源仓库下，提供了一款将.onnx类型的二值分类模型转换为.phonebit类型模型的示例代码。可以参考示例代码，针对二至目标检测模型进行改进及优化，实现模型转换与部署。",
          "update_time": "2020-05-20",
          "label": "2033166"
        },
        {
          "name": "基于PhoneBit框架上的移动二值目标检测模型应用",
          "difficulty": "中",
          "mentor": "陈刚",
          "contact": "cheng83@mail.sysu.edu.cn",
          "student_count": 0,
          "description": "目前手机的计算能力愈来愈高，已逐步具备进行快速模型部署的能力。PhoneBit框架基于手机GPU进行高度优化，能实现基于手机的快速前向推断。在PhoneBit开源仓库下，提供了二值图像分类网络的Android部署APP示例工程。可以参考示例工程，根据目标检测任务的特性设计APP，实现模型的应用。",
          "update_time": "2020-05-20",
          "label": "2033167"
        },
        {
          "name": "心血管疾病预测",
          "difficulty": "中",
          "mentor": "陈亚云",
          "contact": "563880696@qq.com",
          "student_count": 0,
          "description": "在分类问题中，分类的目的是从一系列数据中选择出一个分类（如，给出一张包含苹果或橘子的图片，识别出图片中是哪种水果）。本项目采用心血管疾病数据集，数据集提供11个特征值和1个目标值，包含70000个患者记录数据。通过构建一个算法模型，来预测样本是否患有心血管疾病。本实训主要介绍如何实现“心血管疾病预测模型”的开发，通过该实训项目，可以使实训受众了解预测模型的开发。",
          "update_time": "2020-05-20",
          "label": "2033168"
        },
        {
          "name": "新冠病毒传播预测",
          "difficulty": "中",
          "mentor": "陈亚云",
          "contact": "563880696@qq.com",
          "student_count": 0,
          "description": "新冠状病毒的爆发正在发展成一场重大的国际危机，并开始影响人们的正常生活和国家经济的发展。如果能够预测病毒如何在不同国家和地区传播，建立一个强大的预测模型，有助于缓解风险。这项任务的目标是建立一个预测病毒扩散的模型。本实训主要介绍如何实现“预测新冠状病毒的传播”的开发，通过该实训项目，可以使实训受众了解预测模型的开发。",
          "update_time": "2020-05-25",
          "label": "2033243"
        }
      ]
    },
    {
      "anchor": "kube-edge",
      "img": "KubeEdge.jpg",
      "title": "KubeEdge",
      "project_url": "https://github.com/kubeedge/community/blob/master/OpenSourcePromotionPlan2020/summer2020-cn.md",
      "url": "https://kubeedge.io",
      "description": "云原生边缘计算平台。",
      "full_des": "KubeEdge 将云原生技术应用到智能边缘计算领域，具备边云可靠协同、极致轻量、边缘智能、强劲算力、离线自治、海量边缘设备管理等能力，利用云原生生态的众多优势解决边缘计算中的挑战。",
      "tech_tag": [
        "云原生",
        "边缘计算",
        "Kubernetes",
        "容器",
        "IOT",
        "golang"
      ],
      "domain_tag": [],
      "mail_list": "kubeedge@googlegroups.com",
      "email": "kubeedge@googlegroups.com",
      "project_list": [
        {
          "name": "KubeEdge AI边缘应用开发",
          "description": "Build a sample example to run AI application on KubeEdge platform, using the device API, and ideally running inference on the edge and training on the cloud, showing cloud-edge collaboration.",
          "difficulty": "中",
          "mentor": "Kevin Wang",
          "contact": "kevinwzf0126@gmail.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-28",
          "label": ""
        },
        {
          "name": "一键安装脚本开发",
          "description": "Write a script to install KubeEdge cloud and edge with one click, including K8s, Runtime.",
          "difficulty": "低",
          "mentor": "Fei Xu",
          "contact": "fisherxu1@gmail.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-28",
          "label": ""
        },
        {
          "name": "集成chaos-mesh测试KubeEdge",
          "description": "Now we have unit tests, integration tests and e2e tsets that guarantee the KubeEdge is running well, but to better identify system vulnerabilities and improve resilience, let's use chaosMesh to injects various types of faults into the KubeEdge, like low quality network, etc. to test KubeEdge.",
          "difficulty": "中",
          "mentor": "Kevin Wang",
          "contact": "kevinwzf0126@gmail.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-28",
          "label": ""
        },
        {
          "name": "社区网站",
          "description": "Redesign and reimplement the official website to show the key features of KubeEdge.",
          "difficulty": "中",
          "mentor": "Kevin Wang",
          "contact": "kevinwzf0126@gmail.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-28",
          "label": ""
        }
      ]
    },
    {
      "anchor": "kernal-travel",
      "img": "kernal.jpg",
      "title": "Linux 内核之旅",
      "project_url": "http://kerneltravel.net/project/",
      "url": "http://kerneltravel.net/",
      "description": "Linux 内核爱好者的家园。",
      "full_des": "Linux 内核之旅开源社区是一个完全自由和开放的平台，创建于2004年，重构于2020年，社区以国际开源社区的方式运作，所有人都可以参与到Linux内核之旅开源社区的共建中，您是贡献者，也是受益者。社区由网站、公众号、慕课、Github和视频网站五大模块构成，为Linux内核爱好者提供丰富的学习资源，恳请你的参与。",
      "tech_tag": [
        "Linux内核",
        "eBPF"
      ],
      "domain_tag": [
        "Linux内核",
        "操作系统"
      ],
      "mail_list": "kerneltravel@groups.163.com",
      "email": "liangjinrong111@163.com",
      "project_list": [
        {
          "name": "Linux显微镜",
          "description": "LMP(Linux microscope)是一个基于bcc(BPF Compiler Collection)的Linux系统性能数据实时展示的web工具，它使用BPF(Berkeley Packet Filters)，也叫eBPF技术，提取Linux内核细粒度性能数据，展示在web界面，为运维人员提供参考。",
          "difficulty": "低",
          "mentor": "陈莉君",
          "contact": "cljcore@126.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-29",
          "label": ""
        }
      ]
    },
    {
      "anchor": "mace",
      "img": "mace.jpg",
      "title": "MACE",
      "project_url": "https://github.com/XiaoMi/mace/issues/643",
      "url": "https://github.com/XiaoMi/mace",
      "description": "为移动端优化的神经网络计算框架。",
      "full_des": "Mobile AI Compute Engine (MACE) 是一个开源的专为移动端异构计算平台(支持Android, iOS, Linux, Windows)优化的神经网络计算框架,支持Tensorflow、Caffe、ONNX等主流深度学习框架,在性能、功耗、内存占用、系统响应等多方面进行了专门的优化。同时,MACE也是一个深度学习框架相关的开源社区,欢迎任何人在社区里讨论、提交和解决技术问题；欢迎任何人贡献和提交代码。",
      "tech_tag": [
        "MACE",
        "机器学习框架",
        "深度学习框架",
        "AI框架"
      ],
      "domain_tag": [
        "机器学习",
        "深度学习"
      ],
      "mail_list": "QQ群（756046893)",
      "email": "https://github.com/XiaoMi/mace/issues",
      "project_list": [
        {
          "name": "移植MACE Micro到微控制器芯片",
          "difficulty": "高",
          "mentor": "卢旭辉",
          "contact": "luxuhui@xiaomi.com",
          "co-mentor": "",
          "student_count": 0,
          "description": "相对于手机等移动设备而言，微控制器是小型、低能耗的计算设备，经常嵌入在只需要进行基本运算的硬件中，包括家用电器和物联网设备等。每年都有数十亿个微控制器被生产出来。MACE新增微控制器（MACE Micro）支持，以全面支持手机与IoT设备超低功耗推理场景。具体使用可参考。本项目的内容为将MACE Micro移植到某款微控制器芯片，包括但不限于ST、Ambiq等厂商生产的微控制器芯片，MACE Micro不依赖于任何操作系统、文件系统以及运行时的支持，具有良好的可移植性。",
          "update_time": "2020-05-18",
          "label": "2015076"
        },
        {
          "name": "基于MACE Micro实现唤醒词识别功能Demo",
          "difficulty": "高",
          "mentor": "卢旭辉",
          "contact": "luxuhui@xiaomi.com",
          "co-mentor": "",
          "student_count": 0,
          "description": "基于MACE Micro，利用Google的唤醒词识别模型，实现一个能在微控制器上运行的语音识别的Demo。",
          "update_time": "2020-05-18",
          "label": "2015077"
        },
        {
          "name": "帮助MACE支持Tensorflow2.0模型",
          "difficulty": "高",
          "mentor": "李滨",
          "contact": "libin11@xiaomi.com",
          "co-mentor": "",
          "student_count": 0,
          "description": "MACE支持了Tensorflow的1.x版本训练的模型的推理，MACE开发了一个Tensorflow1.x模型到MACE专有模型的转换器。本项目的内容为，参考Tensorflow1.x模型到MACE专有模型的转换器代码，开发一个Tensorflow2.0模型到MACE专有模型的转换器。",
          "update_time": "2020-05-18",
          "label": "2015078"
        },
        {
          "name": "帮助MACE支持Pytorch模型",
          "difficulty": "高",
          "mentor": "李滨",
          "contact": "libin11@xiaomi.com",
          "co-mentor": "",
          "student_count": 0,
          "description": "MACE通过支持ONNX标准交换格式，间接支持了Pytorch训练的模型的推理，但模型的两次转换造成了不必要的转换开销。本项目的内容为，参考其他框架模型到MACE专有模型的转换器代码，开发一个Pytorch模型到MACE专有模型的转换器。",
          "update_time": "2020-05-18",
          "label": "2015079"
        }
      ]
    },
    {
      "anchor": "maskbook",
      "img": "maskbook.jpg",
      "title": "Maskbook",
      "project_url": "https://github.com/DimensionDev/Maskbook/wiki/Open-Source-Promotion-Plan---Summer-2020",
      "url": "https://maskbook.com",
      "description": "保护互联网用户隐私的浏览器插件。",
      "full_des": "Maskbook 是一个浏览器插件,我们致力于通过应用密码学的技术来帮助用户能够很简单的、不改变他们日常习惯的方法来保护他们在网络上的隐私。",
      "tech_tag": [
        "TypeScript",
        "React",
        "Cryptography",
        "Decentralized Database"
      ],
      "domain_tag": [
        "Frontend",
        "Cryptography",
        "Typescript"
      ],
      "mail_list": "https://github.com/dimensiondev/maskbook/issues",
      "email": "info@dimension.im",
      "project_list": [
        {
          "name": "Maskbook 插件系统",
          "difficulty": "中",
          "mentor": "@yisiliu",
          "contact": "yisiliu@gmail.com",
          "co-mentor": "",
          "student_count": 0,
          "description": "Maskbook 是一个开源的浏览器隐私插件，帮助用户在 Facebook，Twitter 等社交平台自动加密帖子和聊天记录，防止被社交平台审查和滥用用户数据，仅用户本人和指定好友能够解密。除了我们基础的功能之外，我们还开发了一套插件系统，可以支持简单的脚本运行，我们已经尝试过的插件有： 基于 Ethereum（以太坊）的加密货币红包 #634 #672 ，Gitcoin Grant 捐赠 #996 #1079 和 Arweave 文件分享 #1057。在这个 Task 中，我们希望大家能够跟我们一起开动脑洞，思考一下基于我们 Maskbook 和社交网络的关系，有没有什么更加有心意的插件可以加入进来，提供给所有的用户更多的功能和自由。具体的项目介绍可以在 Open Source Promotion Plan - Summer 2020 Task 1 中看到，并期待同学们能在这里跟我们进行交流。",
          "update_time": "2020-05-18",
          "label": "2016080"
        },
        {
          "name": "Maskbook 图片隐写功能优化",
          "difficulty": "高",
          "mentor": "@yisiliu",
          "contact": "yisiliu@gmail.com",
          "co-mentor": "",
          "student_count": 0,
          "description": "Maskbook 是一个开源的浏览器隐私插件，帮助用户在 Facebook，Twitter 等社交平台自动加密帖子和聊天记录，防止被社交平台审查和滥用用户数据，仅用户本人和指定好友能够解密。Maskbook 现在有两种 payload 的模式，第一种是纯文字的 payload，格式是 base64 encoded 的加密文本，例如 https://www.google.co.in/%204/4.UN3m8PThWagRN/YaV4HBFVZhmzU-wuIzD1Yugjm7JAPg1BgX9UilZl5jlHp0YsRs2cRu+lNTisyp1J45zvXoSD1fzbsK8+2Do5itncakns29P3BzH8YJACmG64G6tNikZP5oEme+W/to9wv1C43aSTs9rY1F8mFCwimOsZvki1+FN6LuItO3cX/1.NdahzvHRaBdRMI5gQvT5tg_=.27WQHRwyEwW8QwhIR0oOcPU9fbR35j8vKumBMyupnQ==.y5402vqUQoQub+RKHofpxgmQtetSiRwumF4KXaL/l5rmOHHRJBTL9YcZOjz39WtJAgbdg+iYsJdq5gm3MwWAXQ==.Ao+TblKN40/JUXl4B1HsISVoJc5gSVBYCXiolhxa8D5Q.0%40(注：在 Facebook 中，没有字数限制，所以会直接将 payload 放入 post 中，但是在 Twitter 上由于有严格的字数限制，所以我们采用了基于 url 的 hack #198)；另一种是图片模式，是基于**快速傅立叶变换（fft）**的一种方法，将密文隐写到图片中，做到更加美观的效果，目前的实现可以在 DimensionDev/Stego-JS中看到。目前的实现由于算法的限制，导致效果不甚理想，会有一些带有信息的点在图片中显示，并且不够稳定，没有办法在 Facebook 和 Twitter 中都可以抗平台压缩，导致信息缺失，具体细节可以在 Open Source Promotion Plan - Summer 2020 Task 2 中看到。在这个 Task 中，我们希望大家能够跟我们一起调研各种抗压缩图片（或音频）隐写算法，使我们的图片模式更加的高效。",
          "update_time": "2020-05-19",
          "label": "2016161"
        }
      ]
    },
    {
      "anchor": "megengine",
      "img": "megEngine.jpg",
      "title": "天元（MegEngine）",
      "project_url": "https://github.com/MegEngine/Resource/blob/master/Open_Source_Promotion_Plan-Summer_2020_MegEngine.md",
      "url": "https://megengine.org.cn/",
      "description": "旷视自主研发的开源深度学习框架。",
      "full_des": "天元（MegEngine）是在旷视长期进行大规模AI业务落地过程中诞生的,这种业务形态对深度学习框架有很多挑战,在不断解决这些挑战的过程中,天元形成了动静合一、兼容并包、灵活高效、训练推理一体化等特性,能够帮助开发者高效的完成深度学习算法的设计、训练、部署,有效提升AI研发工作效率。",
      "tech_tag": [
        "C++",
        "深度学习框架"
      ],
      "domain_tag": [
        "深度学习",
        "人工智能",
        "CV"
      ],
      "mail_list": "megengine.org.cn",
      "email": "megengine-support@megvii.com",
      "project_list": [
        {
          "name": "Github CI 增加 commit 内容检查",
          "description": "增加 commit message checker，以规范贡献者 commit 格式",
          "difficulty": "中",
          "mentor": "张禄",
          "contact": "zhanglu@megvii.com",
          "student_count": "",
          "update_time": "2020-05-20",
          "label": "2025169"
        },
        {
          "name": "实现 MegEngine to Caffe 转换器",
          "description": "编写转换器，将 MegEngine 训练出的模型转换成 Caffe 模型",
          "difficulty": "高",
          "mentor": "陈远昭",
          "contact": "chenyuanzhao@megvii.com",
          "student_count": "",
          "update_time": "2020-05-20",
          "label": "2025170"
        },
        {
          "name": "实现 MegEngine to TFLite 转换器",
          "description": "编写转换器，将 MegEngine 训练出的模型转换成 TFLite 模型",
          "difficulty": "高",
          "mentor": "陈远昭",
          "contact": "chenyuanzhao@megvii.com",
          "student_count": "",
          "update_time": "2020-05-20",
          "label": "2025171"
        },
        {
          "name": "添加一些常用的opr",
          "description": "添加一些目前MegEngine缺乏的、常用的opr，大部分只需要在python层进行封装。",
          "difficulty": "中",
          "mentor": "胡焜",
          "contact": "hukun@megvii.com",
          "student_count": "",
          "update_time": "2020-05-20",
          "label": "2025172"
        },
        {
          "name": "添加各类常用分类模型",
          "description": "classification模型比如mobilenet/inception，但不需要训练/推理等完整代码，也不需要预训练权重，只需要模型实现即可，统一放在 vision/classification/models[contribution]下面，类似于torchvision那样， 前期可以提供示例。",
          "difficulty": "中",
          "mentor": "周亦庄",
          "contact": "zhouyizhuang@megvii.com",
          "student_count": "",
          "update_time": "2020-05-20",
          "label": "2025173"
        },
        {
          "name": "实现 assistant 库",
          "description": "针对容易出错的使用方式，进行 warning 提示。希望达到玩游戏的时候的那种辅助提示的效果，比如 momentum < 0.5 的时候，提示：\"The momentum of batch normalization layer rarely uses a value less than 0.5, Please check the document for momentum's definition, which is different from PyTorch.\"。至多提示一次，如果用户觉得我明白风险，可以忽略或显式用 API 表明”我了解这个风险”",
          "difficulty": "高",
          "mentor": "许欣然",
          "contact": "xxr@megvii.com",
          "student_count": "",
          "update_time": "2020-05-20",
          "label": "2025174"
        },
        {
          "name": "MegEngine 网络可视化",
          "description": "基于 Netron，对 MegEngine 训练网络进行可视化",
          "difficulty": "高",
          "mentor": "许欣然",
          "contact": "xxr@megvii.com",
          "student_count": "",
          "update_time": "2020-05-20",
          "label": "2025175"
        },
        {
          "name": "C++ 文档生成",
          "description": "基于 Doxygen 和 Sphinx，生成用于集成在官网的 C++ 使用文档",
          "difficulty": "中",
          "mentor": "许欣然",
          "contact": "xxr@megvii.com",
          "student_count": "",
          "update_time": "2020-05-20",
          "label": "2025176"
        },
        {
          "name": "Models-CI 增加模型检查",
          "description": "对于Models中开源出去模型，进行试运行检查，及时定位Models中的问题",
          "difficulty": "高",
          "mentor": "王枫",
          "contact": "wangfeng02@megvii.com",
          "student_count": "",
          "update_time": "2020-05-20",
          "label": "2025177"
        }
      ]
    },
    {
      "anchor": "milvus",
      "img": "milvus.jpg",
      "title": "Milvus",
      "project_url": "https://github.com/milvus-io/community/tree/master/Events",
      "url": "https://www.milvus.io/cn/",
      "description": "开源的特征向量相似度搜索引擎。",
      "full_des": "Milvus 是一款开源的特征向量相似度搜索引擎,具有使用方便、实用可靠、易于扩展、稳定高效和搜索迅速等特点。Milvus 已经被广泛应用于多个领域,其中包括图像处理、机器视觉、自然语言处理、语音识别、推荐系统以及新药发现等。",
      "tech_tag": [
        "深度学习",
        "计算机视觉",
        "NLP",
        "语音识别",
        "化合物检索"
      ],
      "domain_tag": [],
      "mail_list": "milvusio.slack.com",
      "email": "community@zilliz.com",
      "project_list": [
        {
          "name": "Milvus 数据备份恢复工具",
          "difficulty": "高",
          "mentor": "莫毅华",
          "contact": "yihua.mo@zilliz.com",
          "student_count": 0,
          "description": "Milvus是一款开源的特征向量搜索引擎。目前正在开发0.10.0版本。由于某些版本间数据无法兼容，需要开发一套数据备份恢复工具和数据迁移工具，将旧版本数据导出备份，能够将备份数据恢复，且能够转换兼容不同版本Milvus。",
          "update_time": "2020-05-18",
          "label": "2018082"
        },
        {
          "name": "Milvus CLI 开发",
          "difficulty": "高",
          "mentor": "邹英豪",
          "contact": "yinghao.zou@zilliz.com",
          "student_count": 0,
          "description": "开发一个在命令行可以查询和管理Milvus的工具。使用这个工具可以测试Milvus实例的服务状态，可以列出实例上的所有Collection以及每个Collection的一些统计信息等，另外这个工具还可以在运行时修改Milvus的一些系统参数，例如auto_flush_interval等。工具需要交互友好，命令支持模糊自动补全。本项目需要使用Python开发。",
          "update_time": "2020-05-18",
          "label": "2018083"
        },
        {
          "name": "S3 存储支持",
          "difficulty": "中",
          "mentor": "蔡宇东",
          "contact": "yudong.cai@zilliz.com",
          "student_count": 0,
          "description": "S3是Simple Storage Service的缩写，即简单存储服务。它是由亚马逊提出的一套云存储服务接口，现在几乎所有的云服务都兼容S3。本项目目标是实现一个兼容S3存储的Codec，使得Milvus能够将结构化数据和非结构化数据存入兼容S3的云端存储，如 MinIO。",
          "update_time": "2020-05-18",
          "label": "2018084"
        },
        {
          "name": "HDFS 存储支持",
          "difficulty": "中",
          "mentor": "余昆",
          "contact": "kun.yu@zilliz.com",
          "student_count": 0,
          "description": "HDFS是基于流数据模式访问和处理超大文件的需求而开发的分布式文件系统，是分布式计算中数据存储管理的基础，为超大数据集（Large Data Set）的应用处理带来了很多便利。本项目目标是实现一个基于HDFS存储格式的Codec，使得Milvus能够使用HDFS格式来存储结构化数据和非结构化数据。",
          "update_time": "2020-05-18",
          "label": "2018085"
        },
        {
          "name": "Parquet存储支持",
          "difficulty": "中",
          "mentor": "王翔宇",
          "contact": "xy.wang@zilliz.com",
          "student_count": 0,
          "description": "Parquet是Hadoop生态系统中任何项目均可使用的列式存储格式，与数据处理框架、数据模型或者编程语言无关。本项目目标是实现一个基于Parquet存储格式的Codec，使得Milvus能够使用Parquet格式来存储结构化数据。",
          "update_time": "2020-05-18",
          "label": "2018086"
        },
        {
          "name": "Milvus 中的新聚类算法实现",
          "difficulty": "中",
          "mentor": "李盛俊",
          "contact": "shengjun.li@zilliz.com",
          "co-mentor": "许笑海 xiaohai.xu@zilliz.com",
          "student_count": 0,
          "description": "Milvus是一款开源的特征向量搜索引擎。聚类是一种常见的数据分类方法，在索引中有着重要的应用。Milvus目前使用k-means来实现聚类。请为它添加更多的聚类算法并添加相应的选择开关。",
          "update_time": "2020-05-18",
          "label": "2018087"
        },
        {
          "name": "Milvus 提供更多的索引类型",
          "difficulty": "中",
          "mentor": "李成明",
          "contact": "chengming.li@zilliz.com",
          "co-mentor": "李盛俊 shengjun.li@zilliz.com",
          "student_count": 0,
          "description": "Milvus是一款开源的特征向量搜索引擎。目前已经实现了基于空间分类的、基于图的等多种索引类型。请为其再添加一种基于Hash的索引方式。",
          "update_time": "2020-05-18",
          "label": "2018088"
        },
        {
          "name": "Flat 索引支持运行时指定距离类型",
          "difficulty": "低",
          "mentor": "李盛俊",
          "contact": "shengjun.li@zilliz.com",
          "co-mentor": "王翔宇 xiangyu.wang@zilliz.com",
          "student_count": 0,
          "description": "Milvus是一款开源的特征向量搜索引擎。不过目前尚不支持一份数据的多种距离计算，从而导致了某些场景的使用不便。请为其中的Flat索引支持计算时再指定距离类型的功能。",
          "update_time": "2020-05-18",
          "label": "2018089"
        },
        {
          "name": "GPU 显存使用优化",
          "difficulty": "高",
          "mentor": "王翔宇",
          "contact": "xy.wang@zilliz.com",
          "student_count": 0,
          "description": "FAISS IVF GPU 算法运行时所需要的显存与 NQ／nprobe 成正比，但 GPU 上的显存有限，因此当 NQ／nprobe 很大时，会出现 Out Of Memory。 本项目的目的是优化该算法，减小 GPU 显存使用量。",
          "update_time": "2020-05-18",
          "label": "2018090"
        }
      ]
    },
    {
      "anchor": "mind-spore",
      "img": "MindSpore.jpg",
      "title": "MindSpore",
      "project_url": "https://gitee.com/mindspore/community/tree/master/events/summer2020",
      "url": "https://www.mindspore.cn",
      "description": "全场景的的深度学习框架。",
      "full_des": "MindSpore是华为开源的一款支持端边云全场景的深度学习训练推理框架,当前主要应用于计算机视觉、自然语言处理等AI领域,旨在为数据科学家和算法工程师提供设计友好、运行高效的开发体验,提供昇腾AI处理器原生支持及软硬件协同优化。同时构筑面向全球的人工智能开源社区,推动人工智能软硬件应用生态繁荣发展。",
      "tech_tag": [
        "AI",
        "Deep Learning Framework"
      ],
      "domain_tag": [],
      "mail_list": "https://mailweb.mindspore.cn/postorius/lists/mindspore-discuss.mindspore.cn/",
      "email": "contact@mindspore.cn",
      "project_list": [
        {
          "name": "基于 MindSpore 的深度学习算法开发",
          "difficulty": "中",
          "mentor": "王俊",
          "contact": "wangjun289@huawei.com",
          "co-mentor": "",
          "student": 0,
          "description": "MindSpore是华为自研的深度学习框架，采用基于源码转换的自动微分，支持自动并行、深度图优化。MindSpore原生支持昇腾芯片，针对昇腾芯片架构特点，采用Pipeline并行、整图下沉等功能，可以达到很高的执行性能。目前MindSpore还处于发展阶段，本项目向大家介绍MindSpore特性及API使用，希望大家基于MindSpore进行深度学习算法开发，完成某项指定挑战。",
          "update_time": "2020-05-21",
          "label": "2017181"
        },
        {
          "name": "深度学习模型计算图相同子结构的识别和展示",
          "difficulty": "中",
          "mentor": "高寒",
          "contact": "gaohan19@huawei.com",
          "co-mentor": "",
          "student_count": 0,
          "description": "MindSpore是华为自研的深度学习框架，其中的计算图模式是一种业界主流的用来进行数据传递与计算的形式。计算图主要包含节点和有向边，节点表示计算和控制操作，边表示数据的流向和控制等关系。计算图的高效合理展示，有助于用户更好的理解模型结构、发现和调试模型训练过程中出现的问题。然而，大型深度学习模型往往有着复杂的计算图结构，包含有成千上万个节点和更多的边。在这些点和边之中，包含有许多结构相同或高度相似的子结构，这些子结构不仅从图的拓扑结构上，甚至从深度学习语义上具有高度的相似性。快速识别大型计算图中上述的相同子结构，能够支持后续用收折、重叠等方式大幅减少页面中同时呈现的节点和边的数目，从而大幅改善计算图的展示效果。",
          "update_time": "2020-05-21",
          "label": "2017182"
        }
      ]
    },
    {
      "anchor": "minigui",
      "img": "minigui.jpg",
      "title": "MiniGUI",
      "project_url": "https://gitlab.fmsoft.cn/VincentWei/build-minigui-5.0/blob/master/summer-2020/README.md",
      "url": "http://www.minigui.com",
      "description": "跨操作系统的图形用户界面（GUI）支持系统。",
      "full_des": "MiniGUI是一个快速、稳定、跨操作系统的图形用户界面（GUI）支持系统，广泛应用于智能硬件、智能物联网设备当中，用于为上层应用程序提供图形及图形用户界面的支持。",
      "tech_tag": [
        "Linux",
        "RTOS",
        "Mini",
        "GUI"
      ],
      "domain_tag": [
        "嵌入式软件开发",
        "开源社区"
      ],
      "mail_list": "summer2020@minigui.com",
      "email": "summer2020@minigui.com",
      "project_list": [
        {
          "name": "面向小屏幕智能设备的 MiniGUI 合成器",
          "description": "自 MiniGUI 5.0 起，MiniGUI 的多进程模式开始支持合成图式（compositing schema）。合成图式是现代桌面操作系统和智能手机操作系统的图形及窗口系统使用的技术，其基本原理很简单：系统中所有进程创建的每一个窗口都使用独立的缓冲区来各自渲染其内容，而系统中有一个扮演合成器（compositor）角色的进程，负责将这些内容根据窗口的 Z 序以及叠加效果（如半透明、模糊等）合成在一起并最终显示在屏幕上。本项目要求为 MiniGUI 5.0 的合成图式开发一个适合于小屏幕智能设备的定制合成器，实现自定义的窗口层叠效果（如阴影、模糊、不规则窗口等），以及窗口的切换动画等效果。",
          "difficulty": "高",
          "mentor": "魏永明",
          "contact": "vincent@minigui.org",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2038244"
        },
        {
          "name": "MiniGUI 的 DRM 加速图形引擎",
          "description": "DRM 已经成为 Linux 环境中新一代的现代图形支持框架。自 4.0 版本以来，MiniGUI 支持 DRM，但目前只提供了一个针对早期 Intel i915 芯片的加速图形引擎。该项目要求您为某个支持 DRM 且包含基础 2D 加速能力的 GPU 开发一个 MiniGUI 的 DRM 加速图形引擎。该 GPU 可以是 PC 显卡，也可以是嵌入式 SoC，如全志、瑞芯或者展讯的 SoC。",
          "difficulty": "中",
          "mentor": "魏永明",
          "contact": "vincent@minigui.org",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2038245"
        },
        {
          "name": "HybridOS 图形栈增强",
          "description": "HybridOS 是飞漫软件正在开发中的针对物联网的新一代操作系统。飞漫软件已基于 MiniGUI、Mesa、Cairo 等开源软件发布了 HybridOS 图形栈。在 Mesa 的 MiniGUI Backend 实现中，目前未提供对 EGL pixel buffer 的支持。本项目要求在现有 Mesa MiniGUI backend 的实现基础上，提供对 EGL pixel buffer 的支持。",
          "difficulty": "中",
          "mentor": "魏永明",
          "contact": "vincent@minigui.org",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2038246"
        },
        {
          "name": "MiniGUI 中文输入法增强",
          "description": "MiniGUI 现有开源的中文输入法引擎已经过时了。本项目要求移植一个成熟的开源中文输入法引擎，使得 MiniGUI 应用可以获得更好的中文输入法支持。",
          "difficulty": "低",
          "mentor": "魏永明",
          "contact": "vincent@minigui.org",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2038247"
        },
        {
          "name": "将 MiniGUI 5.0 运行到 RT-Thread 或者 FreeRTOS 开发板上",
          "description": "将 MiniGUI 5.0 (Standalone 或者 Threads 模式）移植到运行 RT-Thread 或者 FreeRTOS 的开发板上。需要开发针对具体开发板的图形引擎、输入引擎等。",
          "difficulty": "低",
          "mentor": "魏永明",
          "contact": "vincent@minigui.org",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2038248"
        }
      ]
    },
    {
      "anchor": "oi-wiki",
      "img": "oi.jpg",
      "title": " OI Wiki",
      "project_url": "https://git.io/summer2020",
      "url": "https://oi-wiki.org",
      "description": "编程竞赛知识,内含炫酷算术魔法！",
      "full_des": "OI Wiki 是一个编程竞赛知识整合站点,提供有趣又实用的编程竞赛知识以及其他有帮助的内容,帮助广大编程竞赛爱好者更快更深入地学习编程竞赛。同时我们围绕 OI Wiki 主站开展一些相关的基础设施建设,包括 markdown 渲染工具以及周边诸多开发工具。详情可以访问 https://github.com/OI-wiki",
      "tech_tag": [
        "typescript",
        "react",
        "remark",
        "unified",
        "algorithm",
        "data-structure",
        "competitive-programming"
      ],
      "domain_tag": [
        "算法与数据结构教育",
        "开发工具",
        "web"
      ],
      "mail_list": "https://t.me/oiwiki",
      "email": "hi@oi-wiki.org",
      "project_list": [
        {
          "name": "撰写、完善 OI Wiki 上的内容",
          "difficulty": "中",
          "mentor": "ir1d",
          "contact": "sirius.caffrey@gmail.com",
          "co-mentor": "Falsyta falsyta@pku.edu.cn",
          "student_count": 0,
          "description": "OI Wiki 是一个编程竞赛知识整合站点,提供有趣又实用的编程竞赛知识以及其他有帮助的内容,帮助广大编程竞赛爱好者更快更深入地学习编程竞赛。然而,算法与数据结构知识迭代更新较快,仍有很多 OI Wiki 尚未涉及的内容。本项目目标是选定若干新颖有趣的 topic,并将其引入 OI Wiki。寻找有趣的 topic 可以参考 e-maxx-eng, AlgoWiki 。",
          "update_time": "2020-05-13",
          "label": "2019091"
        },
        {
          "name": "改进前端渲染框架",
          "difficulty": "中",
          "mentor": "mgt/Enter-tainer",
          "contact": "mgt@oi-wiki.org",
          "co-mentor": "diauweb diauweb@live.com",
          "student_count": 0,
          "description": "当前,OI Wiki 使用 mkdocs 作为静态页面生成引擎。然而由于 mkdocs 并非专门为 Wiki 类项目设计,因而与我们的需求存在较大差距,此外还难以实现对语法和页面的定制。因此,目前 OI Wiki 正在将前端迁移到基于 React 和 GraphQL 的页面生成框架 Gatsby 上,从而实现对页面的深度定制。目前,我们已经实现了基本的框架代码（见下面的仓库）。然而它还不尽完善,我们希望为它添加更多的功能,覆盖用户的需求。",
          "update_time": "2020-05-13",
          "label": "2019092"
        },
        {
          "name": "完善基于 Unified AST 的 markdown 基础设施",
          "difficulty": "中",
          "mentor": "ir1d",
          "contact": "sirius.caffrey@gmail.com",
          "student_count": 0,
          "description": "在即将上线的新前端中,为了支持我们的诸多 markdown 自定义语法, OI Wiki 使用 remark 作为 markdown parser,并使用 rehype 生成对应的 html 页面。首先,我们希望能够基于现有的 Unified AST,生成相应的 LaTeX code 并导出排版优美的 pdf 文档。OI Wiki 开发过一版导出工具（见下面的仓库 remark-latex）,但是由于缺乏维护,对于图片等语法的支持不够完善,使用起来也需要大量人工操作。我们希望能够基于 Unified AST 及现有实现,改进或重构出一个较优美的 markdown 转 LaTeX 导出工具。此外,上游社区也有一些优秀的 LaTeX AST 实现供参考（见下面的 latex-utensils 及 LaTeX.js）。其次,为了让多人协作的 markdown 文件更整齐,我们采用了 remark-lint 来规范 markdown 中内容的格式。目前 OI Wiki 的格式化工具见下方 linter 仓库,启用的格式化规则见 https://github.com/OI-wiki/OI-wiki/blob/master/.remarkrc ,但是目前的实现还不够完善,比如对于公式两侧添加若干多余的空格、details 语法限制过严等等。我们希望通过这个项目,规范整理 lint 规则。",
          "update_time": "2020-05-13",
          "label": "2019093"
        },
        {
          "name": "测试数据生成工具",
          "difficulty": "中",
          "mentor": "Billchenchina",
          "contact": "billchenchina2001@gmail.com",
          "student_count": 0,
          "description": "在即将上线的新前端中,我们希望能添加一些辅助竞赛选手的实用工具。测试数据生成工具就是其中之一。在解题过程中,选手往往会有自己造一些样例数据的需求,我们希望能设计一个前端工具来简化这一流程。目前有一些类似的工具供参考,如 cyaron,testlib, Tree-Generator 。",
          "update_time": "2020-05-13",
          "label": "2019094"
        },
        {
          "name": "OI Wiki 引入计划",
          "difficulty": "中",
          "mentor": "Marcythm",
          "contact": "marcythm@gmail.com",
          "co-mentor": "ksyx ksyxmeow@outlook.com",
          "student_count": 0,
          "description": "在 wiki 的编写过程中需要参考大量的外界资料以使得 wiki 质量更高、更为完善及更易读。本项目主要工作内容为参考、翻译外文资料并将其融入 OI Wiki 现有内容中。",
          "update_time": "2020-05-19",
          "label": "2019162"
        },
        {
          "name": "OI Wiki 国际化",
          "difficulty": "中",
          "mentor": "ksyx",
          "contact": "ksyxmeow@outlook.com",
          "co-mentor": "Marcythm marcythm@gmail.com",
          "student_count": 0,
          "description": "OI Wiki 上收录了大量优质的算法内容，但是他们主要是以中文编写的，会对外国友人的学习造成一定的障碍，因此为了更好的扩大 OI Wiki 的影响力和帮助到更多的人，开展本项目。本项目主要内容为将 OI Wiki 上现有的内容按照格式要求翻译成英文。",
          "update_time": "2020-05-19",
          "label": "2019163"
        },
        {
          "name": "编修、清理、校订 OI Wiki 的文档",
          "difficulty": "中",
          "mentor": "Marcythm",
          "contact": "marcythm@gmail.com",
          "co-mentor": "hi@oi-wiki.org",
          "student_count": 0,
          "description": "OI Wiki 上收录了大量优质的算法内容，但是仍有相当多的页面在语言表述上较为随意，会对大家学习体验与效果产生一定的影响。本项目希望能将 OI Wiki 上现有的内容按照格式要求进行合理的编修、调整格式、清理、校订。",
          "update_time": "2020-05-19",
          "label": "2019164"
        }
      ]
    },
    {
      "anchor": "opencv",
      "img": "opencv.jpg",
      "title": "OpenCV China",
      "project_url": "http://www.opencv.org.cn/?page_id=411",
      "url": "http://www.opencv.org.cn",
      "description": "开源计算机视觉和机器学习库。",
      "full_des": "OpenCV是采用C/C++实现的开源计算机视觉和机器学习库,遵循BSD协议,研究或商用均为免费。OpenCV包含超过2500个优化的经典的和当前先进水平的计算机视觉算法。 这些算法可用于人脸检测识别、目标跟踪、提取目标3D模型、3D点云处理、全景拼接等。OpenCV被企业、研究机构以及政府部门广泛使用。OpenCV中国团队是受深圳市人工智能与机器人研究院支持于2019年9月成立的非营利组织,主要目的是推广OpenCV,并从用户尤其是中国用户那里获得反馈以提升OpenCV。团队的一个工作重点是提升OpenCV对嵌入式系统的支持,让更多的计算机视觉应用可以借助OpenCV高效快速的部署到各种嵌入式系统中。其他工作还包括如强化OpenCV对3D数据的处理、DNN模块的提升、OpenCV对各种传感器的支持、不同硬件平台上OpenCV的加速等。推出OpenCV中文课程是团队推广OpenCV一项重要内容,通过课程让用户更好更深入的全面了解OpenCV。",
      "tech_tag": [
        "C",
        "C++",
        "Python",
        "Java",
        "JavaScript"
      ],
      "domain_tag": [
        "计算机视觉",
        "深度学习"
      ],
      "email": "admin@opencv.org.cn",
      "project_list": [
        {
          "name": "Write a tutorial about using universal intrinsics and cv::parallel_for_ for efficient cross-platform algorithm implementation",
          "difficulty": "中",
          "mentor": "Shiqi Yu",
          "contact": "admin@opencv.org.cn",
          "student_count": 0,
          "description": "Universal intrinsics is OpenCV way to write cross-platform and yet very efficient code on a variety of platforms. The technique is widely used inside OpenCV, but it’s not well-known to many OpenCV users, including contributors, who are supposed to provide high-quality fast code into OpenCV. This tutorial should fill this important missing part of the documentation.",
          "update_time": "2020-05-14",
          "label": "2020095"
        },
        {
          "name": "Create nuget package for OpenCV and OpenCV contrib",
          "difficulty": "中",
          "mentor": "Satya Mallick",
          "contact": "admin@opencv.org.cn",
          "student_count": 0,
          "description": "Nuget is the standard Microsoft package manager. If done properly, it can become the most convenient way to install OpenCV on Windows. We can also create opencv_contrib nuget package, and thus provide a convenient way for OpenCV users to install experimental OpenCV functionality on Windows.",
          "update_time": "2020-05-14",
          "label": "2020096"
        },
        {
          "name": "Support Audio IO module",
          "difficulty": "中",
          "mentor": "Intel OpenCV team member",
          "contact": "admin@opencv.org.cn",
          "student_count": 0,
          "description": "At the moment, OpenCV can works with inference deep neural network with help DNN module. But DNN module has limitation, it work with only images. In addition, exist much network which work with audio. That why proposed support audio input/output in OpenCV for extension functionality of library and more specifically extension functionality of DNN module.",
          "update_time": "2020-05-14",
          "label": "2020097"
        },
        {
          "name": "Implementation of QR-codes decoder and encoder",
          "difficulty": "中",
          "mentor": "Intel OpenCV team member",
          "contact": "admin@opencv.org.cn",
          "student_count": 0,
          "description": "OpenCV has well-working QR codes detection and decoding algorithm. Currently it uses third party library for decoding and doesn’t have functionality for creation of QR-codes. The first task will be implementation decoder with help of OpenCV functionality. This will help to solve second task – QR-code encoder (tasks are interconnected). Student will need to research QR-codes decoding algorithms, error correction rules, data character encoding methods and to program decoder and encoder.",
          "update_time": "2020-05-14",
          "label": "2020098"
        },
        {
          "name": "Data Augmentation",
          "difficulty": "高",
          "mentor": "Intel OpenCV team member",
          "contact": "admin@opencv.org.cn",
          "student_count": 0,
          "description": "Deep learning networks are hungry for data and data augmentation is one of the easiest ways to increase data variation. Augmentation could be as simple image flipping, cropping and scaling on up to more complicated transformations such style transfer using another deep learning network. For computer vision problems, OpenCV is often used for reading images in most of training scenarios, so why we’d like to enhance data reading with simple to use data augmentation techniques as well.",
          "update_time": "2020-05-14",
          "label": "2020099"
        },
        {
          "name": "Incremental and Batch Simplification of Point Clouds",
          "difficulty": "中",
          "mentor": "Mihai Bujanca",
          "contact": "admin@opencv.org.cn",
          "student_count": 0,
          "description": "With a rapid growth of computer vision application areas such as robotics, self-driving cars, drones, as well as augmented reality, and with increasing availability of various depth sensors, there is also more demand in software that would be able to process point clouds coming from these sensors efficiently in realtime on low-power processors. And so the efficient cloud processing becomes one of OpenCV strategic directions. Reducing the number of points in a point cloud prior to triangulation can be used to simultaneously improve the quality of point clouds and reduce the memory footprint. This project aims at an efficient implementation of the “Incremental and Batch Planar Simplification of Dense Point Cloud Maps paper” (see link in Resources).",
          "update_time": "2020-05-22",
          "label": "2020194"
        }
      ]
    },
    {
      "anchor": "openeuler",
      "img": "openeuler.jpg",
      "title": "openEuler Community",
      "project_url": "https://openeuler.org/zh/events/20200607.html",
      "url": "https://www.openeuler.org",
      "description": "通过社区合作,创新 Linux 平台。",
      "full_des": "openEuler 是一个开源、免费的 Linux 发行版平台,将通过开放的社区形式与全球的开发者共同构建一个开放、多元和架构包容的软件生态体系。同时,openEuler 也是一个创新的平台,鼓励任何人在该平台上提出新想法、开拓新思路、实践新方案。",
      "tech_tag": [
        "Linux",
        "Git",
        "GCC",
        "RPM"
      ],
      "domain_tag": [
        "操作系统",
        "内核",
        "包管理"
      ],
      "mail_list": "community@openEuler.org",
      "email": "contact@openeuler.org",
      "project_list": [
        {
          "name": "移植 openEuler 至 RK3399 平台",
          "rules": ["本年度唯一团队项目","限3-6人","奖金额度6万"],
          "difficulty": "高",
          "sponsor": "该项目由 openEuler社区 资助",
          "mentor": ["@overweight","@woqidaideshi"],
          "contact": ["hexiaowen@huawei.com","yafen@iscas.ac.cn"],
          "student_count": 2,
          "hot_index": 4,
          "description": "openEuler 是一款开源操作系统。当前 openEuler 内核源于 Linux，支持鲲鹏及其它多种处理器，能够充分释放计算芯片的潜能，是由全球开源贡献者构建的高效、稳定、安全的开源操作系统。RK3399 是瑞芯微推出的一款低功耗、高性能的应用处理器芯片。作为 Firefly 新一代的顶级开源平台，RK3399 凭借其高稳定性、高性能、高集成度、高扩展性而广泛用于人脸识别设备、无人机、机器人、游戏机等应用产品。本项目的目标是将 openEuler 移植到 Firefly-RK3399 上，并保证 RK3399 的外设均可用。",
          "update_time": "2020-05-28",
          "label": ""
        },
        {
          "name": "为 openEuler 添加 Xfce 桌面环境并能够运行在树莓派 4B 上",
          "difficulty": "高",
          "mentor": "@woqidaideshi",
          "contact": "yafen@iscas.ac.cn",
          "student_count": 0,
          "description": "树莓派（英语：Raspberry Pi）是基于 Linux 的单片机电脑，目的是以低价硬件及自由软件促进学校的基本计算机科学教育。openEuler 树莓派版本目前没有桌面环境。本项目的目标是为树莓派添加桌面支持，即适配桌面环境 Xfce 到 openEuler 树莓派 4B。",
          "update_time": "2020-05-18",
          "label": "2021100"
        },
        {
          "name": "精简 openEuler 的树莓派 4B 镜像体积小于 500 MiB",
          "difficulty": "中",
          "mentor": "@woqidaideshi",
          "contact": "yafen@iscas.ac.cn",
          "student_count": 0,
          "description": "树莓派（英语：Raspberry Pi）是基于 Linux 的单片机电脑，目的是以低价硬件及自由软件促进学校的基本计算机科学教育。树莓派需要刷写文件系统镜像来实现启动，镜像文件常常都较大，不利于快速分发和安装。本项目目标是为制作压缩前小于 500 MiB 的 openEuler 树莓派 4B 镜像，并能够通过 DNF 或 YUM等安装软件源中更多的软件进来。镜像尽可能小。",
          "update_time": "2020-05-18",
          "label": "2021101"
        },
        {
          "name": "为 openEuler 树莓派 4B 镜像提供 UEFI 启动支持",
          "difficulty": "中",
          "mentor": "@woqidaideshi",
          "contact": "yafen@iscas.ac.cn",
          "student_count": 0,
          "description": "树莓派（英语：Raspberry Pi）是基于 Linux 的单片机电脑，目的是以低价硬件及自由软件促进学校的基本计算机科学教育。为了降低成本，树莓派省去了传统计算机用来存储引导加载程序的板载存储器(BIOS), 直接把引导程序放在了SD卡中。目前树莓派 Pi 4 引入了 UEFI，不过目前处于 EXPERIMENTAL 状态。本项目目标是为树莓派引入 UEFI Firmware 来支持 UEFI 启动 openEuler 树莓派 4B。",
          "update_time": "2020-05-18",
          "label": "2021102"
        },
        {
          "name": "在 openEuler aarch64 架构上完成 Tensorflow 基于公开数据集完成 mnist 训练过程",
          "difficulty": "低",
          "mentor": "@sinever",
          "contact": "sinever@126.com",
          "student_count": 0,
          "description": "没有软件工程师不知道 Hello world，也没有 AI 工程师不知道 mnist 。OpenEuler 上对 AI 的支持也正如火如荼进行，为了让大家熟悉在 openEuler 上 AI 的软件栈和开发流程，请从源代码出发构建 Tensorflow 的 aarch64 架构安装包(包括 pip 和 yum )，用这些安装包基于公开的数据集完成 mnist 的训练过程。",
          "update_time": "2020-05-26",
          "label": "2021200"
        },
        {
          "name": "在 openEuler aarch64 架构上完成 PyTorch 基于公开数据集完成 mnist 训练过程",
          "difficulty": "低",
          "mentor": "@sinever",
          "contact": "sinever@126.com",
          "student_count": 0,
          "description": "没有软件工程师不知道 Hello world，也没有 AI 工程师不知道 mnist 。OpenEuler 上对 AI 的支持也正如火如荼进行，为了让大家熟悉在 openEuler 上 AI 的软件栈和开发流程，请从源代码出发构建 PyTorch 的 aarch64 架构安装包(包括 pip 和 yum )，用这些安装包基于公开的数据集完成 mnist 的训练过程。",
          "update_time": "2020-05-26",
          "label": "2021201"
        },
        {
          "name": "虚拟化场景下的类似 top 点调测工具 virttop",
          "difficulty": "中",
          "mentor": "@zhanghailiang_lucky",
          "contact": "zhang.zhanghaliang@huawei.com",
          "co-mentor": "@yorifang fangying1@huawei.com",
          "student_count": 0,
          "description": "云场景，性能类问题无法快速定位定界，缺少定位手段。例如CPU性能不足，网络性能抖动等常见问题定位周期长，定位手段少。CPU超分场景经常出现虚拟机的 vcpu争抢，需要提供vcpu使用监控手段，期望能够提供一套类似top的实时监测工具。",
          "update_time": "2020-05-26",
          "label": "2021202"
        },
        {
          "name": "构建可运行 iSulad 点容器镜像，并推送到 Docker Hub 镜像仓库",
          "description": "当前 Docker Hub 等镜像仓库中无 iSulad 镜像，要求制作能够运行 iSulad 的容器镜像，并推送到 Docker Hub 上，能够使用 Docker、iSulad 下载该镜像，并能够启动 iSulad 。",
          "difficulty": "中",
          "mentor": "@lifeng2221dd1",
          "contact": "lifeng68@huawei.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021203"
        },
        {
          "name": "C 语言 JSON 解析转换代码生成框架",
          "description": "当前 iSulad 项目中，存在大量的json相关的操作（C结构体转换为JSON字符串，JSON字符串转换为C结构体）。由于C语言没有反射机制，导致无法动态解析JSON字符串。因此，需要一个生成解析和转换代码的框架。而且该框架可以支持多种json解析库，例如c-json，yajl等等。",
          "difficulty": "难",
          "mentor": "@haozi007",
          "contact": "liuhao27@huawei.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021204"
        },
        {
          "name": "iSula 相关项目支持编译 Debian 包",
          "description": "当前 iSula 相关项目，只支持 rpm 编译方式（提供了spec文件）。但是 Debian 相关的系统上面需要源码编译，所以存在编译不方便的问题。因此，需要提供 Debian 打包的支持。",
          "difficulty": "低",
          "mentor": "@haozi007",
          "contact": "liuhao27@huawei.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021205"
        },
        {
          "name": "iSula 项目内存池设计与实现",
          "description": "当前 iSula 相关项目无内存池设计，程序在堆上频繁分配和释放内存，容易造成系统出现大量内存碎片，同时也降低了内存的利用率，也造成了 iSulad 性能的损失，因此，iSulad 需要设计一个高效高性能且可应对高并 发的内存池设计。",
          "difficulty": "难",
          "mentor": "@jingwoo",
          "contact": "wujing50@huawei.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021206"
        },
        {
          "name": "iSula 项目线程池设计与实现",
          "description": "当前 iSula 相关项目无线程池设计，程序存在频繁创建和销毁线程的场景，CPU 资源开销大, 效率也相对低下，因此，iSulad 需要设计一个高性能的线程池，能支持自动扩容与收缩的动态资源分配。",
          "difficulty": "难",
          "mentor": "@jingwoo",
          "contact": "wujing50@huawei.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021207"
        },
        {
          "name": "iSula-kits 支持在多个 OS 发型版上运行",
          "description": "iSula-kits 为 iSula 容器全栈的工具集，包括镜像构建工具、容器升级工具等。当前 iSula-kits 只支持在 openEuler OS 上运行，我们需要将 iSula-kits 工具集稳定可靠运行在其他主流的发行版OS上。推荐优先完成 ：CentOS，Ubuntu，openSuse，Fedora，Debian 的最新版本。",
          "difficulty": "中",
          "mentor": "@zklei",
          "contact": "leizhongkai@huawei.com",
          "co-mentor": "@zhangsong234 zhangsong34@huawei.com",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021208"
        },
        {
          "name": "iSula 容器镜像构建工具支持多存储驱动",
          "description": "iSula-kits 项目中的容器镜像构建工具 isula-build 目前底层驱动只支持 Overlay2。在一些特性场景下块设备具有独特的性能优势，例如：大文件读写等场景。我们需要增加一种后端的存储驱动：devicemapper，并且可以通过配置 来选择驱动。",
          "difficulty": "中",
          "mentor": "@jingxiaolu",
          "contact": "jingxiaolu@huawei.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021209"
        },
        {
          "name": "openEuler 集成 Harbor 项目",
          "description": "Harbor是一个用于存储和分发Docker镜像的企业级Registry服务器，可以用来构建企业内部的Docker镜像仓库。容器镜像仓库是云原生中的重要组成部分，因此我们希望参与者能够提供harbor在openEuler上的标准发布软件包，并在社区的基础上能够便捷、快速的让使用者使用harbor组件",
          "difficulty": "中",
          "mentor": "@caihaomin",
          "contact": "caihaomin@huawei.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021210"
        },
        {
          "name": "改进 openEuler-Advisor 来支持 openEuler 快速滚动升级",
          "description": "绝大多数开源软件被集成到 openEuler 中以后，并不需要做额外的修改。比如当前 openEuler 中有 1276 个软件可以直接基于上游社区源码构建。 我们希望改进 openEuler-Advisor，在识别到这类软件有升级以后，可以自动化的完成软件版本更新，并提交 PR。",
          "difficulty": "高",
          "mentor": "@Shinwell_Hu",
          "contact": "huxinwei@huawei.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021211"
        },
        {
          "name": "为 ARM 平台优化开源软件的 CRC 实现",
          "description": "CRC 可以用来检测数据的完整性，在存储、压缩解压缩、通信等领域是被广泛使用的算法，openEuler中就有大量软件使用。鲲鹏平台（兼容ARM v8.1）中全面支持了CRC加速指令，相对软件查表实现，性能有30倍的差异。 但是加速指令并没有在软件实现中得到普及。",
          "difficulty": "中",
          "mentor": "@Shinwell_Hu",
          "contact": "huxinwei@huawei.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021212"
        },
        {
          "name": "库函数行为收集器",
          "description": "访问控制针对的是应用、被访问的对象以及访问模式。但是，为了做好访问控制，对于一个程序（无论是二进制的还是有源码的)，让开发者去逐个搜罗所有可能的访问对象也是很头疼的事，尤其是隐含在所使用的库函数中的访问对象，甚至是隐藏在深层嵌套的函数中的访问对象。【这里不提strace、ltrace类工具，因为那是需要把应用运行起来才能去收集访问对象的。这里关注的是静态获取访问对象。】对C库的所有函数构造一个{func, file, access_mode}的映射表（可称为 _函数级访问映射表_ ），就可以帮助开发者挖掘出隐含的访问对象。C库的历史很久了，其中所含函数的行为也基本稳定，相应地，这个函数级访问映射表也应该是稳定的。 很多其它库与C库类似，可以把这种方法推广到其它库上。为这些库建立一个映射表后，可以自动获取应用中隐含的访问对象（至少是部分的），其余的部分可以让开发者自己去补充（开发者对此应该非常了解）。 进一步说，对于一个C源程序，找出其中所含的函数(可能是深层调用的)，再借助上述映射表，就可以构建出{app, file, access_mode}这样的 _应用级访问映射表_ ，作为为此应用制定访问控制策略的输入。 本任务的目的就是完成一个工具，实现对这种应用级映射表的自动构建。 具体步骤包括： 1，收集【先只针对C库】  ： 收集C库中的所有函数，找出它们要访问或者引用的文件(具有磁盘文件inode的各类对象)，形成一个{func, file, access_mode}的映射表； 2，扫描：扫描给定app的源码（C），找出步骤1中可以识别的函数； 3，汇总：基于扫描结果，形成该app的访问映射表{app, file, access_mode}集合。 这个集合不是app的所有访问范围，只是隐含在库函数中的访问范围。【其它明确通过open类函数使用的文件对象可由开发者单独列出】",
          "difficulty": "中",
          "mentor": "mailofzxf",
          "contact": "mailofzxf@aliyun.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021213"
        },
        {
          "name": "SVA （Share Virtual Address）引擎",
          "description": "现代的 Linux 操作系统中的用户态程序均基于 Virtual Address。不用用户态程序的 Virtual Address 相互独立，即用户态程序独占各自的 Virtual Address Space。当两个或者多个进程进行进程间通信时，通过基于 share memory 的 IPC 机制可以将不同 Virtual Address Space 中的 Virtual Address 指向相同的 physical memory。但 App1 中 “共享内存” 所占用的 Virtual Address 和 App2 中 “共享内存” 所占用 的 Virtual Address 可能并不相同。试想有一个 ‘SVA engine’，通过 ‘SVA engine’ 提供的操作接口，将多个 APP 挂载到 ‘SVA engine’ 上。挂载到 ‘SVA engine’ 上同一个 ‘channel’ 的 APP 将共享 Virtual Address Space 中的一段或者多段虚拟地址。",
          "difficulty": "高",
          "mentor": "@liliang_euler",
          "contact": "liliang6@me.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021214"
        },
        {
          "name": "LSCA - Linux 系统调用代理",
          "description": "Linux 内核提供了系统调用给用户态程序调用。Linux APP 通过系统调用获取 Linux 内核提供的各项服务。对 APP 而言，使用到的系统调用可能只是 Linux 内核提供的全部系统调用集合的一个子集。基于如下考虑：> 对一个标准 APP 而言，其一般通过 glibc 提供的对系统调用的封装进行系统调用。那么 LSCA（Linux System Call Agent）> 期望取代 glibc 完成的功能，针对系统调用，进行自定义的封装。LSCA 首先接管 APP 的系统调用请求，然后根据配置，完成：- log 到日志（依据配置，可选）- 完成真正的 System Call（真正的系统调用**不能够** 通过和 Linux 内核进行交互来完成，特征是，由 Linux 内核提供的系统调用服务需要切换处理器运行模式，而此处提供系统调用服务的是 LSCA daemon 服务，不需要切换处理器运行模式）。",
          "difficulty": "高",
          "mentor": "@liliang_euler",
          "contact": "liliang6@me.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021215"
        },
        {
          "name": "LUTF - Linux Userspace Task Framework",
          "description": "标准的 Linux 的用户态任务（基本粒度为 Thread）通常由 Linux 内核进行管理和调度。LUTF 是一套**非标准**的任务框架。LUTF要完成：- 任务的定义与抽象，典型的，一个任务可以是一个**C语言函数**；- 提供任务的管理接口，提供任务的创建，管理等功能；- 进行任务的调度；约束：> 纯 Linux 用户态实现；> 同时支持的任务数量不少于一百万；> 任务的调度支持 FIFO；> 基于 setjmp 和 longjmp 实现任务切换；> 基于 signal 实现中断；",
          "difficulty": "高",
          "mentor": "@liliang_euler",
          "contact": "liliang6@me.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021216"
        },
        {
          "name": "为openEuler - RISC-V 添加grub的引导启动方式",
          "description": "RISC-V 是一个开源指令集（ISA instruction set architecture )，openEuler 对于此架构正在进行探索性的支持，成立了 [RISC-V SIG 组](https://gitee.com/openeuler/community/tree/master/sig/sig-RISC-V)；Grub是主流linux发行版都采用的引导方式。在启动方式上，与openEuler 发行版镜像所采用的grub2 引导启动不同的是，openEuler for RISC-V 采用的是openSBI + kernel 直接启动的方式。目前openEuler的grub 版本是2.02，在grub 2.04 版本中，新增了对于RISC-V 架构的支持；因此，可以为 openEuler for RISC-V 添加grub 的引导启动的方式，使其能够接近openEuler发行版的启动形式。",
          "difficulty": "中",
          "mentor": "@whoisxxx",
          "contact": "zhangxuzhou4@huawei.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021217"
        },
        {
          "name": "在 openEuler aarch64 架构上完成 mlpack 基于公开数据集完成 mnist 训练过程",
          "description": "没有软件工程师不知道 Hello world，也没有 AI 工程师不知道 mnist。OpenEuler 上对AI 的支持也正如火如荼，为了让大家熟悉在 openEuler 上 AI 的软件栈和开发流程，现在请从源代码出发构建 mlpack 的安装包(yum)，用自己构建的安装包基于公开的数据集完成 mnist 的训练过程。",
          "difficulty": "高",
          "mentor": "@sinever",
          "contact": "sinever@126.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021218"
        },
        {
          "name": "在 openEuler aarch64 架构上完成 Hadoop WordCount 统计过程",
          "description": "没有软件工程师不知道Hello world，也没有大数据工程师不知道wordcount。OpenEuler上对bigdata的支持也正如火如荼，为了让大家熟悉在openEuler上的bigdata的软件栈和开发流程，现在请从源代码出发构建hadoop的 安装包(jar和yum)，用自己构建的安装包完成wordcount的统计过程。",
          "difficulty": "高",
          "mentor": "@sinever",
          "contact": "sinever@126.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021219"
        },
        {
          "name": "在 openEuler aarch64 架构上完成 Spark WordCount 统计过程",
          "description": "没有软件工程师不知道Hello world，也没有大数据工程师不知道wordcount。OpenEuler上对bigdata的支持也正如火如荼，为了让大家熟悉在openEuler上的bigdata的软件栈和开发流程，现在请从源代码出发构建spark的安装包(jar和yum)，用自己构建的安装包基于公开的数据集完成wordcount的训练过程。",
          "difficulty": "高",
          "mentor": "@sinever",
          "contact": "sinever@126.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021220"
        },
        {
          "name": "在 openEuler aarch64 架构上完成 Flink WordCount 统计过程",
          "description": "没有软件工程师不知道Hello world，也没有大数据工程师不知道wordcount。OpenEuler上对bigdata的支持也正如火如荼，为了让大家熟悉在openEuler上的bigdata的软件栈和开发流程，现在请从源代码出发构建 Flink 的安装包(jar和yum)，用自己构建的安装包完成wordcount的统计过程。",
          "difficulty": "高",
          "mentor": "@sinever",
          "contact": "sinever@126.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021221"
        },
        {
          "name": "在openEuler 版本上各个版本间进行包差异比较",
          "description": "linux操作系统由众多开源软件包组成，为了更好对于各个操作系统版本间的软件包进行对比分析，需要获取操作系统自带软件包信息，以及对不同版本间操作系统软件包进行对比分析，分析内容包括软件包，软件包版本，软件包安装后的文件结构，软件包携带的服务、软件包携带的配置信息等。",
          "difficulty": "中",
          "mentor": "@jimmy_hero",
          "contact": "huming15@163.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021222"
        },
        {
          "name": "开发工具判断同一个软件在openEuler 不同系统间依赖的软件、接口、参数是否发生变化",
          "description": "不同操作系统的软件包组成不完全一致，对应用程序而言是灾难性的，存在大量工作在评估软件之间是否兼容性，希望能够有一个软件，对软件的依赖在不同系统下进行评估，确认不同系统对应用的影响，提高跨系统移植的效率。",
          "difficulty": "中",
          "mentor": "@jimmy_hero",
          "contact": "huming15@163.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021223"
        },
        {
          "name": "网络可视化工具",
          "description": "BCC/BPFTrace/eBPF是目前比较活跃的内核窥探技术，目的是通过此类技术完成内核网络的窥探，实现一些可以可以在生产环境部署的窥探工具。相关的工具包括但不限于：- 窥探TCP流类型，判断应用的流特点，可以 大体划分成时延敏感性、生命周期短、数据流大等几种类型；- 窥探TCP重传、RTT、队列深度、内存占用的情况，评估网络质量;- 窥探协议栈、驱动，通过报文染色方式，完成E2E网络定界;- 实现一个协议栈function trace工具，能够基于流trace内核协议栈函数调用栈。上述工具要充分考虑对现有协议栈性能的影响，最好能够支持在生产环境部署。",
          "difficulty": "中",
          "mentor": "@MrRlu",
          "contact": "newlife_lala@163.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021224"
        },
        {
          "name": "对openEuler社区发布包osc和obs-build进行加固测试",
          "description": "openEuler 社区作为一个集成社区，发布了上千个软件包；为更好地保障各软件包提供的能力能够满足用户使用场景，除依赖原生上游社区的测试能力外，还需要进行更深层更广的测试活动。本任务从系统影响程度和用户 使用场景角度出发，选取关键软件包进行测试加强活动。具体实施策略如下：- 分析软件包提供的功能/具体用户使用场景/发布命令及参数/提供服务/包使用资源消耗等方面- 进行相应的测试设计活动，如功能类/性能类/可靠性类等- 根据测试设计编写相应的测试代码和调试- 提交PR到码云对应仓库- maintainer评审合入",
          "difficulty": "中",
          "mentor": "@charlie_li",
          "contact": "liyongqiang329@163.com",
          "co-mentor": "@lemon-higgins lemon.higgins@aliyun.com",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021225"
        },
        {
          "name": "基于 openEuler 的 4.19 内核主线 virtiofs 并完成构建和基础使用",
          "description": "virtio-fs是使用FUSE协议在host和guest之间通信，实现在不同guest之间共享同一个host目录树结构，拥有较好的性能和跟本地文件系统(如ext4)一样的语义。",
          "difficulty": "低",
          "mentor": "volcanodragon",
          "contact": "liuzhiqiang@huawei.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021226"
        },
        {
          "name": "Linux 内核 Crash 问题自动定位工具",
          "description": "Linux 内核异常 Crash，常需要人工进行定位分析，比如分析反汇编，分析函数栈，分析寄存器等信息。期望根据已有的 Crash 信息，能够通过工具自动化解析足够多有用信息，以及尽量能够定位出问题。",
          "difficulty": "高",
          "mentor": "@yeyunfeng-dev",
          "contact": "yeyunfeng@huawei.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021227"
        },
        {
          "name": "系统资源负载预测框架",
          "description": "为了实现对系统资源的及时调度，A-Tune需要对系统各维度资源进行相对准确的预测，从而能够在运行时进行动态调度，满足性能和功耗诉求。",
          "difficulty": "难",
          "mentor": "@xiezhipeng1",
          "contact": "xiezhipeng1@huawei.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021228"
        },
        {
          "name": "基于 Posix 接口的协程框架",
          "description": "对于大部分应用程序，实际并不关心实际的运行实体是什么。基于linux kernel的线程调度机制相较于协程占用资源多，上下文切换时间长。当前行业内的解决方案主要是语言级别的协程调度方案，典型的如go routine。 本课题的目标是基于glibc的posix接口编程，提供用户无感知的协程调度框架，解决提升存量软件性能。具体包含：目标一：pthread相关库的协程化，包含线程管理已经基于线程的条件变量，锁等接口。目标二：基于目标一，实现网络编程相关接口的协程化。目标三：全量的posix接口协程化配合。glibc源码：https://gitee.com/src-openeuler/glibc",
          "difficulty": "高",
          "mentor": "@liqingqing_1229",
          "contact": "liqingqing3@huawei.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021229"
        },
        {
          "name": "对 openEuler 社区发布包 keepalived 进行加固测试",
          "description": "openEuler社区作为一个集成社区，发布了上千个软件包；为更好地保障各软件包提供的能力能够满足用户使用场景，除依赖原生上游社区的测试能力外，还需要进行更深层更广的测试活动。本任务从系统影响程度和用户使用场景角度出发，选取关键软件包进行测试加强活动。具体实施策略如下：- 分析软件包提供的功能/具体用户使用场景/发布命令及参数/提供服务/包使用资源消耗等方面- 进行相应的测试设计活动，如功能类/性能类/可靠性类等- 根据测试设计编写相应的测试代码和调试- 提交PR到码云对应仓库- maintainer评审合入",
          "difficulty": "中",
          "mentor": "@Charlie_Li",
          "contact": "liyongqiang329@163.com",
          "co-mentor": "@lemon.higgins lemon.higgins@aliyun.com",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021230"
        },
        {
          "name": "对 openEuler 社区发布包 kmod-kvdo 进行加固测试",
          "description": "openEuler社区作为一个集成社区，发布了上千个软件包；为更好地保障各软件包提供的能力能够满足用户使用场景，除依赖原生上游社区的测试能力外，还需要进行更深层更广的测试活动。本任务从系统影响程度和用户使用场景角度出发，选取关键软件包进行测试加强活动。具体实施策略如下：- 分析软件包提供的功能/具体用户使用场景/发布命令及参数/提供服务/包使用资源消耗等方面- 进行相应的测试设计活动，如功能类/性能类/可靠性类等-  根据测试设计编写相应的测试代码和调试- 提交PR到码云对应仓库- maintainer评审合入",
          "difficulty": "中",
          "mentor": "@Charlie_Li",
          "contact": "liyongqiang329@163.com",
          "co-mentor": "@lemon.higgins lemon.higgins@aliyun.com",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021231"
        },
        {
          "name": "对 openEuler 社区发布包 OpenVPN 进行加固测试",
          "description": "openEuler社区作为一个集成社区，发布了上千个软件包；为更好地保障各软件包提供的能力能够满足用户使用场景，除依赖原生上游社区的测试能力外，还需要进行更深层更广的测试活动。本任务从系统影响程度和用户使用场景角度出发，选取关键软件包进行测试加强活动。具体实施策略如下：- 分析软件包提供的功能/具体用户使用场景/发布命令及参数/提供服务/包使用资源消耗等方面- 进行相应的测试设计活动，如功能类/性能类/可靠性类等-  根据测试设计编写相应的测试代码和调试- 提交PR到码云对应仓库- maintainer评审合入",
          "difficulty": "中",
          "mentor": "@Charlie_Li",
          "contact": "liyongqiang329@163.com",
          "co-mentor": "@lemon.higgins lemon.higgins@aliyun.com",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021232"
        },
        {
          "name": "对 openEuler 社区发布包 lrzsz 进行加固测试",
          "description": "openEuler社区作为一个集成社区，发布了上千个软件包；为更好地保障各软件包提供的能力能够满足用户使用场景，除依赖原生上游社区的测试能力外，还需要进行更深层更广的测试活动。本任务从系统影响程度和用户使用场景角度出发，选取关键软件包进行测试加强活动。具体实施策略如下：- 分析软件包提供的功能/具体用户使用场景/发布命令及参数/提供服务/包使用资源消耗等方面- 进行相应的测试设计活动，如功能类/性能类/可靠性类等-  根据测试设计编写相应的测试代码和调试- 提交PR到码云对应仓库- maintainer评审合入",
          "difficulty": "中",
          "mentor": "@Charlie_Li",
          "contact": "liyongqiang329@163.com",
          "co-mentor": "@lemon.higgins lemon.higgins@aliyun.com",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021233"
        },
        {
          "name": "对 openEuler 社区发布包 ipvsadm 进行加固测试",
          "description": "openEuler社区作为一个集成社区，发布了上千个软件包；为更好地保障各软件包提供的能力能够满足用户使用场景，除依赖原生上游社区的测试能力外，还需要进行更深层更广的测试活动。本任务从系统影响程度和用户使用场景角度出发，选取关键软件包进行测试加强活动。 具体实施策略如下：分析软件包提供的功能/具体用户使用场景/发布命令及参数/提供服务/包使用资源消耗等方面; 进行相应的测试设计活动，如功能类/性能类/可靠性类等; 根据测试设计编写相应的测试代码和调试; 提交PR到码云对应仓库; maintainer评审合入。",
          "difficulty": "中",
          "mentor": "@Charlie_Li",
          "contact": "liyongqiang329@163.com",
          "co-mentor": "@lemon.higgins lemon.higgins@aliyun.com",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021234"
        },
        {
          "name": "对 openEuler 社区发布包 MongoDB 进行加固测试",
          "description": "openEuler社区作为一个集成社区，发布了上千个软件包；为更好地保障各软件包提供的能力能够满足用户使用场景，除依赖原生上游社区的测试能力外，还需要进行更深层更广的测试活动。本任务从系统影响程度和用户使用场景角度出发，选取关键软件包进行测试加强活动。具体实施策略如下：- 分析软件包提供的功能/具体用户使用场景/发布命令及参数/提供服务/包使用资源消耗等方面- 进行相应的测试设计活动，如功能类/性能类/可靠性类等-  根据测试设计编写相应的测试代码和调试- 提交PR到码云对应仓库- maintainer评审合入",
          "difficulty": "中",
          "mentor": "@Charlie_Li",
          "contact": "liyongqiang329@163.com",
          "co-mentor": "@lemon.higgins lemon.higgins@aliyun.com",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021235"
        },
        {
          "name": "对 openEuler 社区发布包 Redis 进行加固测试",
          "description": "openEuler社区作为一个集成社区，发布了上千个软件包；为更好地保障各软件包提供的能力能够满足用户使用场景，除依赖原生上游社区的测试能力外，还需要进行更深层更广的测试活动。本任务从系统影响程度和用户使用场景角度出发，选取关键软件包进行测试加强活动。具体实施策略如下：- 分析软件包提供的功能/具体用户使用场景/发布命令及参数/提供服务/包使用资源消耗等方面- 进行相应的测试设计活动，如功能类/性能类/可靠性类等-  根据测试设计编写相应的测试代码和调试- 提交PR到码云对应仓库- maintainer评审合入",
          "difficulty": "中",
          "mentor": "@Charlie_Li",
          "contact": "liyongqiang329@163.com",
          "co-mentor": "@lemon.higgins lemon.higgins@aliyun.com",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021236"
        },
        {
          "name": "对 openEuler 社区发布包 sssd 进行加固测试",
          "description": "openEuler社区作为一个集成社区，发布了上千个软件包；为更好地保障各软件包提供的能力能够满足用户使用场景，除依赖原生上游社区的测试能力外，还需要进行更深层更广的测试活动。本任务从系统影响程度和用户使用场景角度出发，选取关键软件包进行测试加强活动。具体实施策略如下：- 分析软件包提供的功能/具体用户使用场景/发布命令及参数/提供服务/包使用资源消耗等方面- 进行相应的测试设计活动，如功能类/性能类/可靠性类等-  根据测试设计编写相应的测试代码和调试- 提交PR到码云对应仓库- maintainer评审合入",
          "difficulty": "中",
          "mentor": "@Charlie_Li",
          "contact": "liyongqiang329@163.com",
          "co-mentor": "@lemon.higgins lemon.higgins@aliyun.com",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021249"
        },
        {
          "name": "对 openEuler 社区发布包 MySQL 进行加固测试",
          "description": "openEuler社区作为一个集成社区，发布了上千个软件包；为更好地保障各软件包提供的能力能够满足用户使用场景，除依赖原生上游社区的测试能力外，还需要进行更深层更广的测试活动。本任务从系统影响程度和用户使用场景角度出发，选取关键软件包进行测试加强活动。具体实施策略如下：- 分析软件包提供的功能/具体用户使用场景/发布命令及参数/提供服务/包使用资源消耗等方面- 进行相应的测试设计活动，如功能类/性能类/可靠性类等-  根据测试设计编写相应的测试代码和调试- 提交PR到码云对应仓库- maintainer评审合入",
          "difficulty": "中",
          "mentor": "@Charlie_Li",
          "contact": "liyongqiang329@163.com",
          "co-mentor": "@lemon.higgins lemon.higgins@aliyun.com",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021238"
        },
        {
          "name": "对 openEuler 社区发布包 rpcbind 进行加固测试",
          "description": "openEuler社区作为一个集成社区，发布了上千个软件包；为更好地保障各软件包提供的能力能够满足用户使用场景，除依赖原生上游社区的测试能力外，还需要进行更深层更广的测试活动。本任务从系统影响程度和用户使用场景角度出发，选取关键软件包进行测试加强活动。具体实施策略如下：- 分析软件包提供的功能/具体用户使用场景/发布命令及参数/提供服务/包使用资源消耗等方面- 进行相应的测试设计活动，如功能类/性能类/可靠性类等-  根据测试设计编写相应的测试代码和调试- 提交PR到码云对应仓库- maintainer评审合入",
          "difficulty": "中",
          "mentor": "@Charlie_Li",
          "contact": "liyongqiang329@163.com",
          "co-mentor": "@lemon.higgins lemon.higgins@aliyun.com",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021239"
        },
        {
          "name": "对 openEuler 社区发布包 haproxy 进行加固测试",
          "description": "openEuler社区作为一个集成社区，发布了上千个软件包；为更好地保障各软件包提供的能力能够满足用户使用场景，除依赖原生上游社区的测试能力外，还需要进行更深层更广的测试活动。本任务从系统影响程度和用户使用场景角度出发，选取关键软件包进行测试加强活动。具体实施策略如下：- 分析软件包提供的功能/具体用户使用场景/发布命令及参数/提供服务/包使用资源消耗等方面- 进行相应的测试设计活动，如功能类/性能类/可靠性类等-  根据测试设计编写相应的测试代码和调试- 提交PR到码云对应仓库- maintainer评审合入",
          "difficulty": "中",
          "mentor": "@Charlie_Li",
          "contact": "liyongqiang329@163.com",
          "co-mentor": "@lemon.higgins lemon.higgins@aliyun.com",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021240"
        },
        {
          "name": "移植 libapparmor 到 openEuler 社区",
          "description": "openEuler社区作为一个集成社区，发布了上千个软件包；上游社区存在多种Linux LSM安全机制，主流包括SELinux、APParmor、SMACK、Tomoyo等，当前openEuler默认使用SELinux安全机制，同时内核也支持APParmor，为 满足社区不同的应用场景，在openEuler上也支持apparmor机制具体实施策略如下：1、分析上游apparmor上游社区提供的软件包https://gitlab.com/apparmor/apparmor/-/wikis/home2、将上层软件包移植到openEuler上并进行验证3、提供移植部署相关的文档材料4、提交PR到码云对应仓库https://gitee.com/src-openeuler/apparmor5、maintainer评审合入",
          "difficulty": "高",
          "mentor": "@zhujianwei001",
          "contact": "zhujianwei7@huawei.com",
          "co-mentor": "@mailofzxf",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021241"
        },
        {
          "name": "SELinux 策略应用指导",
          "description": "当前openEuler社区主要提供了SELinux机制来保证系统的安全性，但SELinux策略规则应用复杂，这也极大的阻碍了该机制在生产环境中的应用。具体实施策略如下：1、熟悉SELinux基本使用命令，完善SELinux在openEuler中的使用指导。2、分析openEuler系统中现有的SELinux规则3、提供SELinux策略相关问题的排查指导4、提供新建SELinux策略模块的标准步骤5、maintainer评审合入",
          "difficulty": "中",
          "mentor": "@zhujianwei001",
          "contact": "zhujianwei7@huawei.com",
          "co-mentor": "@mailofzxf",
          "student_count": 0,
          "update_time": "2020-05-26",
          "label": "2021242"
        },
        {
          "name": "开发 openEuler bootstrap 工具",
          "description": "借鉴 Linux From Scratch 和 crosstool-ng，开发一套自动化构建工具，该工具支持利用src.rpm源代码，从零构建 openEuler 。一个可能的建议是，利用crosstool-ng工具，从openEuler x86_64构建 i686版本的二进制rpm。",
          "difficulty": "高",
          "mentor": "overweight",
          "contact": "hexiaowen@huawei.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-27",
          "label": "2021272"
        },
        {
          "name": "openEuler aarch64架构上软件包优化和集成",
          "description": "为了使aarch64平台的用户能够使用上更快的openEuler，我们需要对基础库、加速库进行优化，目前[鲲鹏计算](https://github.com/kunpengcompute)已开源一系列基于aarch64的优化，也有很多加速库在上游社区完成了aarch64优化，但这些软件优化尚未集成到openEuler OS中。这些软件包括但不限于：glibc、snappy、zstd、gzip、isa-l、hyperscan等。我们需要完成3个工作：1. **添加打包**。至少完成 isa-l、x265、hyperscan 等3个软件包的添加，在https://gitee.com/src-openeuler新建仓库并增加打包源代码。2. **aarch64优化集成**。将鲲鹏 优化的集成到已添加的欧拉的发布包中，至少完成glibc、snappy、isa-l、x265、hyperscan、zstd等6个优化的集成，代码合入到https://gitee.com/src-openeuler指定库。注：优化代码可以从https://github.com/kunpengcompute获取。3. **博客总结**。完成后，对鲲鹏优化的优化源码进行阅读，总结完成技术博客，同步发布到openEuler博客。",
          "difficulty": "中",
          "mentor": "yikun",
          "contact": "jiangyikun@huawei.com",
          "co-mentor": "derek zhangxuelei4@huawei.com",
          "hot_index": 0,
          "update_time": "2020-05-27",
          "label": "2021273"
        },
        {
          "name": "基于 openEuler 的 ABI 检查工具",
          "description": "[lvc](https://github.com/lvc) 有一系列abi的导出和分析工具。 借鉴或复用该开源工具，实现一套完整的abi检查工具。 - 该工具能否查询导出与ABI相关的信息（如API接口，头文件数据结构，配置文件，命令行选项等）。 - 该工具提供统一的框架，支持插件式扩展，前期可以支持c/c++的信息导出，后续可增加对python、perl或java等语言 的支持。 - 该工具能够支持统一软件多版本二进制或源码间的abi差异对比。 - 该工具支持报告导出功能。 - 该工具易于应用在openEuler后续软件包升级的差异对比，协助开发者、maintainer评估软件升级的影响。",
          "difficulty": "高",
          "mentor": "overweight",
          "contact": "hexiaowen@huawei.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-27",
          "label": "2021274"
        },
        {
          "name": "提供 openEuler 满足 openscap 标准的安全配置基线",
          "description": "OpenSCAP项目提供了由开源社区开发的各种加固指南和配置基线，确保您能够选择适合您组织需求的安全策略。当前openEuler通过安全加固工具已经提供了默认的加固内容，但为了兼容国际主流标准，需要基于openSCAP 提供openEuler的安全配置基线。具体实施策略如下：1、熟悉openSCAP相关标准。2、修改openSCAP软件包，指 定openEuler的安全配置基线。3、提交相应的代码4、maintainer评审合入",
          "difficulty": "中",
          "mentor": "@zhujianwei001",
          "contact": "zhujianwei7@huawei.com",
          "co-mentor": "@mailofzxf",
          "hot_index": 0,
          "update_time": "2020-05-27",
          "label": "2021275"
        },
        {
          "name": "optee 移植到openEuler",
          "description": "鲲鹏芯片有 TrustZone 支持，optee 是开源的ARM trustzone OS。任务目标是把 optee OS/driver/client 移植到 openEuler 并在鲲鹏硬件平台上运行起来。",
          "difficulty": "高",
          "mentor": "@blue0613",
          "contact": "gaoguijin@huawei.com",
          "co-mentor": "",
          "hot_index": 0,
          "update_time": "2020-05-27",
          "label": "2021276"
        },
        {
          "name": "openEuler 虚拟化调度性能评估工具及方法构建",
          "description": "云场景下，为充分利用物理资源，虚拟机通常存在CPU复用场景。虚拟化平台在此种场景下，既要保 障物理资源充分利用，又要保障虚拟化内部业务Qos，这对虚拟化平台调度是一个重要考验。那么如何做好一个虚拟化调 度平台，需要我们构建一套虚拟化调度评估方法及体系，当前openEuler社区此方面能力欠缺，需要我们调研引入适配移 植业界典型工具及业务场景评估方法。",
          "difficulty": "中",
          "mentor": "@KuhnChen18",
          "contact": "kuhn.chenqun@huawei.com",
          "co-mentor": "",
          "hot_index": 0,
          "update_time": "2020-05-27",
          "label": "2021277"
        },
        {
          "name": "为 openEuler 创建用户轨迹运营看板",
          "description": "openEuler运营看板已经采集了部分数据，展示了基础数据以及基础的统计数据，比如issue个数、总数等，但对单用户个体数据并没有进行展示，无法知道用户喜好及时推送并制定对应用户的的运营措施。",
          "difficulty": "高",
          "mentor": "@Zhongjun2",
          "contact": "jun.zhongjun@huawei.com",
          "co-mentor": "",
          "hot_index": 0,
          "update_time": "2020-05-27",
          "label": "2021278"
        },
        {
          "name": "对 openEuler 社区发布包 zip/unzip 进行 CRC 加速",
          "description": "zip/unzip使用了CRC32（多项式0xedb88320）来校验数据的正确性。软件使用了常用的查表法来做CRC计算，性能并不理 想。在ARMv8.1，提供了CRC32/CRC32C的专用指令：crc32d, crc32w, crc32h, crc32b, crc32cd, crc32cw, crc32ch, crc32cb。分别实现64bit、32bit、16bit和8bit数据的CRC计算。相对于查表法，ARM CRC指令快30倍左右。也就是说，对同一数据做CRC，加速指令耗用时间是查表法的1/30。对于CRC-32和CRC-32C，GCC提供了builtin函数，可以在C代码里直接 调用。builtin函数名字就是对应的汇编指令名字前加“__”，比如__crc32d函数对应crc32d指令。另外，还需添加“-march=armv8.1-a”编译选项。openEuler社区的zip/unzip发布包均没有为ARM平台做过优化。本任务的目标就是为这两个软件包在ARM上做加速，提高压缩性能。",
          "difficulty": "中",
          "mentor": "@colordev",
          "contact": "colordev@hotmail.com",
          "co-mentor": "",
          "hot_index": 0,
          "update_time": "2020-05-27",
          "label": "2021279"
        },
        {
          "name": "自动脱敏网络抓包工具",
          "description": "现有wireshake、tcpdump这类工具存在两类问题- 报文payload信息没有脱敏，导致这类工具无 法在生产环境使用。- 有些抓包工具在大流量情况下会导致crash，无法在生产环境使用。实现一个脱敏网络抓包 工具，要求如下：- 可以灵活抓取网络报文，报文内容要具备自动脱敏能力；- 可以在生产环境部署，不影响在线业务性能。- 支持主流网卡驱动",
          "difficulty": "中",
          "mentor": "@MrRlu",
          "contact": "newlife_lala@163.com",
          "co-mentor": "",
          "hot_index": 0,
          "update_time": "2020-05-27",
          "label": "2021280"
        },
        {
          "name": "以 openEuler LTS 为基础生成公有云镜像",
          "description": "公有云上都是以镜像的形式来使用OS系统，制作一个工具来帮助自动化从openEuler的iso或者repo制作出各种公有云的虚拟机镜像，例如华为云，阿里云，AWS，腾讯云等。",
          "difficulty": "高",
          "mentor": "myeuler",
          "contact": "myeuler@163.com",
          "co-mentor": "luanjianhai luanjianhai@163.com",
          "hot_index": 0,
          "update_time": "2020-05-27",
          "label": "2021281"
        },
        {
          "name": "内核数据竞争检测工具",
          "description": "内核数据竞争检测，业界当前可以通过静态测试工具（比如 [SVF](https://github.com/lifeasageek/SVF/tree/svf-razzer) 和动态测试方法（比如 [kcsan](https://github.com/google/ktsan/tree/kcsan) 来检测内核竞争，但是静态测试误报较太多，kcsan动态检测出来的很多问题也是无害的，因此本课题目标是把静态测试工具或动态 测试工具（SVF和KCSAN，或其他类似的工具）输出的检测信息作为输入，通过精准构造的方式来构造真实竞争，通过内核自运行或者kasan等机制来检测是否是真正的竞争bug。",
          "difficulty": "高",
          "mentor": "walkingwalk",
          "contact": "wubodong@huawei.com",
          "co-mentor": "",
          "hot_index": 0,
          "update_time": "2020-05-27",
          "label": "2021282"
        },
        {
          "name": "为 openEuler 提供 PR Preview 功能",
          "description": "openEuler官网采用Hugo框架渲染Markdown成最终的静态文件部署，开发流程中缺少针对Pull Request的渲染结果浏览，本任务的目标是通过kubernetes的CRD+Operator提供多静态网站实例的编译和浏览功能，提高开发和 检视流程的易用性。",
          "difficulty": "中",
          "mentor": "@TommyLike",
          "contact": "tommylikehu@gmail.com",
          "co-mentor": "",
          "hot_index": 0,
          "update_time": "2020-05-27",
          "label": "2021283"
        },
        {
          "name": "开源基础设施智能自检自愈系统",
          "description": "随着社区参与者与贡献规模的增加，社区在不断向开源基础设施提出诸多需求。这给基础设施的运维难度和稳定性带来了挑战，我们希望基础设施能更加强健，并具有一定的自检查、自修复能力。",
          "difficulty": "中",
          "mentor": "@George.Cao",
          "contact": "george.cao@huawei.com",
          "co-mentor": "",
          "hot_index": 0,
          "update_time": "2020-05-27",
          "label": "2021284"
        },
        {
          "name": "everything tool on openEuler",
          "description": "windows下everything工具是非常好用的文件快速检索软件，但是在linux下一直没有对应工具（有一些很有历史的命令，做不到快速检索）；希望能够在openEuler中找到对应everything的快速检索工具。本题目为开 放式，实现方式难度不等，可以去开源社区寻找优秀的业界实现，移植到openEuler平台；或借鉴已有实现，进行相关优 化，目标是实现一个快速，可用，易用的文件检索工具。P.S. 实现方式可以基于命令行或图形界面",
          "difficulty": "中等-困难",
          "mentor": "@denggx_elros",
          "contact": "dengguangxing@huawei.com",
          "co-mentor": "",
          "hot_index": 0,
          "update_time": "2020-05-27",
          "label": "2021285"
        },
        {
          "name": "openEuler 集成 Kubernetes 相关软件包",
          "description": "Kubernetes是用于自动部署，扩展和管理容器化应用程序的开源系统，也是如今云原生中最重要的底层基石之一 。我们希望参与者能够提供Kubernetes相关软件在openEuler上的标准发布软件包，包括kubelet、kubectl等。并能够让 用户在openEuler上更便捷地部署和使用kubernetes",
          "difficulty": "中",
          "mentor": "@radeon92",
          "contact": "caoruidong@huawei.com",
          "co-mentor": "",
          "hot_index": 0,
          "update_time": "2020-05-27",
          "label": "2021286"
        },
        {
          "name": "QEMU 用户态进程热补丁框架",
          "description": "* QEMU进程作为虚拟机进程需要常驻运行，但用户态软件发布上线后经常会存在一些紧急BUG需要在 线修复；* **用户态热补丁技术**是指在程序处于运行状态的时候，在线修改程序运行逻辑的技术，和内核态livepatch机制类似；* 相比内核态热补丁技术而言，用户态热补丁技术更具挑战性，用户态热补丁技术对云软件的可维护性具 有重要意义；* 本题目要求参与者为例如QEMU之类的**用户态进程实现一个简易的热补丁框架**，能够为QEMU进程提供热补丁能力支持。任务链接：* [https://gitee.com/openeuler/marketing/issues/I1IG8E?from=project-issue](https://gitee.com/openeuler/marketing/issues/I1IG8E?from=project-issue)",
          "difficulty": "高",
          "mentor": "@zhanghailiang",
          "contact": "fangying1@huawei.com",
          "co-mentor": "@yorifang",
          "hot_index": 0,
          "update_time": "2020-05-27",
          "label": "2021287"
        },
        {
          "name": "openeuler 系统的内存统计工具",
          "description": "请编写一个内存统计工具，能够统计openeuler系统中内核态内存使用情况，包括：1.vmalloc内存都被谁申请了？2.slab内存都被谁申请了？3.内存page页都被谁申请了？4.lru链表上的内存页都是哪些cache？这些统计信息，可以通过proc接口设置和获取，并可以统计指定模块占用的内存。",
          "difficulty": "中",
          "mentor": "@lvying6",
          "contact": "- lvying6@huawei.com",
          "co-mentor": "@Pces chenjialong@huawei.com @licihua licihua@huawei.com",
          "hot_index": 0,
          "update_time": "2020-05-27",
          "label": "2021288"
        },
        {
          "name": "openEuler 集成 CRIU 工具",
          "description": "CRIU是基于linux的用户态进程迁移软件，也是容器迁移的底层操作工具；CRIU可以完成用户态进程 的Checkpoint/Restore操作，分别用于将进程所有相关运行状态保存到本地磁盘，以及根据磁盘文件恢复完全一致的进程。CRIU本身是纯用户态工具，但是依赖linux内核提供的相关能力，相应内核patch从3.8开始逐渐合入。本次项目目 标是将CRIU工具打包，加入openEuler发布件（基于X86和Arm64平台）",
          "difficulty": "中",
          "mentor": "@denggx_elros",
          "contact": "dengguangxing@huawei.com",
          "co-mentor": "",
          "hot_index": 0,
          "update_time": "2020-05-27",
          "label": "2021289"
        },
        {
          "name": "adler32算法在ARM平台的优化",
          "description": "Adler-32是马克·阿德勒（Mark Adler）在1995年发明的一种校验和 算法，是对弗莱彻校验和的一种改进。与相同长度的循环冗余校验相比，它以可靠性为代价（优先选择后者）。Adler-32比Fletcher-16更可靠，而可靠性却比Fletcher-32低。Adler-32在基础压缩库libz中使用，常见压缩和解压场景中，adler-32的算法热点会比较高，优化该算法可以提升libz基础库的性能。SIMD简介：单指令流多数据流（英语：Single Instruction Multiple Data，缩写：SIMD）是一种采用一个控制器来控制多个处理器，同时对一组数据（又称“数据向量”）中的每一个分别执行相同的操作从而实现空间上的并行性的技术。ARM平台使用SIMD优化adler-32的案例：https://developer.arm.com/architectures/instruction-sets/simd-isas/neon/neon-programmers-guide-for-armv8-a/neon-intrinsics-chromium-case-study/adler-32，使用SIMD向量指令优化adler-32性能能使PNG解码性能提升了5%~18%。",
          "difficulty": "高",
          "mentor": "@liqiang9102",
          "contact": "liqiang64@huawei.com",
          "co-mentor": "",
          "hot_index": 0,
          "update_time": "2020-05-27",
          "label": "2021290"
        },
        {
          "name": "QEMU 中集成 virtio-fuzz 能力以支持模拟设备的模糊测试",
          "description": "QEMU 中模拟大量设备（网卡、磁盘等），这些往往也是不可信的，甚至可能运行一些恶意软件，因 此本课题目标在qemu中开发用于仿真设备的模糊测试；基于覆盖率反馈的启发式模糊测试(libfuzzer/AFL)被认为是一种 较为有效的方式，可通过覆盖率反馈快速快速生成随机输入，而无需依靠人工指导；当前upstream社区提供两种实现方式：1. 基于libFuzzer：https://patchwork.kernel.org/cover/11393233/2. 基于AFL：https://kvmforum2019.sched.com/event/Tmv7/virtio-device-fuzzing-dmitrii-stepanov-yandex可以选择一种将其移植到openEuler qemu中 ，并基于某种设备完成定制。",
          "difficulty": "中",
          "mentor": "panny060",
          "contact": "pannengyuan@huawei.com",
          "co-mentor": "",
          "hot_index": 0,
          "update_time": "2020-05-27",
          "label": "2021291"
        },
        {
          "name": "基于需求覆盖度判断的用例筛选方法（RBC，requirement-based coverage）探索及工程构建",
          "description": "OS内核及基础包众多，在代码迭代过程中，都需要执行大量自动化用例来保证修改的代码不会影响模块的原有功能。但是，现在的用例集和用例级别划分不是很明确，每次执行的用例有很多是冗余的。如何准确的筛选出能够覆盖代码的最小用例集合，在尽量少的时间内完成迭代验证，提升OpenEuler的交付效率，是我们想要解决的问题。通过执行用例时，跟踪用例覆盖到的代码分支和语句，可以有效识别出用例在代码中的覆盖范围，从而可以筛除冗余用 例，构建精简的能够全面覆盖模块功能的用例集。",
          "difficulty": "高",
          "mentor": "hw_niubility",
          "contact": "hw_niubility@yeah.net",
          "co-mentor": "",
          "hot_index": 0,
          "update_time": "2020-05-27",
          "label": "2021292"
        },
        {
          "name": "基于 Sealight 构建云手机的自动化测试",
          "description": "云手机测试包括接口测试、集成测试、数据流测试、UI测试等多个维度的测试，代码层次多，接口多，且UI界面变化频繁，使用传统的测试工具，覆盖难度大。\n使用Sealight等AI测试工具，深度扫描接口和UI，自动生成用例，提升用例开发效率",
          "difficulty": "高",
          "mentor": "hw_niubility",
          "contact": "hw_niubility@yeah.net",
          "co-mentor": "",
          "hot_index": 0,
          "update_time": "2020-05-27",
          "label": "2021293"
        }
      ]
    },
    {
      "anchor": "postgresqlchina",
      "img": "postgresqlchina.jpg",
      "title": "中国开源软件联盟PostgreSQL分会",
      "project_url": "https://pgfans.cn/a-detail?id=20",
      "url": "https://www.postgresqlchina.com",
      "description": "在中国构建PostgreSQL产业生态，推动PostgreSQL产学研用发展。",
      "full_des": "中国开源软件推进联盟PostgreSQL分会（简称：中国PG分会）于2017年成立，由国内多家PostgreSQL生态企业所共同发起，业务上接受工信部中国电子信息产业发展研究院指导。中国PG分会是一个非盈利行业协会组织。在技术方面，我们通过PGFans问答社区，帮助中国的PG从业者解决各种各样的技术问题，并助力他们在技术能力、职业生涯、影响力上获得提升。",
      "tech_tag": [
        "PostgreSQL",
        "数据库",
        "开源数据库",
        "Database"
      ],
      "domain_tag": [
        "数据库",
        "内核开发",
        "运维管理",
        "DBA",
        "DEV"
      ],
      "mail_list": "",
      "email": "partner@postgresqlchina.com"
    },
    {
      "anchor": "rcore-os",
      "img": "rcore.jpg",
      "title": "rCore OS",
      "project_url": "https://github.com/rcore-os/rCore/wiki/OSPP-2020",
      "url": "https://github.com/rcore-os/",
      "description": "用 Rust 开发操作系统！",
      "full_des": "rCore OS 是探索用 Rust 语言开发系统软件的一个以学生为主的开源软件社区。rCore/zCore 是用 Rust 语言实现的小型操作系统内核，兼容 Linux 程序 / Fuchsia 程序。此项目起源于清华大学计算机系操作系统课的课程设计，目前已经发展出一整套 Rust 语言开发操作系统的解决方案和生态环境，相关成果正尝试用于操作系统课的教学实验与科研探索中。我们的使命是继续探索挖掘 Rust 语言开发底层系统的潜力，使之成为 C/C++ 之外开发 OS 的另一种选择。",
      "tech_tag": [
        "Rust",
        "x86_64",
        "ARM",
        "RISCV",
        "MIPS"
      ],
      "domain_tag": [
        "Rust 语言",
        "操作系统内核"
      ],
      "mail_list": "",
      "email": ""
    },
    {
      "anchor": "ros-navigation",
      "img": "ros.jpg",
      "title": "ROS Navigation",
      "project_url": "https://navigation.ros.org/2020summerOfCode/projects/create_configuration_assistant.html",
      "url": "https://navigation.ros.org",
      "description": "Mobile robot navigation framework and system.",
      "full_des": "ROS2 Navigation is a community working to build a high-quality production grade navigation system on ROS2. ROS2 is particularly well suited for production due to its real-time, multi-platform, and secure features. Navigation2 seeks to build a navigation framework to support all manner of mobile robots including differential, omnidirectional, legged, ackermann (cars), and more. We also provide implementations of robust base algorithms to use to get your robot up and running quickly with a rich ecosystem of tools and conventions. Our framework is built using modern multi-processor techniques and behavior trees to enable custom and complex behaviors for your mobile robot system.",
      "tech_tag": [
        "robotics",
        "robot",
        "navigation",
        "C++",
        "control",
        "planning",
        "perception"
      ],
      "domain_tag": [
        "robotics",
        "AI",
        "navigation",
        "controllers",
        "perception",
        "motion planning",
        "ROS",
        "ROS2"
      ],
      "mail_list": "https://discourse.ros.org",
      "email": "stevenmacenski@gmail.com",
      "project_list": [
        {
          "name": "Create a Configuration Assistant (Analog to MoveIt)",
          "description": "Moveit has long has a QT configuration assistant. This setup assistent helps the user configure their UDRF and needs to setup MoveIt configuration files. A configuration assistant could be extremely beneficial to Navigation2 users as a way to minimize friction. We should provide a gui tool to cover the following configurations: the broad strokes with the costmap, with a visualizer to show the user what it will look like; Select configurable costmap layers; Select recovery behavior parameters; URDF, footprint, and frame selection to make sure the options comply with standards, planner, and controller; Set minimum and maximum speed and other kinematic parameters; Select from a dropdown of possible planners and controllers; Helpful notes throughout the prompts to aid in selecting appropriate parameters; Selecting at behavior tree; @steve please add more specific options. After the items are configured, there should be a preview to see how the parameters effect the robot.",
          "difficulty": "高",
          "mentor": "Steve Macenski",
          "contact": "stevenmacenski@gmail.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "Create New Planner and Controller Plugins",
          "description": "The ROS2 Navigation Stack has a number of plugin interfaces to help users create or select specific plugins for planning, control, and recovery for their applications. Two specific areas that the Navigation2 stack could use more algorithm plugins for is for path planning (referred to as a planner plugin) and local trajectory generation (referred to as controller plugins). A simple tutorial for creating a planner plugin can be found here. Currently, we have one planner, NavFn which implements an A* and Dijkstra’s planner. It also has two controllers, DWB and TEB which implement a DWA and timed elastic-band optimization techniques. There is also a Hybrid-A* and OMPL planner in development. Your task will be to create a high-quality implementation of one of the following algorithms for the navigation2 plugin interfaces. Alternative algorithms may also be considered upon approval, please ask @steve in the application phase. Please select only one to discuss. Planner Plugin Options: D* or variant, Vornoi planner, Navigation graph route planner, State Lattice planner, kinodynamic planner, and any planning method given a set of dynamic and static obstacles. Controller Plugin Options: CiLQR, iLQR, MPC, Splines, path following or dynamic obstacle following controllers. Additional options: helping in completing the OMPL or Hybrid-A* planner.",
          "difficulty": "高",
          "mentor": "Steve Macenski",
          "contact": "stevenmacenski@gmail.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "Port Grid Maps to ROS2 and Environmental Model",
          "description": "Grid Maps was created by ETH Zurich and later transferred to ANYbotics. It is a universal grid map library for mobile robotic mapping that can be used as the basis of environmental models and various forms of grid maps available in ROS1. This library is one of the top downloaded ROS packages. Your task will be to work with the community and the mentor to port grid_maps metapackage from ROS1 to ROS2 and help develop the next generation environment model in ROS2 to replace costmap_2d. This will involve porting code from ROS1 to ROS2, analyzing uses of the environmental model to define an abstract interface to allow replacement of costmap_2d with grid_map, and building up the basic grid-operations for costmaps. It is not expected to complete the full new model with sensor processing over the course of the summer. If completed early, you may be able to help design a gradient model to complement your implemented costmap model using grid_maps. This will allow robots to select a gradient or a costmap model on startup.",
          "difficulty": "高",
          "mentor": "Steve Macenski",
          "contact": "stevenmacenski@gmail.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "Advanced Navigation Testing Framework",
          "description": "The ROS2 Navigation Stack has had a focus on testing and reliability as a characteristic change from ROS1 to ROS2. We currently have a test coverage rate of 65% and do full system simulations in Continuous Integration (CI) to test the entire navigation system with a real robot completing real navigation tasks. Your task will be to increase the testing coverage rate to 70% (or +5% from your starting) and improve on the existing system tests to represent a more realistic environment. You will then work to make sure of that environment to actively block the robot from completing its task to simulate worst-case conditions.",
          "difficulty": "中",
          "mentor": "Steve Macenski",
          "contact": "stevenmacenski@gmail.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "Navigation Branding and Website",
          "description": "Navigation2 has made significant strides to be the best navigation system in the world. Over time, the original navigation stack in ROS has gained a reputation, fair or unfair, of being relatively limited in the types of tasks it can accomplish that are no longer true in ROS2 Navigation2. As such, we would like to initiate a re-branding effort to help differentiate it from its foundings. MoveIt has a high-quality landing page with consistent graphics, color schemes, logos, and a catchy name. Your task will be to create a logo, color scheme, and work with maintainers to develop a new name to use in creating a new website for Navigation2. The existing website is a Read The Docs design with just the technical tutorials and details. We would like the new Navigation2 website to be analog to the MoveIt website and allow for future expansions such as a blog and pages highlighting demos and robots using the framework.",
          "difficulty": "中",
          "mentor": "Steve Macenski",
          "contact": "stevenmacenski@gmail.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "2D/3D Localization Improvements",
          "description": "The Navigation2 stack uses AMCL as its primary localization engine. Over the last 10 years, essentially no updates to AMCL has been made. This is due to the code base for this implementation of an Adaptive Monte Carlo Localizer is written in embedded C, not well structured, and very sensitive to changes. A-MCL implementations have been a hallmark of localization for over a decade but this particular implementation should be deprecated. Your target involves designing and creating a new localization engine for the navigation2 stack. The requirements of this are: - Support 2D laser scanners - Support 3D laser scanners, where 2D case could potentially be a simplified case - Accurately track the localization of a robot in a given occupancy grid. The reason that specific method is left open-ended is to allow for creativity, novelty, or reimplementation of a what you feel is best. We have, however, analyzed other MCL variants as being good options. This may include reimplementing an A-MCL that is designed to be modified with modular components and support sampling from a 3D lidar. Another option is a NDT-MCL using NDT 2D/3D scan matching. Other options may be proposed and discussed with mentors during the application phase. The task involves 3D as well since there is no standard 3D localizer in ROS2 yet and more and more robust 3D SLAM libraries have emerged over the last 2 years. An optional but recommended feature of this work would be to also accept the inputs from multiple laser scanners. However it is not strictly required.",
          "difficulty": "高",
          "mentor": "Steve Macenski",
          "contact": "stevenmacenski@gmail.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "Navigation Dynamic Obstacle Integration",
          "description": "The Navigation Stack has long provided robust navigation in a wide range of environments. Controllers have been developed to operate effectively in the presence of dynamic obstacles without explicitly modeling the characteristics of dynamic obstacles. However, as the field has progressed and we see more and more robots using ROS deployed in human-filled spaces, more consideration must be taken with respect to dynamic obstacles such as people, carts, animals, and vehicles. Your task will be to create integrations with existing machine learning tools that create dynamic obstacle information (ComplexYolo, Yolo3D, etc) and tie them into the navigation stack for use. It is not in the scope for you to retrain or otherwise become an expert in 3D machine learning, but some basic knowledge will be helpful. This task will involve identifying a few techniques that produce position and velocity information about dynamic obstacles that can run on a mobile robot (using high-power Intel CPU, Nvidia Jetson SoC, external GPUs, etc) and get them running with ROS and Navigation. Next, you will help create a new costmap layer to use this information to mark the dynamic obstacle in the costmap to ensure a robot does not collide with a future trajectory of an obstacle. If time permits, you may also work to also integrate this dynamic information into a path planner and/or controller to help in direct motion consideration. This will likely be in collaboration with another community member.",
          "difficulty": "高",
          "mentor": "Steve Macenski",
          "contact": "stevenmacenski@gmail.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-29",
          "label": ""
        }
      ]
    },
    {
      "anchor": "rt-thread",
      "img": "RT-Thread.jpg",
      "title": "RT-Thread",
      "project_url": "https://www.rt-thread.org/news/174.html",
      "url": "https://www.rt-thread.org/",
      "description": "小而美的物联网操作系统。",
      "full_des": "RT-Thread  是一个集实时操作系统（RTOS）内核、中间件组件和开发者社区于一体的技术平台,由熊谱翔先生带领并集合开源社区力量开发而成,RT-Thread  也是一个组件完整丰富、高度可伸缩、简易开发、超低功耗、高安全性的物联网操作系统。RT-Thread 具备一个 IoT OS  平台所需的所有关键组件,例如GUI、网络协议栈、安全传输、低功耗组件等等。经过13年的累积发展,RT-Thread  已经拥有一个国内最大的嵌入式开源社区,同时被广泛应用于能源、车载、医疗、消费电子等多个行业,累积装机量超过4亿台,成为国人自主开发、国内最成熟稳定和装机量最大的开源 RTOS。",
      "tech_tag": [
        "RTOS",
        "IoT",
        "embedded-systems",
        "Cortex-M",
        "Cortex-A",
        "RISC-V",
        "ARM"
      ],
      "domain_tag": [
        "物联网操作系统",
        "软件包",
        "GUI",
        "IDE"
      ],
      "mail_list": "https://github.com/RT-Thread/rt-thread/issues",
      "email": "support@rt-thread.com",
      "project_list": [
        {
          "name": "在树莓派4上用 RT-Thread 实现在线语音识别",
          "difficulty": "中",
          "mentor": "杨武",
          "contact": "yangwu@rt-thread.com",
          "co-mentor": "赵辅金,zhaofujin@rt-thread.com",
          "student_count": 0,
          "description": "树莓派4提供了1.5GHz的4核A72 ARM处理器,同时还包括WiFi/BT,千兆以太网,双HDMI输出,CSI接口camera等。 树莓派4提供了一个理想的嵌入式AI平台,可用于各种AI应用场景。",
          "update_time": "2020-05-13",
          "label": "2023109"
        },
        {
          "name": "在树莓派4上用 RT-Thread 实现目标检测",
          "difficulty": "高",
          "mentor": "杨武",
          "contact": "yangwu@rt-thread.com",
          "co-mentor": "赵辅金,zhaofujin@rt-thread.com",
          "student_count": 0,
          "description": "树莓派4提供了1.5GHz的4核A72 ARM处理器,同时还包括WiFi/BT,千兆以太网,双HDMI输出,CSI接口camera等。 树莓派4提供了一个理想的嵌入式AI平台,可用于各种AI应用场景。",
          "update_time": "2020-05-13",
          "label": "2023110"
        },
        {
          "name": "在树莓派4上用RT-Thread 实现TensorflowLite Micro移植",
          "difficulty": "中",
          "mentor": "陈晨毅",
          "contact": "lebhoryi@rt-thread.com",
          "co-mentor": "杨武,yangwu@rt-thread.com",
          "student_count": 0,
          "description": "树莓派4提供了1.5GHz的4核A72 ARM处理器,同时还包括WiFi/BT,千兆以太网,双HDMI输出,CSI接口camera等。 树莓派4提供了一个理想的嵌入式AI平台,可用于各种AI应用场景。TensorflowLite Micro 是面象微控制器级别的设备裁剪定制版本的 Tensorflow Lite,具有良好的跨平台设计和较为完善的单元测试。本项目目标是在树莓派4上将TensorflowLite Micro移植到RT-Thread系统中,并顺利运行自的演示应用。目前树莓派4上的RT-Thread状态为,可以运行ARM64位的RT-Thread,驱动相对较少,只包含中断管理、串口、HDMI、SDIO等。在本项目中,需要开启 RT-Thread 的 C++ 支持,完成 TensorflowLite Micro 的编译链接,并在树莓派4上运行原项目自带的演示应用。",
          "update_time": "2020-05-13",
          "label": "2023111"
        },
        {
          "name": "面向RISC-V的RT-Thread系统",
          "difficulty": "高",
          "mentor": "邵进春",
          "contact": "shaojinchun@rt-thread.com",
          "co-mentor": "熊谱翔,bernard.xiong@rt-thread.com",
          "student_count": 0,
          "description": "QEMU中已经包含的基本的RISC-V模拟,例如sifive_u、riscv32/64_virt的模拟。RT-Thread对于RISC-V的移植主要局限于machine mode的方式,本项目目标是实现RISC-V的user-mode支持,及对应的基本外设功能,它们包括：支持MMU操作,页管理器；用户态的系统调用；任务切换时,对用户态上下文支持；基本的系统外设支持,例如文件系统,网络,LCD等",
          "update_time": "2020-05-13",
          "label": "2023112"
        },
        {
          "name": "龙芯2K上的RT-Thread系统",
          "difficulty": "高",
          "mentor": "赵辅金",
          "contact": "zhaofujin@rt-thread.com",
          "co-mentor": "熊谱翔,bernard.xiong@rt-thread.com",
          "student_count": 0,
          "description": "龙芯2K1000处理器是面向网络安全领域及移动智能终端领域的双核处理器芯片。龙芯2K1000处理器集成两个GS264处理器核,芯片外围接口包括两路PCIE2.0、一路SATA2.0、4路USB2.0、两路DVO、64位DDR2/3及其它多种接口,可以满足中低端网络安全应用领域需求,并为其扩展应用提供相应接口。当前RT-Thread系统只支持龙芯2K1000的基本外设（中断处理、串口、定时器等）,基本的MIPS64支持。本项目目标是实现龙芯2K1000下更多的外设支持：SATA/SSD驱动,并对接FAT文件系统；千兆网卡驱动,并对接网络协议栈；",
          "update_time": "2020-05-13",
          "label": "2023113"
        },
        {
          "name": "龙芯2K上的Linux/RT-Thread双系统",
          "difficulty": "高",
          "mentor": "赵辅金",
          "contact": "zhaofujin@rt-thread.com",
          "co-mentor": "熊谱翔,bernard.xiong@rt-thread.com",
          "student_count": 0,
          "description": "龙芯2K1000处理器是面向网络安全领域及移动智能终端领域的双核处理器芯片。龙芯2K1000处理器集成两个GS264处理器核,芯片外围接口包括两路PCIE2.0、一路SATA2.0、4路USB2.0、两路DVO、64位DDR2/3及其它多种接口,可以满足中低端网络安全应用领域需求,并为其扩展应用提供相应接口。龙芯2K1000包含了两个核,当前RT-Thread系统只支持龙芯2K1000的基本外设（中断处理、串口、定时器等）,基本的MIPS64支持。本项目的目标是把两个核都独立使用起来,包括一个核心执行Linux系统,一个核心执行RT-Thread。双方通过OpenAMP的方式进行通信。",
          "update_time": "2020-05-13",
          "label": "2023114"
        },
        {
          "name": "在乐鑫 ESP32 上用 RT-Thread 实现语音唤醒和控制功能",
          "difficulty": "高",
          "mentor": "陈勇",
          "contact": "chenyong@rt-thread.com",
          "student_count": 0,
          "description": "乐鑫 ESP32 系列芯片提供了一个或两个可以单独控制的 CPU 内核,时钟频率可调,最高可达240 MHz。同时还包括 WIFI/BLE 双模,支持多种低功耗运行模式,具备低噪声放大器,I2S,高速 SPI,以太网等外设接口。是一款理想的嵌入式物联网芯片,可用于各类物联网应用场景。",
          "update_time": "2020-05-13",
          "label": "2023115"
        },
        {
          "name": "基于RT-Thread 实现双目视觉拍摄系统",
          "difficulty": "高",
          "mentor": "李想",
          "contact": "lixiang@rt-thread.com",
          "co-mentor": "郭占鑫 guozhanxin@rt-thread.com",
          "student_count": 0,
          "description": "RT-Thread 操作系统实现了 USB 基础协议栈,为 USB 摄像头的数据传输提供了基础的支持,双目拍摄系统拍摄同一场景的左、右两幅视点图像,并结合算法将左右图像进行合并。RT-Thread 和双目拍摄二者结合之后可以应用于各种视觉领域。",
          "update_time": "2020-05-13",
          "label": "2023116"
        }
      ]
    },
    {
      "anchor": "simple-xx",
      "img": "simpleX.jpg",
      "title": "Simple-XX",
      "project_url": "https://github.com/Simple-XX/summer2020",
      "url": "https://github.com/Simple-XX",
      "description": "提供易于学习的代码示例与实现思路。",
      "full_des": "Simple-XX 是⼀次写代码写崩溃后的产物,我尝试从头实现⼀个简单的内核,但是互联⽹上的内容太过零散,对于初学者来说很不友好,严重拖慢了学习效率。SimpleKernel 是 Simple-XX 的第⼀次尝试,⽬前收到了 700+ star 与 80+ fork,后续还会有编译器、数据库、搜索引擎等内容。",
      "tech_tag": [
        "Linux",
        "GCC",
        "Compiler",
        "软件⼯程"
      ],
      "domain_tag": [
        "操作系统",
        "编译器",
        "数据库"
      ],
      "email": "zone.niuzh@hotmail.com",
      "project_list": [
        {
          "name": "SimpleKernel 修复存在的 bug",
          "difficulty": "中",
          "mentor": "MRNIU",
          "contact": "Zone.Niuzh@hotmail.com",
          "student_count": 0,
          "description": "由于项目早期的遗留问题,有很多 bug 一直没有解决,在代码某处一定还藏有尚未发现的地雷,你的任务是找到它,解决它,并留下足够的测试代码。",
          "update_time": "2020-05-14",
          "label": "2022104"
        },
        {
          "name": "SimpleKernel 优化现有内存管理代码的实现",
          "difficulty": "中",
          "mentor": "MRNIU",
          "contact": "Zone.Niuzh@hotmail.com",
          "student_count": 0,
          "description": "现有的内存管理代码可谓千疮百孔,难以说是一个能够作为示例的代码,我们需要你在现有方案的基础上对代码进行重写,使用经典算法如 first-fit,buddy 重新实现内存管理系统。",
          "update_time": "2020-05-14",
          "label": "2022105"
        },
        {
          "name": "SimpleKernel 完成多任务系统",
          "difficulty": "高",
          "mentor": "MRNIU",
          "contact": "Zone.Niuzh@hotmail.com",
          "student_count": 0,
          "description": "多任务是内核不可或缺的部分,但现在我们的代码还很简陋。现有代码是对 linux 内核实现的魔改,还不能够正常使用。",
          "update_time": "2020-05-14",
          "label": "2022106"
        },
        {
          "name": "SimpleKernel 编写实现文档",
          "difficulty": "中",
          "mentor": "MRNIU",
          "contact": "Zone.Niuzh@hotmail.com",
          "student_count": 0,
          "description": "目前的实现文档分布在开发日志、代码注释中,有的部分还有缺少,我们需要一份文档告诉使用者我们的代码是怎么来的,背后的原理是什么,为什么这样写。",
          "update_time": "2020-05-14",
          "label": "2022107"
        },
        {
          "name": "SimpleCompiler 完善编译器架构",
          "difficulty": "中",
          "mentor": "MRNIU",
          "contact": "Zone.Niuzh@hotmail.com",
          "student_count": 0,
          "description": "目前仅实现了基本的词法解析,但对于整个编译器的整体结构尚未有过考虑,我们需要一位对编译器熟悉的同学来把握大方向,站在初学者的角度,我们的代码怎么写能让别人容易理解,便于迁移呢？",
          "update_time": "2020-05-14",
          "label": "2022108"
        }
      ]
    },
    {
      "anchor": "soda-foundation",
      "img": "soda.jpg",
      "title": "SODA Foundation",
      "project_url": "https://github.com/sodafoundation/ecosystem/blob/master/events/Open_Source_Promotion_Plan_Summer_2020.md",
      "url": "https://sodafoundation.io",
      "description": "开放智能的数据管理平台。",
      "full_des": "SODA 是 Linux 基金会在数据与存储领域的第一个子基金会，由华为联合业界领先的数据与存储供应商，以及全球各行业的优秀企业共同建立，旨在帮助用户更好的应当对数据基础设施云化转型过程中的各种挑战。SODA从成立至今，已吸引华为，中国联通，FUJITSU，建信金科，NTT，TOYOTA，SONY，YAHOO!JAPAN，CESI等21家全球知名公司加入。SODA社区主要包含北向插件项目（nbp），存储控制器项目（opensds），多云项目（multi-cloud），编排项目（orchestration），用户界面项目（opensds-dashboard），安装部署项目（opensds-intaller）等9个项目。其中，nbp用于支持SODA存储服务与云及应用框架进行北向对接；opensds用于统一管理本地数据中心和云端的块、文件、对象存储；multi-cloud是基于策略的多云数据控制器，支持跨云数据流动以及数据生命周期管理。",
      "tech_tag": [
        "云原生",
        "容器",
        "微服务"
      ],
      "domain_tag": [
        "数据生命周期管理",
        "多云数据流动"
      ],
      "mail_list": "https://lists.sodafoundation.io/g/opensds-tech-discuss",
      "email": "https://lists.sodafoundation.io/g/opensds-tech-discuss",
      "project_list": [
        {
          "name": "开发nbp项目中的在线扩容功能",
          "description": "nbp能通过api，controller和dock进行卷的创建，但随着业务的深入，数据量会逐渐增大，数据盘的容量会变得不能满足需求，需要进行扩容。请在nbp中实现卷的在线扩容功能。",
          "difficulty": "中",
          "mentor": "刘羽",
          "contact": "ThisIsClark@163.com",
          "student_count": 0,
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "实现driver作为plugin加载",
          "description": "当前所有driver都会被编译到运行包中，程序启动时不管某款driver是否需要都会被加载进来，但实际上对于用户来说，并不是所有的driver都是需要的，加载额外的driver会给程序带来不必要的负担。 Go 1.8新增了plugin package，请使用这个机制，使程序启动时根据配置只以插件形式加载对应的driver。",
          "difficulty": "高",
          "mentor": "刘羽",
          "contact": "ThisIsClark@163.com",
          "student_count": 0,
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "开发nbp项目中的卷克隆功能",
          "description": "为了更好的管理和保护数据，许多存储系统提供创建卷的克隆功能，Kubernetes也于v1.15引入了对卷克隆的支持。 目前nbp，api，controller和dock均未支持卷克隆，请进行相应开发使其支持卷克隆功能。",
          "difficulty": "中",
          "mentor": "刘羽",
          "contact": "ThisIsClark@163.com",
          "student_count": 0,
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "引入Sanity作为nbp测试框架",
          "description": "nbp通过kubernetes和CSI插件进行存储设备的管理，请使用Sanity进行CSI插件基本功能的测试。",
          "difficulty": "低",
          "mentor": "刘羽",
          "contact": "ThisIsClark@163.com",
          "student_count": 0,
          "update_time": "2020-05-29",
          "label": ""
        }
      ]
    },
    {
      "anchor": "tinylab",
      "img": "tinylab.jpg",
      "title": "泰晓科技",
      "project_url": "http://tinylab.org/summer2020",
      "url": "http://tinylab.org",
      "description": "聚焦 Linux,追本溯源,见微知著！",
      "full_des": "泰晓科技是一个知名公益性 Linux 技术社区,创立于 2010 年,长期聚焦 Linux 系统技术交流和产品实践,追本溯源,见微知著,致力于推动业界创造更极致的 Linux 产品。",
      "tech_tag": [
        "Linux",
        "Linux Lab",
        "技术交流",
        "产品实践"
      ],
      "domain_tag": [
        "Linux 内核",
        "Linux 实验环境",
        "实时系统",
        "系统优化"
      ],
      "mail_list": "http://tinylab.org/about",
      "email": "contact@tinylab.org",
      "project_list": [
        {
          "name": "Perf Lab 性能实验室",
          "difficulty": "高",
          "mentor": "@luoxiaogang",
          "contact": "rxd@tinylab.org",
          "co-mentor": "@wuzhangjin, falcon@tinylab.org",
          "student_count": 0,
          "description": "性能优化是提升产品用户体验的关键,也是所有产品走向高端的必由之路。Linux 系统上的性能优化工具日新月异,从早年的 Oprofile,Ftrace,Systemtap 到如今的 Perf, eBPF,日渐完善,不断强大。但是对于初学者,这些新工具的使用门槛很高,本项需求的目标是基于 Cloud Lab 构建一个开箱即可上手的系统性能优化工具箱,囊括各种常见的系统性能优化工具,并提供配套的实际开发案例。",
          "update_time": "2020-05-13",
          "label": "2024117"
        },
        {
          "name": "Linux Lab 镜像升级",
          "difficulty": "高",
          "mentor": "@robin329",
          "contact": "robin@tinylab.org",
          "co-mentor": "@wuzhangjin, falcon@tinylab.org",
          "student_count": 0,
          "description": "Linux Lab 是一个 Linux 内核实验环境,当前已经支持国内外的 7 大主流处理器架构和 16 款开发版。当前环境基于 Ubuntu 14.04,难以适应各类软件新版本的开发需要,本项需求旨在升级当前环境到最新的 Ubuntu 20.04 或者其他更为合适的同时期 Linux 发行版。",
          "update_time": "2020-05-13",
          "label": "2024118"
        },
        {
          "name": "Linux Lab 模块化支持",
          "difficulty": "高",
          "mentor": "@pingwuu",
          "contact": "ping.wu@tinylab.org",
          "co-mentor": "@wuzhangjin, falcon@tinylab.org",
          "student_count": 0,
          "description": "Linux Lab 是一个 Linux 内核实验环境,当前已支持 Linux、Buildroot、Uboot 和 Qemu 四大核心软件,但是当前软件支持的耦合度非常高。本项需求旨在解耦,把各个软件的支持拆解到独立的软件支持文件中,增加可扩展性,从而方便进一步导入其他软件实验功能。",
          "update_time": "2020-05-13",
          "label": "2024119"
        },
        {
          "name": "Markdown Lab 功能增强",
          "difficulty": "中",
          "mentor": "@wuzhangjin",
          "contact": "falcon@tinylab.org",
          "student_count": 0,
          "description": "Markdown Lab 是一个 Markdown 编辑环境,当前内置简历、文档、幻灯和书籍的 Markdown 模板,可导出为 html 和 pdf,本项需求旨在进一步完善中文支持、美化 PDF 输出格式、增加加密和水印功能等。",
          "update_time": "2020-05-13",
          "label": "2024120"
        }
      ]
    },
    {
      "anchor": "tdengine",
      "img": "td.jpg",
      "title": "TDEngine",
      "project_url": "https://www.taosdata.com/blog/2020/05/20/1521.html",
      "url": "https://www.taosdata.com/cn/",
      "description": "开源物联网、车联网等的大数据平台。",
      "full_des": "北京涛思数据科技有限公司(TAOS Data) 瞄准日益增长的物联网数据市场，专注时序空间大数据的存储、查询、分析和计算。不依赖任何开源或第三方软件，开发了拥有自主知识产权、自主可控的高性能、可伸缩、高可靠、零管理的物联网大数据平台TDengine，可广泛运用于物联网、车联网、工业互联网、IT运维等领域。公司已经申请多项技术发明专利，且全部提交PCT专利申请。涛思数据采用AGPL许可证，已经将TDengine的内核(存储和计算引擎)以及社区版100%开源。",
      "tech_tag": [
        "C",
        "Java",
        "Go",
        "PHP",
        "JavaScript",
        "Python",
        "SQL"
      ],
      "domain_tag": [
        "物联网",
        "车联网",
        "工业互联网",
        "IT运维"
      ],
      "mail_list": "tdengine@taosdata.com",
      "email": "tdengine@taosdata.com",
      "project_list": [
        {
          "name": "官网优化",
          "difficulty": "中",
          "mentor": "李夏昕",
          "contact": "xxli@taosdata.com",
          "co-mentor": "",
          "student_count": 0,
          "description": "根据项目要求，为官网增加新模块，并对现有内容进行优化。",
          "update_time": "2020-05-20",
          "label": "2026178"
        },
        {
          "name": "时序数据库的自动化测试",
          "difficulty": "中",
          "mentor": "桑树多",
          "contact": "sdsang@taosdata.com",
          "co-mentor": "",
          "student_count": 0,
          "description": "使用 Python 针对时序数据库 TDengine 开发自动化测试方法。",
          "update_time": "2020-05-20",
          "label": "2026179"
        },
        {
          "name": "TDEngine 在各种场景下的 BanchMark 程序",
          "difficulty": "高",
          "mentor": "刘涛",
          "contact": "tliu@taosdata.com",
          "co-mentor": "",
          "student_count": 0,
          "description": "使用开源的时序数据库对比测试程序针对框架开发写入和查询的适配，并进行多个时序数据库的对比测试",
          "update_time": "2020-05-21",
          "label": "2026180"
        },
        {
          "name": "JDBC 内核支持 RESTful 接口",
          "difficulty": "高",
          "mentor": "常帅强",
          "contact": "sqchang@taosdata.com",
          "co-mentor": "",
          "student_count": 0,
          "description": "通过熟悉 RESTful 接口的调用方法，修改 JDBC connector 支持使用 RESTful 完成 JDBC 对应的 API 实现",
          "update_time": "2020-05-22",
          "label": "2026195"
        },
        {
          "name": "通过 RESTful 接口实现 PHP Connector",
          "difficulty": "高",
          "mentor": "常帅强",
          "contact": "sqchang@taosdata.com",
          "co-mentor": "",
          "student_count": 0,
          "description": "通过熟悉 RESTful 接口的调用方法，编写 PHP Connector",
          "update_time": "2020-05-22",
          "label": "2026196"
        }
      ]
    },
    {
      "anchor": "tuna",
      "img": "tuna.jpg",
      "title": "清华大学 TUNA 协会",
      "project_url": "https://tuna.moe/blog/2020/ospp-summer-2020/",
      "url": "https://tuna.moe/",
      "description": "目前中国影响力最大的高校开源社区。",
      "full_des": "清华大学 TUNA 协会全名清华大学学生网络与开源软件协会（Tsinghua University TUNA Association）,是由清华大学网络技术和开源软件爱好者、技术宅组成的团体。社团成立于2011年,目前校内外成员超过500人,校内注册人数接近300人,校内核心（活跃）成员超过50人。TUNA 协会维护的清华大学开源软件镜像站,包括数百个开源软件。是中国高校目前规模最大的开源镜像站。TUNA 协会为这些业务开发的许多开源软件,包括镜像管理同步套件 tunasync、直播弹幕套件 danmaQ 等,都被国内外同行采用并广受好评。TUNA 协会也与其他开源社区进行广泛联络,与多个高校开源学生组织、国内开源社区、企业等开展合作,共同举办软硬件件自由日、Release Party 等公众活动,推广开源理念,普及基础知识,为中国开源事业贡献力量,起到了较好的宣传引导作用。",
      "tech_tag": [
        "Linux",
        "Mirrors",
        "Qt",
        "Python",
        "Node.js",
        "Go"
      ],
      "domain_tag": [
        "服务器运维",
        "网络编程",
        "系统工具"
      ],
      "mail_list": "tuna-general@googlegroups.com",
      "email": "staff@tuna.tsinghua.edu.cn",
      "project_list": [
        {
          "name": "基于对象存储的 rsync 实现",
          "difficulty": "高",
          "mentor": "王邈",
          "contact": "miao.wang@tuna.tsinghua.edu.cn",
          "co-mentor": "朱晟菁 zhsj@debian.org",
          "student_count": 0,
          "description": "当前开源软件镜像站多采用 rsync 协议从上游差异更新,而 rsync 工具只支持 POSIX 文件系统。然而 POSIX 文件系统的大部分功能（如权限管理、目录遍历）对于镜像站是无意义的,反而引入了很多额外开销,降低了性能。目前 CDN 等高性能文件服务都采用对象存储系统（如 AWS S3）作为后端,而不是 POSIX 文件系统,因其访问延迟低,性能几乎不因文件数量增加而下降。若能将 rsync 协议与对象存储结合,实现一个在对象存储上工作的类 rsync 同步工具,那么镜像站就可从 POSIX 文件系统迁移到对象存储系统,从而提供更高质量的服务。项目不要求实现 rsync 的全部功能,只需要将远端文件列表与对象存储中的文件列表对比,下载缺失文件,删除多余文件,并更新修改日期不同的文件即可。",
          "update_time": "2020-05-13",
          "label": "2027121"
        },
        {
          "name": "TUNA Mirrors服务器的ZFS性能问题调研及调优",
          "difficulty": "高",
          "mentor": "Aron Xu",
          "contact": "aron@debian.org",
          "co-mentor": "王邈 miao.wang@tuna.tsinghua.edu.cn",
          "student_count": 0,
          "description": "TUNA Mirrors 是国内外知名的综合型开源与自由软件镜像，其收录软件数量庞大，长久以来持续服务于国内外的学术界及工业界对软件仓库的需求。由于用户需求日益上升，服务器存储系统中的ZFS一直在遭受严峻的挑战，并屡屡触碰性能瓶颈以及各类疑难的性能问题。本项目旨在考察 TUNA Mirrors 的 ZFS 软硬件配置，调研其中存在的各种疑难性能问题及瓶颈，并尽可能给出相应的性能调优建议。性能调优对于提升 TUNA Mirrors 及其姊妹镜像站用户体验而言意义重大。",
          "update_time": "2020-05-18",
          "label": "2027122"
        },
        {
          "name": "开源弹幕系统改进",
          "difficulty": "高",
          "mentor": "陈晟祺 (@Harry-Chen on GitHub)",
          "contact": "shengqi.chen@tuna.tsinghua.edu.cn",
          "co-mentor": "张宇翔,yuxiang.zhang@tuna.tsinghua.edu.cn, @z4yx on GitHub",
          "student_count": 0,
          "description": "弹幕是常用的听众与讲者的互动手段。TUNA 开发了自己的 C/S 弹幕系统 danmaQ（见下面的仓库）,使用于多种场合,也被多个发行版收录。其服务端使用 Python 编写,客户端使用 Qt 编写,基本实现了跨平台。然而,目前该项目缺乏维护,代码比较陈旧,一些功能缺乏（如 Web 弹幕墙）、不完善（如审核）或已经损坏（如微信互联）。此外,清华大学计算机系科协亦有一套自己实现的弹幕系统 Comment9（见下）,使用 Node.js 编写。它与 danmaQ 相比,具有一些高级功能（如多个活动、弹幕墙、多路审核、支持硬件弹幕机）,但缺乏弹幕属性配置等。我们希望,整合当前两个系统的功能,改进得到一套全功能的开源弹幕系统,覆盖用户需求。",
          "update_time": "2020-05-13",
          "label": "2027123"
        },
        {
          "name": "通用镜像站前端框架",
          "difficulty": "高",
          "mentor": "王邈",
          "contact": "miao.wang@tuna.tsinghua.edu.cn",
          "co-mentor": "陈晟祺,shengqi.chen@tuna.tsinghua.edu.cn, @Harry-Chen on GitHub",
          "student_count": 0,
          "description": "开源镜像站在呈现文件之外,也需要向用户呈现服务器状态、同步状态、使用帮助等更多的信息。目前,TUNA 镜像站使用了一套 Jekyll 静态生成页面 + AJAX 动态获取信息 + 服务端 njs 渲染结合的方法来向多种平台（现代浏览器、老旧浏览器、文本终端浏览器）提供支持。然而这种方法可维护性略差,也缺少通用性。同时,TUNA 镜像站的前端也硬编码了大量信息,对其他组织的使用造成了一定的不便。我们希望,能够在当前的基础上,对 TUNA 镜像站的前端进行详细设计与重构,形成一套通用的适用于各大开源镜像站的前端框架。",
          "update_time": "2020-05-13",
          "label": "2027124"
        },
        {
          "name": "开源硬件密钥设备Web 控制台",
          "difficulty": "高",
          "mentor": "党凡",
          "contact": "dangfan@tsinghua.edu.cn",
          "co-mentor": "Zamir Sum，zsun@fedoraproject.org",
          "student_count": 0,
          "description": "以 YubiKey 为代表的密钥存储设备深受 geek 们的喜爱，而相关的密码技术也在开源社区中得到了广泛应用（如 GnuPG）。由于 YubiKey 不开源，近年来，开源社区中陆续诞生了一些开源的硬件密钥设备，例如 SoloKey、CanoKey。作为一个新兴的开源硬件密钥设备，CanoKey 提供了与 YubiKey 一致的FIDO2/U2F、PIV、OpenPGP 和 OATH（HOTP、TOTP）的支持。为了向大众普及和推广密码学工具，CanoKey 还提供了 WebUSB 支持，可以在浏览器中直接使用密码学工具。现在，这些工具的开发还处于起步阶段，需要社区支持，让密码学工具变得更加易用。",
          "update_time": "2020-05-18",
          "label": "2027294"
        },
        {
          "name": "跨平台 TOTP、HOTP 移动客户端",
          "difficulty": "高",
          "mentor": "党凡",
          "contact": "dangfan@tsinghua.edu.cn",
          "co-mentor": "Zamir Sun，zsun@fedoraproject.org",
          "student_count": 0,
          "description": "随着 iOS 13 进一步开放 NFC 功能，Android 和 iOS 系统都具备了 NFC Reader 的能力。TOTP 和 HOTP 是目前不少网站和应用的 2FA 选项之一，无论是 YubiKey、CanoKey 这样的硬件产品，还是装有 OATH 应用的智能卡，都可以通过 NFC 在手机上提供便捷安全的 TOTP 和 HOTP 功能。本项目的目标是利用 NFC 功能，实现一个开源的 TOTP、HOTP 客户端，支持常见的智能卡或类智能卡设备。",
          "update_time": "2020-05-27",
          "label": "2027295"
        },
        {
          "name": "跨平台 NFC 信息读取移动应用开发",
          "difficulty": "高",
          "mentor": "党凡",
          "contact": "dangfan@tsinghua.edu.cn",
          "co-mentor": "陈晟祺,shengqi.chen@tuna.tsinghua.edu.cn, @Harry-Chen on GitHub",
          "student_count": 0,
          "description": "目前,各类移动设备,包括 Android 与 iOS,都增加了对 NFC 通信的支持；但各类应用对于 NFC 的支持都很不完善,缺少一个统一的跨平台的支持库。同时,关于 NFC 各类标准的文档也并不齐全,通常需要到处查找,为开发者造成了很大的障碍。前期,我们在 Android 平台上是实现了一个 NFC 卡片的读取应用 NFSee；目前,需要将其使用 Flutter 重写以实现跨平台。同时,也将搭建一个公开的 Wiki 网站,对 NFC 相关的协议、标准进行整理和阐述,以纠正常见误区,帮助其他开发者更好地在移动端进行 NFC 相关的开发。",
          "update_time": "2020-05-13",
          "label": "2027126"
        },
        {
          "name": "SCIM Qt5 移植",
          "difficulty": "高",
          "mentor": "续本达",
          "contact": "heroxbd@gentoo.org",
          "co-mentor": "",
          "student_count": 0,
          "description": "SCIM 历史悠久的输入法框架，早期为 GNU/Linux 系统的中文本土化立下了汗马功劳，然而近年来 SCIM 的开发团队已经不再活跃，开发停滞，项目处于维护状态。当前 SCIM 依旧可以在各大发行版上顺畅使用，唯一缺失的功能是对 Qt5 的支持。本项目计划把 SCIM 移植到 Qt5。",
          "update_time": "2020-05-18",
          "label": "2027127"
        },
        {
          "name": "将 xgboost 与 prophet 等数据科学软件库集成到 Debian GNU/Linux",
          "difficulty": "高",
          "mentor": "Aron Xu",
          "contact": "aron@debian.org",
          "co-mentor": "",
          "student_count": 0,
          "description": "xgboost （梯度提升），prophet （时间序列预测）以及 Stan （高性能统计建模），pytorch （深度学习）等是重要的数据科学软件。Debian 作为用户基数庞大的 Linux 发行版之一，用户群中不乏数据科学用户群体，而上述软件尚未集成到该系统中，或者缺乏一部分计算性能相关的依赖库。为帮助用户获得更佳使用体验，方便安装及部署，该项目旨在为 Debian 官方仓库引入这些软件及其对应的依赖库，并将仓库中已有的依赖更新到理想状态。",
          "update_time": "2020-05-18",
          "label": "2027129"
        },
        {
          "name": "Gentoo R_Overlay 升级",
          "difficulty": "高",
          "mentor": "续本达",
          "contact": "heroxbd@gentoo.org",
          "co-mentor": "",
          "student_count": 0,
          "description": "Gentoo R Overlay是一个读取 CRAN 和 BIOC 仓库，并自动生成 Gentoo ebuild 组成 portage overlay 的项目。从2013年至今，一直为 Gentoo 的统计学、生物学和物理学领域的科学家提供服务。本项目将针对 Gentoo R Overlay 的现状和用户需求，对其进行升级。",
          "update_time": "2020-05-18",
          "label": "2027130"
        },
        {
          "name": "Gentoo PyPI ebuild 生成器",
          "difficulty": "高",
          "mentor": "续本达",
          "contact": "heroxbd@gentoo.org",
          "co-mentor": "",
          "student_count": 0,
          "description": "在 Gentoo 上使用 PyPI 包一种做法是先把 PyPI 的软件打包成 Gentoo 的 ebuild，其缺点是更新需要由人工完成，效率较低。另一种做法是使用 PyPI 的 pip 来绕过 Gentoo 的包管理系统 portage 直接安装，其缺点是容易与 portage 冲突，导致 Python 子系统的混乱。本项目计划采两家之长，通过一个 PyPI ebuild 生成器自动生成一个 PyPI 的 portage overlay，为 Gentoo 用户提供最新 Python 软件仓库。项目可以借鉴现已无人维护的 gs-pypi 代码。",
          "update_time": "2020-05-18",
          "label": "2027131"
        },
        {
          "name": "Gentoo Android App",
          "difficulty": "高",
          "mentor": "许朋程",
          "contact": "i@jsteward.moe",
          "co-mentor": "",
          "student_count": 0,
          "description": "Gentoo on Android 可以在 Android 上运行 Gentoo Prefix，实现无性能损耗的完整的 GNU 环境。然而，当前的 Gentoo on Android 一方面需要 root 权限，另一方面需要手动安装，亟需一个不需 root 的 Android App 完成安装，更方便地把手机转换成开发和生产工具。在 Android 的系统中，每个 App 有一个专有的用户 uid 和一个保留的空间存放数据，适合嵌入一个这个 uid 下的 Gentoo Prefix 实例，解决当前 Gentoo on Android 的两个问题。",
          "update_time": "2020-05-18",
          "label": "2027132"
        },
        {
          "name": "Gentoo ROCm HIP GPGPU 方案",
          "difficulty": "高",
          "mentor": "续本达",
          "contact": "heroxbd@gentoo.org",
          "co-mentor": "",
          "student_count": 0,
          "description": "ROCm 是 AMD 显卡的自由开源的科学计算系统，HIP 是 ROCm 的 CUDA 兼容层，提供类似于 CUDA 的 API。然而 ROCm 和 HIP 的文档校为缺乏，除了官方指定的个别平台之外，安装和部署较为困难。Gentoo Linux 是一个元发行版，具有高度的可定制性，是各发行版中进行科学计算相关开发的良好选择。当前，Gentoo 中的 ROCm 相关的软件包已经成熟，但是 HIP 及与之相关的 rocBLAS 等高级库尚未完成，依旧有许多难点。本项目将完成 Gentoo 的 HIP 软件包，并为 PyTorch, Tensorflow 提供 AMD 设备上的进行方案。完成发行版上开源 GPGPU 框架的布局。",
          "update_time": "2020-05-18",
          "label": "2027133"
        },
        {
          "name": "Emacs Jupyter client",
          "difficulty": "高",
          "mentor": "续本达",
          "contact": "heroxbd@gentoo.org",
          "co-mentor": "",
          "student_count": 0,
          "description": "Emacs 是久负盛名的编辑器，以其高度的可编程扩展性闻名于世。Jupyter 是基于 HTTP 的远程异步运行系统，在科学计算有广泛的应用。EIN 项目为 Emacs 提供 Jupyter 客户端，可以弥补 Jupyter 网页上输入功能薄弱的劣势，把 Emacs 的强大编辑功能与 Jupyter 异步执行功能有机结合，成为 literate programming 的最强方案之一。但是，EIN使用的 HTTP 框架由基于 callback 的异步编程框架，维护较为困难，本项目将使用 coroutine 的函数式编程模型重写 EIN，完成现代的 Emacs Jupyter 客户端。",
          "update_time": "2020-05-18",
          "label": "2027134"
        }
      ]
    },
    {
      "anchor": "uoj",
      "img": "oj.jpg",
      "title": "Universal OJ",
      "project_url": "https://git.io/uojsummer2020",
      "url": "https://github.com/UniversalOJ",
      "description": "一款通用的在线评测系统。",
      "full_des": "Universal OJ 开源社区为以吕凯风开发的 UOJ 为基础的二次开发建立的社群；Universal OJ 开源社区专注于对算法题目的评测,为学习算法的各方提供便利。",
      "tech_tag": [
        "PHP",
        "MySQL",
        "C",
        "Docker"
      ],
      "domain_tag": [
        "Online Judge 系统",
        "算法"
      ],
      "mail_list": "https://github.com/UniversalOJ/UOJ-System/issues",
      "email": "QQ 群 560621197",
      "project_list": [
        {
          "name": "比赛多赛制支持",
          "difficulty": "中",
          "mentor": "ceba",
          "contact": "ceba_robot@outlook.com",
          "student_count": 0,
          "description": "Universal OJ 目前赛制支持的并不全面,目前仅完全的支持了 OI 赛制。本项目目标是为 Universal OJ 的比赛功能支持多赛制。",
          "update_time": "2020-05-16",
          "label": "2028135"
        },
        {
          "name": "数据合规相关功能",
          "difficulty": "低",
          "mentor": "TechCiel",
          "contact": "ciel+uoj@ciel.dev",
          "student_count": 0,
          "description": "Universal OJ 目前没有删除帐号等功能,落后于快速发展的互联网隐私保护行业标准,也有一些合规风险（如 GDPR 、 CCPA 和中国的有关法律法规）。本项目的目标是为 Universal OJ 添加删除帐号、导出信息等数据合规相关功能。",
          "update_time": "2020-05-16",
          "label": "2028136"
        },
        {
          "name": "小工具集编写",
          "difficulty": "低",
          "mentor": "billchenchina",
          "contact": "billchenchina2001@gmail.com",
          "student_count": 0,
          "description": "在用户进行算法学习时,会需要一些小工具,如：图的可视化、代码粘贴器。本项目目标是为 Universal OJ 添加小工具集。",
          "update_time": "2020-05-16",
          "label": "2028137"
        }
      ]
    },
    {
      "anchor": "ustclug",
      "img": "ustclug.jpg",
      "title": "USTCLUG",
      "project_url": "https://news.ustclug.org/2020/05/opensource-summer-projects/",
      "url": "https://lug.ustc.edu.cn/wiki/start",
      "description": "中科大 Linux 和开源软件爱好者团体。",
      "full_des": "中国科学技术大学学生 Linux 用户协会（科大 LUG）是由在校的 GNU/Linux 爱好者发起并组成的全校性群众团体,是一个以推广自由软件文化、宣传自由软件价值为目的的协会组织。",
      "tech_tag": [
        "Linux",
        "GNU"
      ],
      "domain_tag": [],
      "mail_list": "ustc_lug@googlegroups.com",
      "email": "lug@ustc.edu.cn",
      "project_list": [
        {
          "name": "科大镜像站前端架构改进",
          "difficulty": "低",
          "mentor": "付佳伟",
          "contact": "ibug@ustclug.org",
          "co-mentor": "陶柯宇 taoky@ustclug.org",
          "student_count": 0,
          "description": "目前,科大镜像站的前端架构仍然沿用着 2013 年的设计,但是随着时间的发展,我们也发现目前的镜像站前端架构在用户体验、维护与部署上带来了一些不便。目前的镜像站主页是由一套 Python 脚本每小时从模板生成得到的,虽然足够使用,但是在维护中也遇到了一些问题,诸如界面设计的实用性、主页与 status 页面显示不一致等问题。本项目希望能够通过调整镜像站前端架构,提高用户体验,降低维护的复杂度,也方便其他需要的镜像站部署页面显示的解决方案。",
          "update_time": "2020-05-13",
          "label": "2029138"
        },
        {
          "name": "Hackergame CTF 比赛平台改进",
          "difficulty": "中",
          "mentor": "王子博",
          "contact": "hypercube@0x01.me",
          "co-mentor": "陶柯宇 taoky@ustclug.org",
          "student_count": 0,
          "description": "Hackergame 是 USTCLUG 开发的一套开源 CTF 比赛平台,主要用于每年举办的科大信息安全大赛,随真实需求不断进行技术迭代,并且重视生产环境下的安全性和可靠性。目前使用的是 Django + Vue.js 框架,但前后端解耦仍然不够充分,代码中写死了一些不合理的规则,很多地方缺少通用性和灵活性,测试和部署也不够方便。本项目希望能通过调整架构设计,重构部分代码,得到一个更加通用、健壮的比赛平台,让将来比赛中的实际需求更容易实现。",
          "update_time": "2020-05-13",
          "label": "2029139"
        }
      ]
    },
    {
      "anchor": "volcano",
      "img": "vol.jpg",
      "title": "Volcano",
      "project_url": "https://github.com/volcano-sh/volcano/blob/master/docs/community/summer2020-cn.md",
      "url": "https://volcano.sh",
      "description": "云原生批量计算平台。",
      "full_des": "Volcano是基于Kubernetes构建的云原生批量计算引擎，基于华为云在AI、大数据领域的深厚业务积累，补齐了Kubernetes在面向AI、大数据、高性能计算等批量计算任务调度、编排等场景下的短板，向下支持鲲鹏、昇腾、X86等多元算力，向上使能TensorFlow、Spark、华为MindSpore等主流行业计算框架，让数据科学家和算法工程师充分享受到云原生技术所带来的高效计算与极致体验。",
      "tech_tag": [
        "云原生",
        "批量计算",
        "AI",
        "大数据",
        "Kubernetes",
        "容器",
        "golang"
      ],
      "domain_tag": [
        "云原生",
        "批量计算"
      ],
      "mail_list": "volcano-sh@googlegroups.com",
      "email": "volcano-sh@googlegroups.com",
      "project_list": [
        {
          "name": "Arm架构支持",
          "description": "Migrate to run volcano on arm64 platform",
          "difficulty": "低",
          "mentor": "Zhonghu Xu",
          "contact": "zhhxu2011@163.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-28",
          "label": ""
        },
        {
          "name": "官方文档",
          "description": "Redesign and reimplement the official website to support multi-versioned docs.",
          "difficulty": "中",
          "mentor": "Mada",
          "contact": "klaus1982.cn@gmail.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-28",
          "label": ""
        },
        {
          "name": "Volcano DAG引擎开发",
          "description": "HPC and Gene analysis need workload dependency, to implement a DAG engine in job controller.",
          "difficulty": "高",
          "mentor": "Leibo Wang",
          "contact": "wang.platform@hotmail.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-28",
          "label": ""
        },
        {
          "name": "Volcano工作流可视化UI开发",
          "description": "Implement a UI to show workloads status and dependency relationships.",
          "difficulty": "高",
          "mentor": "Zhonghu Xu",
          "contact": "zhhxu2011@163.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-28",
          "label": ""
        }
      ]
    },
    {
      "anchor": "wechaty",
      "img": "wechaty.jpg",
      "title": "Wechaty",
      "project_url": "https://github.com/wechaty/summer-of-code/issues/3",
      "url": "https://github.com/wechaty",
      "description": "Conversational AI RPA Chatbot SDK for Wechat Individual Account.",
      "full_des": "Wechaty 是一个开源聊天机器人框架SDK，具有高度封装、高可用的特性，支持NodeJs,  Python,  Go 和Java 等多语言版本。在过去的4年中，服务了数万名开发者，收获了 Github 的 8000 Star。同时配置了完整的DevOps体系并持续按照Apache 的方式管理技术社区。",
      "tech_tag": [
        "Conversational AI", 
        "NLP", 
        "TypeScript", 
        "Python", 
        "Go", 
        "Java"
      ],
      "domain_tag": [
        "Conversational AI",
        "NLP",
        "Chatbot"
      ],
      "mail_list": "wechaty@googlegroups.com",
      "email": "wechaty@chatie.io",
      "project_list": [
        {
          "name": "基于开放 API 封装 Wechaty 接口下的企业微信聊天机器人",
          "description": "企业需要将聊天记录储存并进行分析，但接口过于复杂，需要基于现有开放接口进行二次封装企业微信作为微信的企业版，提供多种API来满足企业的不同需求。而企业微信提供的会话存档功能能满足企业消息做留存、进而通过分析大量的消息数据优化工作流程、追责和质检这一需求。 但是，企业微信的会话存档接口因为安全要求很高，所以有很多的加密，解析等工作，虽然一方面保证了安全性，但是却大大增加了开发的难度。Wechaty是全球最大的开源聊天机器人框架，希望实现基于同一套应用层代码实现不同软件的聊天机器人 Wechaty 作为全球最大的聊天机器人开发者社区之一，提供了非常简单的接口实现，让开发者能够用6行代码就实现自己的一个聊天机器人，如果能把企业微信的会话存档接口封装到 Wechaty 里来，则可以大大简化企业内开发者的开发流程。因为 Wechaty 是建立在 puppet 系统之上的，puppet 是 Wechaty 依赖的一层抽象层，它定义了底层各个 IM 接入方案需要实现的接口，也正是因为 puppet 抽象层的存在，让很多 Wechaty 开发者可以仅仅通过一个变量，就能够随意切换不同的底层 IM 接入。",
          "difficulty": "高",
          "mentor": "高原",
          "contact": "gaoyuan@juzi.bot",
          "co-mentor": "李佳芮 rui@juzi.bot",
          "student_count": 0,
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "Wechaty Java 移植组件开发",
          "description": "Wechaty 使用 TypeScript 进行开发，目前 Java 移植版也在开发进程中。目前完成基本功能开发，可以实现部分 TypeScript 版本功能。需要继续对 StateSwitch，MemoryCard 等核心组件进行移植开发。 Wechaty是全球最大的开源聊天机器人框架，希望实现基于同一套应用层代码实现不同软件的聊天机器人 Wechaty 作为全球最大的聊天机器人开发者社区之一，提供了非常简单的接口实现，让开发者能够用6行代码就实现自己的一个聊天机器人，如果能把企业微信的会话存档接口封装到 Wechaty 里来，则可以大大简化企业内开发者的开发流程。因为 Wechaty 是建立在 puppet 系统之上的，puppet 是 Wechaty 依赖的一层抽象层，它定义了底层各个 IM 接入方案需要实现的接口，也正是因为 puppet 抽象层的存在，让很多 Wechaty 开发者可以仅仅通过一个变量，就能够随意切换不同的底层 IM 接入。",
          "difficulty": "低",
          "mentor": "刁政欣",
          "contact": "diaozxin@gmail.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "python-wechaty 自动化测试构建和发布",
          "description": "开源项目在不断迭代更新的过程中会存在很多的单元测试，项目构建和版本发布等任务，而这一系列的操作过程如果使用人力来完成的话，会存在大量的劳动力浪费，故需要一个自动化测试构建和发布的工具，而这个工具简称为CI/CD。Github有一套很完备的工具来完成这个过程。此次的项目主要是为python-wechaty开发一套Github自动化测试，构建和发布的流程。",
          "difficulty": "中",
          "mentor": "吴京京",
          "contact": "1435130236@qq.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "基于python-wechaty的群聊助手机器人",
          "description": "在实际工作和学习过程中，微信作为主要的沟通渠道工具，承载着主要的事件发布任务。可是由于群聊信息是依时间线展开，一旦信息数量过大，将导致历史消息难以寻找。故此时需要一款群聊助手机器人，能够根据引用消息的回复，提取出其中的历史消息，并将其打上对应的标签同时保存到服务器本地。消息是保存在群聊助手机器人内部中，群内人员只需要艾特助手机器人即可查询历史消息，同时会定时清除和展示一定时间段内的历史打标消息，同时还支持手动清除和展示历史打标消息。请基于python-wechaty制作一个群聊助手机器人，完成群聊消息打标任务。",
          "difficulty": "高",
          "mentor": "吴京京",
          "contact": "1435130236@qq.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "基于Python-wechaty建立一个斗图机器人",
          "description": "斗图功能是目前很多年轻人，甚至很多00后非常喜欢玩的，很受20岁左右的人的喜爱。目前市面上有很多斗图的软件，自动生成斗图的软件，还有很多自制的表情包也拿出来斗图，其下载量也还是不错的。所以说，在此背景下，开发出一款基于Python-wechaty的斗图机器人也是不错的。",
          "difficulty": "中",
          "mentor": "黄纯洪",
          "contact": "huangaszaq@gmail.com",
          "co-mentor": "",
          "student_count": 0,
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "Go-wechaty Github Action optimization",
          "description": "Github Action 已经发布有段时间了，在 go-wechaty 的 单元测试，代码检测和代码评级均有已有所落地。但是 Github Action 的玩法远非于此，如果你对 Github 平台很有兴趣，我想你可以基于此学到更多的玩法。在这里你可以获得相应的技术指导，可以获得项目的持续集成等知识。",
          "difficulty": "中",
          "mentor": "丁小雨",
          "contact": "614422099@qq.com",
          "co-mentor": "丁超飞<dchaofei@163.com> 李博杰<silkage@silkage.net>",
          "student_count": 0,
          "update_time": "2020-05-29",
          "label": ""
        },
        {
          "name": "为 go-wechaty 设计实现 插件体系",
          "description": "wechaty 是一个款支持多协议的微信接入方案，随着社区多语言生态的建立，吸引了更多的开发者和爱好者的加入；同时需求的推动和技术的发展，插件系统逐渐完善，但是在多语言系统中 Plugin 体系尚未完成，我们希望通过这个任务，能够让更多的人加入 go-wechaty 的建设。目前 go-wechaty examples/ding-dong-bot.go 有一个 ding-dong bot, 但是我们希望这个 ding-dong 是通用的，如果我们的 Plugin 体系能编写出来，也许实现 ding-dong 就只需要一行代码。",
          "difficulty": "中",
          "mentor": "丁小雨",
          "contact": "614422099@qq.com",
          "co-mentor": "丁超飞<dchaofei@163.com> 李博杰<silkage@silkage.net>",
          "student_count": 0,
          "update_time": "2020-05-29",
          "label": ""
        }
      ]
    }
  ],
  "creditList": [
    {
      "name": "开源社",
      "img": "logo4.jpg",
      "url": "https://kaiyuanshe.cn/"
    },
    {
      "name": "oschina",
      "img": "logo5.jpg",
      "url": "https://www.oschina.net"
    },
    {
      "name": "思否",
      "img": "logo6.jpg",
      "url": "https://www.segmentfault.com/"
    },
    {
      "name": "wuhan2020",
      "img": "wuhan2020.jpg",
      "url": "https://community.wuhan2020.org.cn/zh-cn/"
    },
    {
      "name": "芽木科技",
      "img": "c_yamukeji.jpg",
      "url": ""
    }
  ]
}
